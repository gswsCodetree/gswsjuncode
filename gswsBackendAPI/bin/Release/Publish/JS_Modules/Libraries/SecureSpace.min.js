
/*
 Library : SecureSpace 1.1
 Author  : Venkatesh Nelli
 Version : 3.0
 License : GNU General Public License v3.0
 */

function base64url(e) { return encodedSource = CryptoJS.enc.Base64.stringify(e), encodedSource = encodedSource.replace(/=+$/, ""), encodedSource = encodedSource.replace(/\+/g, "-"), encodedSource = encodedSource.replace(/\//g, "_"), encodedSource } function Encrypt_Data(e, t, r) { if (16 == t.length) { if (16 == r.length) { var n = CryptoJS.enc.Utf8.parse(t), s = CryptoJS.enc.Utf8.parse(r); return CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(e), n, { keySize: 16, iv: s, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }).toString() } console.log("IV value should be 16 digit long for data Decryption") } else console.log("Key value should be 16 digit long for data Encryption") } function Decrypt_Data(e, t, r) { if (16 == t.length) { if (16 == r.length) { var n = CryptoJS.enc.Utf8.parse(t), s = CryptoJS.enc.Utf8.parse(r); return CryptoJS.AES.decrypt(e, n, { keySize: 16, iv: s, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }).toString(CryptoJS.enc.Utf8) } console.log("IV value should be 16 digit long for data Decryption") } else console.log("Key value should be 16 digit long for data Encryption") } function random_key_generator(e) { for (var t = "", r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", n = 0; n < e; n++)t += r.charAt(Math.floor(Math.random() * r.length)); return t } !function (e, t) { "object" == typeof exports ? module.exports = exports = t() : "function" == typeof define && define.amd ? define([], t) : e.CryptoJS = t() }(this, function () { var y, r, e, t, n, c, s, i, a, o, h, l, u, p, m, f, d, S, g, v, C, T, _, B, w, I, A, x, b, E, D, R, k, M, H, F, N, P, O, U, z, L, G, W, K, j, q, Q, J, X, V, Z, $, Y, ee, te, re, ne, se, ie, ae, oe, he, le, ye, ce, ue, pe, me, fe, de, Se, ge, ve, Ce, Te, _e, Be, we, Ie, Ae, xe, be = be || (y = Math, r = Object.create || function () { function r() { } return function (e) { var t; return r.prototype = e, t = new r, r.prototype = null, t } }(), t = (e = {}).lib = {}, n = t.Base = { extend: function (e) { var t = r(this); return e && t.mixIn(e), t.hasOwnProperty("init") && this.init !== t.init || (t.init = function () { t.$super.init.apply(this, arguments) }), (t.init.prototype = t).$super = this, t }, create: function () { var e = this.extend(); return e.init.apply(e, arguments), e }, init: function () { }, mixIn: function (e) { for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]); e.hasOwnProperty("toString") && (this.toString = e.toString) }, clone: function () { return this.init.prototype.extend(this) } }, c = t.WordArray = n.extend({ init: function (e, t) { e = this.words = e || [], this.sigBytes = null != t ? t : 4 * e.length }, toString: function (e) { return (e || i).stringify(this) }, concat: function (e) { var t = this.words, r = e.words, n = this.sigBytes, s = e.sigBytes; if (this.clamp(), n % 4) for (var i = 0; i < s; i++) { var a = r[i >>> 2] >>> 24 - i % 4 * 8 & 255; t[n + i >>> 2] |= a << 24 - (n + i) % 4 * 8 } else for (i = 0; i < s; i += 4)t[n + i >>> 2] = r[i >>> 2]; return this.sigBytes += s, this }, clamp: function () { var e = this.words, t = this.sigBytes; e[t >>> 2] &= 4294967295 << 32 - t % 4 * 8, e.length = y.ceil(t / 4) }, clone: function () { var e = n.clone.call(this); return e.words = this.words.slice(0), e }, random: function (e) { for (var t, r = [], n = function (t) { t = t; var r = 987654321, n = 4294967295; return function () { var e = ((r = 36969 * (65535 & r) + (r >> 16) & n) << 16) + (t = 18e3 * (65535 & t) + (t >> 16) & n) & n; return e /= 4294967296, (e += .5) * (.5 < y.random() ? 1 : -1) } }, s = 0; s < e; s += 4) { var i = n(4294967296 * (t || y.random())); t = 987654071 * i(), r.push(4294967296 * i() | 0) } return new c.init(r, e) } }), s = e.enc = {}, i = s.Hex = { stringify: function (e) { for (var t = e.words, r = e.sigBytes, n = [], s = 0; s < r; s++) { var i = t[s >>> 2] >>> 24 - s % 4 * 8 & 255; n.push((i >>> 4).toString(16)), n.push((15 & i).toString(16)) } return n.join("") }, parse: function (e) { for (var t = e.length, r = [], n = 0; n < t; n += 2)r[n >>> 3] |= parseInt(e.substr(n, 2), 16) << 24 - n % 8 * 4; return new c.init(r, t / 2) } }, a = s.Latin1 = { stringify: function (e) { for (var t = e.words, r = e.sigBytes, n = [], s = 0; s < r; s++) { var i = t[s >>> 2] >>> 24 - s % 4 * 8 & 255; n.push(String.fromCharCode(i)) } return n.join("") }, parse: function (e) { for (var t = e.length, r = [], n = 0; n < t; n++)r[n >>> 2] |= (255 & e.charCodeAt(n)) << 24 - n % 4 * 8; return new c.init(r, t) } }, o = s.Utf8 = { stringify: function (e) { try { return decodeURIComponent(escape(a.stringify(e))) } catch (e) { throw new Error("Malformed UTF-8 data") } }, parse: function (e) { return a.parse(unescape(encodeURIComponent(e))) } }, h = t.BufferedBlockAlgorithm = n.extend({ reset: function () { this._data = new c.init, this._nDataBytes = 0 }, _append: function (e) { "string" == typeof e && (e = o.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes }, _process: function (e) { var t = this._data, r = t.words, n = t.sigBytes, s = this.blockSize, i = n / (4 * s), a = (i = e ? y.ceil(i) : y.max((0 | i) - this._minBufferSize, 0)) * s, o = y.min(4 * a, n); if (a) { for (var h = 0; h < a; h += s)this._doProcessBlock(r, h); var l = r.splice(0, a); t.sigBytes -= o } return new c.init(l, o) }, clone: function () { var e = n.clone.call(this); return e._data = this._data.clone(), e }, _minBufferSize: 0 }), t.Hasher = h.extend({ cfg: n.extend(), init: function (e) { this.cfg = this.cfg.extend(e), this.reset() }, reset: function () { h.reset.call(this), this._doReset() }, update: function (e) { return this._append(e), this._process(), this }, finalize: function (e) { return e && this._append(e), this._doFinalize() }, blockSize: 16, _createHelper: function (r) { return function (e, t) { return new r.init(t).finalize(e) } }, _createHmacHelper: function (r) { return function (e, t) { return new l.HMAC.init(r, t).finalize(e) } } }), l = e.algo = {}, e); return xe = (Ae = be).lib.WordArray, Ae.enc.Base64 = { stringify: function (e) { var t = e.words, r = e.sigBytes, n = this._map; e.clamp(); for (var s = [], i = 0; i < r; i += 3)for (var a = (t[i >>> 2] >>> 24 - i % 4 * 8 & 255) << 16 | (t[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255) << 8 | t[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255, o = 0; o < 4 && i + .75 * o < r; o++)s.push(n.charAt(a >>> 6 * (3 - o) & 63)); var h = n.charAt(64); if (h) for (; s.length % 4;)s.push(h); return s.join("") }, parse: function (e) { var t = e.length, r = this._map, n = this._reverseMap; if (!n) { n = this._reverseMap = []; for (var s = 0; s < r.length; s++)n[r.charCodeAt(s)] = s } var i = r.charAt(64); if (i) { var a = e.indexOf(i); -1 !== a && (t = a) } return function (e, t, r) { for (var n = [], s = 0, i = 0; i < t; i++)if (i % 4) { var a = r[e.charCodeAt(i - 1)] << i % 4 * 2, o = r[e.charCodeAt(i)] >>> 6 - i % 4 * 2; n[s >>> 2] |= (a | o) << 24 - s % 4 * 8, s++ } return xe.create(n, s) }(e, t, n) }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" }, function (y) { function A(e, t, r, n, s, i, a) { var o = e + (t & r | ~t & n) + s + a; return (o << i | o >>> 32 - i) + t } function x(e, t, r, n, s, i, a) { var o = e + (t & n | r & ~n) + s + a; return (o << i | o >>> 32 - i) + t } function b(e, t, r, n, s, i, a) { var o = e + (t ^ r ^ n) + s + a; return (o << i | o >>> 32 - i) + t } function E(e, t, r, n, s, i, a) { var o = e + (r ^ (t | ~n)) + s + a; return (o << i | o >>> 32 - i) + t } var e = be, t = e.lib, r = t.WordArray, n = t.Hasher, s = e.algo, D = []; !function () { for (var e = 0; e < 64; e++)D[e] = 4294967296 * y.abs(y.sin(e + 1)) | 0 }(); var i = s.MD5 = n.extend({ _doReset: function () { this._hash = new r.init([1732584193, 4023233417, 2562383102, 271733878]) }, _doProcessBlock: function (e, t) { for (var r = 0; r < 16; r++) { var n = t + r, s = e[n]; e[n] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8) } var i = this._hash.words, a = e[t + 0], o = e[t + 1], h = e[t + 2], l = e[t + 3], y = e[t + 4], c = e[t + 5], u = e[t + 6], p = e[t + 7], m = e[t + 8], f = e[t + 9], d = e[t + 10], S = e[t + 11], g = e[t + 12], v = e[t + 13], C = e[t + 14], T = e[t + 15], _ = i[0], B = i[1], w = i[2], I = i[3]; B = E(B = E(B = E(B = E(B = b(B = b(B = b(B = b(B = x(B = x(B = x(B = x(B = A(B = A(B = A(B = A(B, w = A(w, I = A(I, _ = A(_, B, w, I, a, 7, D[0]), B, w, o, 12, D[1]), _, B, h, 17, D[2]), I, _, l, 22, D[3]), w = A(w, I = A(I, _ = A(_, B, w, I, y, 7, D[4]), B, w, c, 12, D[5]), _, B, u, 17, D[6]), I, _, p, 22, D[7]), w = A(w, I = A(I, _ = A(_, B, w, I, m, 7, D[8]), B, w, f, 12, D[9]), _, B, d, 17, D[10]), I, _, S, 22, D[11]), w = A(w, I = A(I, _ = A(_, B, w, I, g, 7, D[12]), B, w, v, 12, D[13]), _, B, C, 17, D[14]), I, _, T, 22, D[15]), w = x(w, I = x(I, _ = x(_, B, w, I, o, 5, D[16]), B, w, u, 9, D[17]), _, B, S, 14, D[18]), I, _, a, 20, D[19]), w = x(w, I = x(I, _ = x(_, B, w, I, c, 5, D[20]), B, w, d, 9, D[21]), _, B, T, 14, D[22]), I, _, y, 20, D[23]), w = x(w, I = x(I, _ = x(_, B, w, I, f, 5, D[24]), B, w, C, 9, D[25]), _, B, l, 14, D[26]), I, _, m, 20, D[27]), w = x(w, I = x(I, _ = x(_, B, w, I, v, 5, D[28]), B, w, h, 9, D[29]), _, B, p, 14, D[30]), I, _, g, 20, D[31]), w = b(w, I = b(I, _ = b(_, B, w, I, c, 4, D[32]), B, w, m, 11, D[33]), _, B, S, 16, D[34]), I, _, C, 23, D[35]), w = b(w, I = b(I, _ = b(_, B, w, I, o, 4, D[36]), B, w, y, 11, D[37]), _, B, p, 16, D[38]), I, _, d, 23, D[39]), w = b(w, I = b(I, _ = b(_, B, w, I, v, 4, D[40]), B, w, a, 11, D[41]), _, B, l, 16, D[42]), I, _, u, 23, D[43]), w = b(w, I = b(I, _ = b(_, B, w, I, f, 4, D[44]), B, w, g, 11, D[45]), _, B, T, 16, D[46]), I, _, h, 23, D[47]), w = E(w, I = E(I, _ = E(_, B, w, I, a, 6, D[48]), B, w, p, 10, D[49]), _, B, C, 15, D[50]), I, _, c, 21, D[51]), w = E(w, I = E(I, _ = E(_, B, w, I, g, 6, D[52]), B, w, l, 10, D[53]), _, B, d, 15, D[54]), I, _, o, 21, D[55]), w = E(w, I = E(I, _ = E(_, B, w, I, m, 6, D[56]), B, w, T, 10, D[57]), _, B, u, 15, D[58]), I, _, v, 21, D[59]), w = E(w, I = E(I, _ = E(_, B, w, I, y, 6, D[60]), B, w, S, 10, D[61]), _, B, h, 15, D[62]), I, _, f, 21, D[63]), i[0] = i[0] + _ | 0, i[1] = i[1] + B | 0, i[2] = i[2] + w | 0, i[3] = i[3] + I | 0 }, _doFinalize: function () { var e = this._data, t = e.words, r = 8 * this._nDataBytes, n = 8 * e.sigBytes; t[n >>> 5] |= 128 << 24 - n % 32; var s = y.floor(r / 4294967296), i = r; t[15 + (n + 64 >>> 9 << 4)] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), t[14 + (n + 64 >>> 9 << 4)] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8), e.sigBytes = 4 * (t.length + 1), this._process(); for (var a = this._hash, o = a.words, h = 0; h < 4; h++) { var l = o[h]; o[h] = 16711935 & (l << 8 | l >>> 24) | 4278255360 & (l << 24 | l >>> 8) } return a }, clone: function () { var e = n.clone.call(this); return e._hash = this._hash.clone(), e } }); e.MD5 = n._createHelper(i), e.HmacMD5 = n._createHmacHelper(i) }(Math), Ce = (ve = be).lib, Te = Ce.WordArray, _e = Ce.Hasher, Be = ve.algo, we = [], Ie = Be.SHA1 = _e.extend({ _doReset: function () { this._hash = new Te.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]) }, _doProcessBlock: function (e, t) { for (var r = this._hash.words, n = r[0], s = r[1], i = r[2], a = r[3], o = r[4], h = 0; h < 80; h++) { if (h < 16) we[h] = 0 | e[t + h]; else { var l = we[h - 3] ^ we[h - 8] ^ we[h - 14] ^ we[h - 16]; we[h] = l << 1 | l >>> 31 } var y = (n << 5 | n >>> 27) + o + we[h]; y += h < 20 ? 1518500249 + (s & i | ~s & a) : h < 40 ? 1859775393 + (s ^ i ^ a) : h < 60 ? (s & i | s & a | i & a) - 1894007588 : (s ^ i ^ a) - 899497514, o = a, a = i, i = s << 30 | s >>> 2, s = n, n = y } r[0] = r[0] + n | 0, r[1] = r[1] + s | 0, r[2] = r[2] + i | 0, r[3] = r[3] + a | 0, r[4] = r[4] + o | 0 }, _doFinalize: function () { var e = this._data, t = e.words, r = 8 * this._nDataBytes, n = 8 * e.sigBytes; return t[n >>> 5] |= 128 << 24 - n % 32, t[14 + (n + 64 >>> 9 << 4)] = Math.floor(r / 4294967296), t[15 + (n + 64 >>> 9 << 4)] = r, e.sigBytes = 4 * t.length, this._process(), this._hash }, clone: function () { var e = _e.clone.call(this); return e._hash = this._hash.clone(), e } }), ve.SHA1 = _e._createHelper(Ie), ve.HmacSHA1 = _e._createHmacHelper(Ie), function (s) { var e = be, t = e.lib, r = t.WordArray, n = t.Hasher, i = e.algo, a = [], v = []; !function () { function e(e) { for (var t = s.sqrt(e), r = 2; r <= t; r++)if (!(e % r)) return !1; return !0 } function t(e) { return 4294967296 * (e - (0 | e)) | 0 } for (var r = 2, n = 0; n < 64;)e(r) && (n < 8 && (a[n] = t(s.pow(r, .5))), v[n] = t(s.pow(r, 1 / 3)), n++), r++ }(); var C = [], o = i.SHA256 = n.extend({ _doReset: function () { this._hash = new r.init(a.slice(0)) }, _doProcessBlock: function (e, t) { for (var r = this._hash.words, n = r[0], s = r[1], i = r[2], a = r[3], o = r[4], h = r[5], l = r[6], y = r[7], c = 0; c < 64; c++) { if (c < 16) C[c] = 0 | e[t + c]; else { var u = C[c - 15], p = (u << 25 | u >>> 7) ^ (u << 14 | u >>> 18) ^ u >>> 3, m = C[c - 2], f = (m << 15 | m >>> 17) ^ (m << 13 | m >>> 19) ^ m >>> 10; C[c] = p + C[c - 7] + f + C[c - 16] } var d = n & s ^ n & i ^ s & i, S = (n << 30 | n >>> 2) ^ (n << 19 | n >>> 13) ^ (n << 10 | n >>> 22), g = y + ((o << 26 | o >>> 6) ^ (o << 21 | o >>> 11) ^ (o << 7 | o >>> 25)) + (o & h ^ ~o & l) + v[c] + C[c]; y = l, l = h, h = o, o = a + g | 0, a = i, i = s, s = n, n = g + (S + d) | 0 } r[0] = r[0] + n | 0, r[1] = r[1] + s | 0, r[2] = r[2] + i | 0, r[3] = r[3] + a | 0, r[4] = r[4] + o | 0, r[5] = r[5] + h | 0, r[6] = r[6] + l | 0, r[7] = r[7] + y | 0 }, _doFinalize: function () { var e = this._data, t = e.words, r = 8 * this._nDataBytes, n = 8 * e.sigBytes; return t[n >>> 5] |= 128 << 24 - n % 32, t[14 + (n + 64 >>> 9 << 4)] = s.floor(r / 4294967296), t[15 + (n + 64 >>> 9 << 4)] = r, e.sigBytes = 4 * t.length, this._process(), this._hash }, clone: function () { var e = n.clone.call(this); return e._hash = this._hash.clone(), e } }); e.SHA256 = n._createHelper(o), e.HmacSHA256 = n._createHmacHelper(o) }(Math), function () { function a(e) { return e << 8 & 4278255360 | e >>> 8 & 16711935 } var e = be, s = e.lib.WordArray, t = e.enc; t.Utf16 = t.Utf16BE = { stringify: function (e) { for (var t = e.words, r = e.sigBytes, n = [], s = 0; s < r; s += 2) { var i = t[s >>> 2] >>> 16 - s % 4 * 8 & 65535; n.push(String.fromCharCode(i)) } return n.join("") }, parse: function (e) { for (var t = e.length, r = [], n = 0; n < t; n++)r[n >>> 1] |= e.charCodeAt(n) << 16 - n % 2 * 16; return s.create(r, 2 * t) } }, t.Utf16LE = { stringify: function (e) { for (var t = e.words, r = e.sigBytes, n = [], s = 0; s < r; s += 2) { var i = a(t[s >>> 2] >>> 16 - s % 4 * 8 & 65535); n.push(String.fromCharCode(i)) } return n.join("") }, parse: function (e) { for (var t = e.length, r = [], n = 0; n < t; n++)r[n >>> 1] |= a(e.charCodeAt(n) << 16 - n % 2 * 16); return s.create(r, 2 * t) } } }(), function () { if ("function" == typeof ArrayBuffer) { var e = be.lib.WordArray, s = e.init; (e.init = function (e) { if (e instanceof ArrayBuffer && (e = new Uint8Array(e)), (e instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && e instanceof Uint8ClampedArray || e instanceof Int16Array || e instanceof Uint16Array || e instanceof Int32Array || e instanceof Uint32Array || e instanceof Float32Array || e instanceof Float64Array) && (e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength)), e instanceof Uint8Array) { for (var t = e.byteLength, r = [], n = 0; n < t; n++)r[n >>> 2] |= e[n] << 24 - n % 4 * 8; s.call(this, r, t) } else s.apply(this, arguments) }).prototype = e } }(), function (e) { function B(e, t, r) { return e ^ t ^ r } function w(e, t, r) { return e & t | ~e & r } function I(e, t, r) { return (e | ~t) ^ r } function A(e, t, r) { return e & r | t & ~r } function x(e, t, r) { return e ^ (t | ~r) } function b(e, t) { return e << t | e >>> 32 - t } var t = be, r = t.lib, n = r.WordArray, s = r.Hasher, i = t.algo, E = n.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), D = n.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), R = n.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), k = n.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), M = n.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), H = n.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), a = i.RIPEMD160 = s.extend({ _doReset: function () { this._hash = n.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]) }, _doProcessBlock: function (e, t) { for (var r = 0; r < 16; r++) { var n = t + r, s = e[n]; e[n] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8) } var i, a, o, h, l, y, c, u, p, m, f = this._hash.words, d = M.words, S = H.words, g = E.words, v = D.words, C = R.words, T = k.words; y = i = f[0], c = a = f[1], u = o = f[2], p = h = f[3], m = l = f[4]; var _; for (r = 0; r < 80; r += 1)_ = i + e[t + g[r]] | 0, _ += r < 16 ? B(a, o, h) + d[0] : r < 32 ? w(a, o, h) + d[1] : r < 48 ? I(a, o, h) + d[2] : r < 64 ? A(a, o, h) + d[3] : x(a, o, h) + d[4], _ = (_ = b(_ |= 0, C[r])) + l | 0, i = l, l = h, h = b(o, 10), o = a, a = _, _ = y + e[t + v[r]] | 0, _ += r < 16 ? x(c, u, p) + S[0] : r < 32 ? A(c, u, p) + S[1] : r < 48 ? I(c, u, p) + S[2] : r < 64 ? w(c, u, p) + S[3] : B(c, u, p) + S[4], _ = (_ = b(_ |= 0, T[r])) + m | 0, y = m, m = p, p = b(u, 10), u = c, c = _; _ = f[1] + o + p | 0, f[1] = f[2] + h + m | 0, f[2] = f[3] + l + y | 0, f[3] = f[4] + i + c | 0, f[4] = f[0] + a + u | 0, f[0] = _ }, _doFinalize: function () { var e = this._data, t = e.words, r = 8 * this._nDataBytes, n = 8 * e.sigBytes; t[n >>> 5] |= 128 << 24 - n % 32, t[14 + (n + 64 >>> 9 << 4)] = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8), e.sigBytes = 4 * (t.length + 1), this._process(); for (var s = this._hash, i = s.words, a = 0; a < 5; a++) { var o = i[a]; i[a] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8) } return s }, clone: function () { var e = s.clone.call(this); return e._hash = this._hash.clone(), e } }); t.RIPEMD160 = s._createHelper(a), t.HmacRIPEMD160 = s._createHmacHelper(a) }(Math), Se = (de = be).lib.Base, ge = de.enc.Utf8, de.algo.HMAC = Se.extend({ init: function (e, t) { e = this._hasher = new e.init, "string" == typeof t && (t = ge.parse(t)); var r = e.blockSize, n = 4 * r; t.sigBytes > n && (t = e.finalize(t)), t.clamp(); for (var s = this._oKey = t.clone(), i = this._iKey = t.clone(), a = s.words, o = i.words, h = 0; h < r; h++)a[h] ^= 1549556828, o[h] ^= 909522486; s.sigBytes = i.sigBytes = n, this.reset() }, reset: function () { var e = this._hasher; e.reset(), e.update(this._iKey) }, update: function (e) { return this._hasher.update(e), this }, finalize: function (e) { var t = this._hasher, r = t.finalize(e); return t.reset(), t.finalize(this._oKey.clone().concat(r)) } }), le = (he = be).lib, ye = le.Base, ce = le.WordArray, ue = he.algo, pe = ue.SHA1, me = ue.HMAC, fe = ue.PBKDF2 = ye.extend({ cfg: ye.extend({ keySize: 4, hasher: pe, iterations: 1 }), init: function (e) { this.cfg = this.cfg.extend(e) }, compute: function (e, t) { for (var r = this.cfg, n = me.create(r.hasher, e), s = ce.create(), i = ce.create([1]), a = s.words, o = i.words, h = r.keySize, l = r.iterations; a.length < h;) { var y = n.update(t).finalize(i); n.reset(); for (var c = y.words, u = c.length, p = y, m = 1; m < l; m++) { p = n.finalize(p), n.reset(); for (var f = p.words, d = 0; d < u; d++)c[d] ^= f[d] } s.concat(y), o[0]++ } return s.sigBytes = 4 * h, s } }), he.PBKDF2 = function (e, t, r) { return fe.create(r).compute(e, t) }, re = (te = be).lib, ne = re.Base, se = re.WordArray, ie = te.algo, ae = ie.MD5, oe = ie.EvpKDF = ne.extend({ cfg: ne.extend({ keySize: 4, hasher: ae, iterations: 1 }), init: function (e) { this.cfg = this.cfg.extend(e) }, compute: function (e, t) { for (var r = this.cfg, n = r.hasher.create(), s = se.create(), i = s.words, a = r.keySize, o = r.iterations; i.length < a;) { h && n.update(h); var h = n.update(e).finalize(t); n.reset(); for (var l = 1; l < o; l++)h = n.finalize(h), n.reset(); s.concat(h) } return s.sigBytes = 4 * a, s } }), te.EvpKDF = function (e, t, r) { return oe.create(r).compute(e, t) }, Z = (V = be).lib.WordArray, $ = V.algo, Y = $.SHA256, ee = $.SHA224 = Y.extend({ _doReset: function () { this._hash = new Z.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]) }, _doFinalize: function () { var e = Y._doFinalize.call(this); return e.sigBytes -= 4, e } }), V.SHA224 = Y._createHelper(ee), V.HmacSHA224 = Y._createHmacHelper(ee), q = (j = be).lib, Q = q.Base, J = q.WordArray, (X = j.x64 = {}).Word = Q.extend({ init: function (e, t) { this.high = e, this.low = t } }), X.WordArray = Q.extend({ init: function (e, t) { e = this.words = e || [], this.sigBytes = null != t ? t : 8 * e.length }, toX32: function () { for (var e = this.words, t = e.length, r = [], n = 0; n < t; n++) { var s = e[n]; r.push(s.high), r.push(s.low) } return J.create(r, this.sigBytes) }, clone: function () { for (var e = Q.clone.call(this), t = e.words = this.words.slice(0), r = t.length, n = 0; n < r; n++)t[n] = t[n].clone(); return e } }), function (u) { var e = be, t = e.lib, p = t.WordArray, n = t.Hasher, y = e.x64.Word, r = e.algo, E = [], D = [], R = []; !function () { for (var e = 1, t = 0, r = 0; r < 24; r++) { E[e + 5 * t] = (r + 1) * (r + 2) / 2 % 64; var n = (2 * e + 3 * t) % 5; e = t % 5, t = n } for (e = 0; e < 5; e++)for (t = 0; t < 5; t++)D[e + 5 * t] = t + (2 * e + 3 * t) % 5 * 5; for (var s = 1, i = 0; i < 24; i++) { for (var a = 0, o = 0, h = 0; h < 7; h++) { if (1 & s) { var l = (1 << h) - 1; l < 32 ? o ^= 1 << l : a ^= 1 << l - 32 } 128 & s ? s = s << 1 ^ 113 : s <<= 1 } R[i] = y.create(a, o) } }(); var k = []; !function () { for (var e = 0; e < 25; e++)k[e] = y.create() }(); var s = r.SHA3 = n.extend({ cfg: n.cfg.extend({ outputLength: 512 }), _doReset: function () { for (var e = this._state = [], t = 0; t < 25; t++)e[t] = new y.init; this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32 }, _doProcessBlock: function (e, t) { for (var r = this._state, n = this.blockSize / 2, s = 0; s < n; s++) { var i = e[t + 2 * s], a = e[t + 2 * s + 1]; i = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8), a = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8), (w = r[s]).high ^= a, w.low ^= i } for (var o = 0; o < 24; o++) { for (var h = 0; h < 5; h++) { for (var l = 0, y = 0, c = 0; c < 5; c++) { l ^= (w = r[h + 5 * c]).high, y ^= w.low } var u = k[h]; u.high = l, u.low = y } for (h = 0; h < 5; h++) { var p = k[(h + 4) % 5], m = k[(h + 1) % 5], f = m.high, d = m.low; for (l = p.high ^ (f << 1 | d >>> 31), y = p.low ^ (d << 1 | f >>> 31), c = 0; c < 5; c++) { (w = r[h + 5 * c]).high ^= l, w.low ^= y } } for (var S = 1; S < 25; S++) { var g = (w = r[S]).high, v = w.low, C = E[S]; if (C < 32) l = g << C | v >>> 32 - C, y = v << C | g >>> 32 - C; else l = v << C - 32 | g >>> 64 - C, y = g << C - 32 | v >>> 64 - C; var T = k[D[S]]; T.high = l, T.low = y } var _ = k[0], B = r[0]; _.high = B.high, _.low = B.low; for (h = 0; h < 5; h++)for (c = 0; c < 5; c++) { var w = r[S = h + 5 * c], I = k[S], A = k[(h + 1) % 5 + 5 * c], x = k[(h + 2) % 5 + 5 * c]; w.high = I.high ^ ~A.high & x.high, w.low = I.low ^ ~A.low & x.low } w = r[0]; var b = R[o]; w.high ^= b.high, w.low ^= b.low } }, _doFinalize: function () { var e = this._data, t = e.words, r = (this._nDataBytes, 8 * e.sigBytes), n = 32 * this.blockSize; t[r >>> 5] |= 1 << 24 - r % 32, t[(u.ceil((r + 1) / n) * n >>> 5) - 1] |= 128, e.sigBytes = 4 * t.length, this._process(); for (var s = this._state, i = this.cfg.outputLength / 8, a = i / 8, o = [], h = 0; h < a; h++) { var l = s[h], y = l.high, c = l.low; y = 16711935 & (y << 8 | y >>> 24) | 4278255360 & (y << 24 | y >>> 8), c = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8), o.push(c), o.push(y) } return new p.init(o, i) }, clone: function () { for (var e = n.clone.call(this), t = e._state = this._state.slice(0), r = 0; r < 25; r++)t[r] = t[r].clone(); return e } }); e.SHA3 = n._createHelper(s), e.HmacSHA3 = n._createHmacHelper(s) }(Math), function () { function t() { return s.create.apply(s, arguments) } var e = be, r = e.lib.Hasher, n = e.x64, s = n.Word, i = n.WordArray, a = e.algo, Be = [t(1116352408, 3609767458), t(1899447441, 602891725), t(3049323471, 3964484399), t(3921009573, 2173295548), t(961987163, 4081628472), t(1508970993, 3053834265), t(2453635748, 2937671579), t(2870763221, 3664609560), t(3624381080, 2734883394), t(310598401, 1164996542), t(607225278, 1323610764), t(1426881987, 3590304994), t(1925078388, 4068182383), t(2162078206, 991336113), t(2614888103, 633803317), t(3248222580, 3479774868), t(3835390401, 2666613458), t(4022224774, 944711139), t(264347078, 2341262773), t(604807628, 2007800933), t(770255983, 1495990901), t(1249150122, 1856431235), t(1555081692, 3175218132), t(1996064986, 2198950837), t(2554220882, 3999719339), t(2821834349, 766784016), t(2952996808, 2566594879), t(3210313671, 3203337956), t(3336571891, 1034457026), t(3584528711, 2466948901), t(113926993, 3758326383), t(338241895, 168717936), t(666307205, 1188179964), t(773529912, 1546045734), t(1294757372, 1522805485), t(1396182291, 2643833823), t(1695183700, 2343527390), t(1986661051, 1014477480), t(2177026350, 1206759142), t(2456956037, 344077627), t(2730485921, 1290863460), t(2820302411, 3158454273), t(3259730800, 3505952657), t(3345764771, 106217008), t(3516065817, 3606008344), t(3600352804, 1432725776), t(4094571909, 1467031594), t(275423344, 851169720), t(430227734, 3100823752), t(506948616, 1363258195), t(659060556, 3750685593), t(883997877, 3785050280), t(958139571, 3318307427), t(1322822218, 3812723403), t(1537002063, 2003034995), t(1747873779, 3602036899), t(1955562222, 1575990012), t(2024104815, 1125592928), t(2227730452, 2716904306), t(2361852424, 442776044), t(2428436474, 593698344), t(2756734187, 3733110249), t(3204031479, 2999351573), t(3329325298, 3815920427), t(3391569614, 3928383900), t(3515267271, 566280711), t(3940187606, 3454069534), t(4118630271, 4000239992), t(116418474, 1914138554), t(174292421, 2731055270), t(289380356, 3203993006), t(460393269, 320620315), t(685471733, 587496836), t(852142971, 1086792851), t(1017036298, 365543100), t(1126000580, 2618297676), t(1288033470, 3409855158), t(1501505948, 4234509866), t(1607167915, 987167468), t(1816402316, 1246189591)], we = []; !function () { for (var e = 0; e < 80; e++)we[e] = t() }(); var o = a.SHA512 = r.extend({ _doReset: function () { this._hash = new i.init([new s.init(1779033703, 4089235720), new s.init(3144134277, 2227873595), new s.init(1013904242, 4271175723), new s.init(2773480762, 1595750129), new s.init(1359893119, 2917565137), new s.init(2600822924, 725511199), new s.init(528734635, 4215389547), new s.init(1541459225, 327033209)]) }, _doProcessBlock: function (e, t) { for (var r = this._hash.words, n = r[0], s = r[1], i = r[2], a = r[3], o = r[4], h = r[5], l = r[6], y = r[7], c = n.high, u = n.low, p = s.high, m = s.low, f = i.high, d = i.low, S = a.high, g = a.low, v = o.high, C = o.low, T = h.high, _ = h.low, B = l.high, w = l.low, I = y.high, A = y.low, x = c, b = u, E = p, D = m, R = f, k = d, M = S, H = g, F = v, N = C, P = T, O = _, U = B, z = w, L = I, G = A, W = 0; W < 80; W++) { var K = we[W]; if (W < 16) var j = K.high = 0 | e[t + 2 * W], q = K.low = 0 | e[t + 2 * W + 1]; else { var Q = we[W - 15], J = Q.high, X = Q.low, V = (J >>> 1 | X << 31) ^ (J >>> 8 | X << 24) ^ J >>> 7, Z = (X >>> 1 | J << 31) ^ (X >>> 8 | J << 24) ^ (X >>> 7 | J << 25), $ = we[W - 2], Y = $.high, ee = $.low, te = (Y >>> 19 | ee << 13) ^ (Y << 3 | ee >>> 29) ^ Y >>> 6, re = (ee >>> 19 | Y << 13) ^ (ee << 3 | Y >>> 29) ^ (ee >>> 6 | Y << 26), ne = we[W - 7], se = ne.high, ie = ne.low, ae = we[W - 16], oe = ae.high, he = ae.low; j = (j = (j = V + se + ((q = Z + ie) >>> 0 < Z >>> 0 ? 1 : 0)) + te + ((q = q + re) >>> 0 < re >>> 0 ? 1 : 0)) + oe + ((q = q + he) >>> 0 < he >>> 0 ? 1 : 0); K.high = j, K.low = q } var le, ye = F & P ^ ~F & U, ce = N & O ^ ~N & z, ue = x & E ^ x & R ^ E & R, pe = b & D ^ b & k ^ D & k, me = (x >>> 28 | b << 4) ^ (x << 30 | b >>> 2) ^ (x << 25 | b >>> 7), fe = (b >>> 28 | x << 4) ^ (b << 30 | x >>> 2) ^ (b << 25 | x >>> 7), de = (F >>> 14 | N << 18) ^ (F >>> 18 | N << 14) ^ (F << 23 | N >>> 9), Se = (N >>> 14 | F << 18) ^ (N >>> 18 | F << 14) ^ (N << 23 | F >>> 9), ge = Be[W], ve = ge.high, Ce = ge.low, Te = L + de + ((le = G + Se) >>> 0 < G >>> 0 ? 1 : 0), _e = fe + pe; L = U, G = z, U = P, z = O, P = F, O = N, F = M + (Te = (Te = (Te = Te + ye + ((le = le + ce) >>> 0 < ce >>> 0 ? 1 : 0)) + ve + ((le = le + Ce) >>> 0 < Ce >>> 0 ? 1 : 0)) + j + ((le = le + q) >>> 0 < q >>> 0 ? 1 : 0)) + ((N = H + le | 0) >>> 0 < H >>> 0 ? 1 : 0) | 0, M = R, H = k, R = E, k = D, E = x, D = b, x = Te + (me + ue + (_e >>> 0 < fe >>> 0 ? 1 : 0)) + ((b = le + _e | 0) >>> 0 < le >>> 0 ? 1 : 0) | 0 } u = n.low = u + b, n.high = c + x + (u >>> 0 < b >>> 0 ? 1 : 0), m = s.low = m + D, s.high = p + E + (m >>> 0 < D >>> 0 ? 1 : 0), d = i.low = d + k, i.high = f + R + (d >>> 0 < k >>> 0 ? 1 : 0), g = a.low = g + H, a.high = S + M + (g >>> 0 < H >>> 0 ? 1 : 0), C = o.low = C + N, o.high = v + F + (C >>> 0 < N >>> 0 ? 1 : 0), _ = h.low = _ + O, h.high = T + P + (_ >>> 0 < O >>> 0 ? 1 : 0), w = l.low = w + z, l.high = B + U + (w >>> 0 < z >>> 0 ? 1 : 0), A = y.low = A + G, y.high = I + L + (A >>> 0 < G >>> 0 ? 1 : 0) }, _doFinalize: function () { var e = this._data, t = e.words, r = 8 * this._nDataBytes, n = 8 * e.sigBytes; return t[n >>> 5] |= 128 << 24 - n % 32, t[30 + (n + 128 >>> 10 << 5)] = Math.floor(r / 4294967296), t[31 + (n + 128 >>> 10 << 5)] = r, e.sigBytes = 4 * t.length, this._process(), this._hash.toX32() }, clone: function () { var e = r.clone.call(this); return e._hash = this._hash.clone(), e }, blockSize: 32 }); e.SHA512 = r._createHelper(o), e.HmacSHA512 = r._createHmacHelper(o) }(), U = (O = be).x64, z = U.Word, L = U.WordArray, G = O.algo, W = G.SHA512, K = G.SHA384 = W.extend({ _doReset: function () { this._hash = new L.init([new z.init(3418070365, 3238371032), new z.init(1654270250, 914150663), new z.init(2438529370, 812702999), new z.init(355462360, 4144912697), new z.init(1731405415, 4290775857), new z.init(2394180231, 1750603025), new z.init(3675008525, 1694076839), new z.init(1203062813, 3204075428)]) }, _doFinalize: function () { var e = W._doFinalize.call(this); return e.sigBytes -= 16, e } }), O.SHA384 = W._createHelper(K), O.HmacSHA384 = W._createHmacHelper(K), be.lib.Cipher || (T = (C = be).lib, _ = T.Base, B = T.WordArray, w = T.BufferedBlockAlgorithm, (I = C.enc).Utf8, A = I.Base64, x = C.algo.EvpKDF, b = T.Cipher = w.extend({ cfg: _.extend(), createEncryptor: function (e, t) { return this.create(this._ENC_XFORM_MODE, e, t) }, createDecryptor: function (e, t) { return this.create(this._DEC_XFORM_MODE, e, t) }, init: function (e, t, r) { this.cfg = this.cfg.extend(r), this._xformMode = e, this._key = t, this.reset() }, reset: function () { w.reset.call(this), this._doReset() }, process: function (e) { return this._append(e), this._process() }, finalize: function (e) { return e && this._append(e), this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function () { function s(e) { return "string" == typeof e ? P : F } return function (n) { return { encrypt: function (e, t, r) { return s(t).encrypt(n, e, t, r) }, decrypt: function (e, t, r) { return s(t).decrypt(n, e, t, r) } } } }() }), T.StreamCipher = b.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }), E = C.mode = {}, D = T.BlockCipherMode = _.extend({ createEncryptor: function (e, t) { return this.Encryptor.create(e, t) }, createDecryptor: function (e, t) { return this.Decryptor.create(e, t) }, init: function (e, t) { this._cipher = e, this._iv = t } }), R = E.CBC = function () { function i(e, t, r) { var n = this._iv; if (n) { var s = n; this._iv = void 0 } else s = this._prevBlock; for (var i = 0; i < r; i++)e[t + i] ^= s[i] } var e = D.extend(); return e.Encryptor = e.extend({ processBlock: function (e, t) { var r = this._cipher, n = r.blockSize; i.call(this, e, t, n), r.encryptBlock(e, t), this._prevBlock = e.slice(t, t + n) } }), e.Decryptor = e.extend({ processBlock: function (e, t) { var r = this._cipher, n = r.blockSize, s = e.slice(t, t + n); r.decryptBlock(e, t), i.call(this, e, t, n), this._prevBlock = s } }), e }(), k = (C.pad = {}).Pkcs7 = { pad: function (e, t) { for (var r = 4 * t, n = r - e.sigBytes % r, s = n << 24 | n << 16 | n << 8 | n, i = [], a = 0; a < n; a += 4)i.push(s); var o = B.create(i, n); e.concat(o) }, unpad: function (e) { var t = 255 & e.words[e.sigBytes - 1 >>> 2]; e.sigBytes -= t } }, T.BlockCipher = b.extend({ cfg: b.cfg.extend({ mode: R, padding: k }), reset: function () { b.reset.call(this); var e = this.cfg, t = e.iv, r = e.mode; if (this._xformMode == this._ENC_XFORM_MODE) var n = r.createEncryptor; else { n = r.createDecryptor; this._minBufferSize = 1 } this._mode && this._mode.__creator == n ? this._mode.init(this, t && t.words) : (this._mode = n.call(r, this, t && t.words), this._mode.__creator = n) }, _doProcessBlock: function (e, t) { this._mode.processBlock(e, t) }, _doFinalize: function () { var e = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { e.pad(this._data, this.blockSize); var t = this._process(!0) } else { t = this._process(!0); e.unpad(t) } return t }, blockSize: 4 }), M = T.CipherParams = _.extend({ init: function (e) { this.mixIn(e) }, toString: function (e) { return (e || this.formatter).stringify(this) } }), H = (C.format = {}).OpenSSL = { stringify: function (e) { var t = e.ciphertext, r = e.salt; if (r) var n = B.create([1398893684, 1701076831]).concat(r).concat(t); else n = t; return n.toString(A) }, parse: function (e) { var t = A.parse(e), r = t.words; if (1398893684 == r[0] && 1701076831 == r[1]) { var n = B.create(r.slice(2, 4)); r.splice(0, 4), t.sigBytes -= 16 } return M.create({ ciphertext: t, salt: n }) } }, F = T.SerializableCipher = _.extend({ cfg: _.extend({ format: H }), encrypt: function (e, t, r, n) { n = this.cfg.extend(n); var s = e.createEncryptor(r, n), i = s.finalize(t), a = s.cfg; return M.create({ ciphertext: i, key: r, iv: a.iv, algorithm: e, mode: a.mode, padding: a.padding, blockSize: e.blockSize, formatter: n.format }) }, decrypt: function (e, t, r, n) { return n = this.cfg.extend(n), t = this._parse(t, n.format), e.createDecryptor(r, n).finalize(t.ciphertext) }, _parse: function (e, t) { return "string" == typeof e ? t.parse(e, this) : e } }), N = (C.kdf = {}).OpenSSL = { execute: function (e, t, r, n) { n || (n = B.random(8)); var s = x.create({ keySize: t + r }).compute(e, n), i = B.create(s.words.slice(t), 4 * r); return s.sigBytes = 4 * t, M.create({ key: s, iv: i, salt: n }) } }, P = T.PasswordBasedCipher = F.extend({ cfg: F.cfg.extend({ kdf: N }), encrypt: function (e, t, r, n) { var s = (n = this.cfg.extend(n)).kdf.execute(r, e.keySize, e.ivSize); n.iv = s.iv; var i = F.encrypt.call(this, e, t, s.key, n); return i.mixIn(s), i }, decrypt: function (e, t, r, n) { n = this.cfg.extend(n), t = this._parse(t, n.format); var s = n.kdf.execute(r, e.keySize, e.ivSize, t.salt); return n.iv = s.iv, F.decrypt.call(this, e, t, s.key, n) } })), be.mode.CFB = function () { function i(e, t, r, n) { var s = this._iv; if (s) { var i = s.slice(0); this._iv = void 0 } else i = this._prevBlock; n.encryptBlock(i, 0); for (var a = 0; a < r; a++)e[t + a] ^= i[a] } var e = be.lib.BlockCipherMode.extend(); return e.Encryptor = e.extend({ processBlock: function (e, t) { var r = this._cipher, n = r.blockSize; i.call(this, e, t, n, r), this._prevBlock = e.slice(t, t + n) } }), e.Decryptor = e.extend({ processBlock: function (e, t) { var r = this._cipher, n = r.blockSize, s = e.slice(t, t + n); i.call(this, e, t, n, r), this._prevBlock = s } }), e }(), be.mode.ECB = ((v = be.lib.BlockCipherMode.extend()).Encryptor = v.extend({ processBlock: function (e, t) { this._cipher.encryptBlock(e, t) } }), v.Decryptor = v.extend({ processBlock: function (e, t) { this._cipher.decryptBlock(e, t) } }), v), be.pad.AnsiX923 = { pad: function (e, t) { var r = e.sigBytes, n = 4 * t, s = n - r % n, i = r + s - 1; e.clamp(), e.words[i >>> 2] |= s << 24 - i % 4 * 8, e.sigBytes += s }, unpad: function (e) { var t = 255 & e.words[e.sigBytes - 1 >>> 2]; e.sigBytes -= t } }, be.pad.Iso10126 = { pad: function (e, t) { var r = 4 * t, n = r - e.sigBytes % r; e.concat(be.lib.WordArray.random(n - 1)).concat(be.lib.WordArray.create([n << 24], 1)) }, unpad: function (e) { var t = 255 & e.words[e.sigBytes - 1 >>> 2]; e.sigBytes -= t } }, be.pad.Iso97971 = { pad: function (e, t) { e.concat(be.lib.WordArray.create([2147483648], 1)), be.pad.ZeroPadding.pad(e, t) }, unpad: function (e) { be.pad.ZeroPadding.unpad(e), e.sigBytes-- } }, be.mode.OFB = (S = be.lib.BlockCipherMode.extend(), g = S.Encryptor = S.extend({ processBlock: function (e, t) { var r = this._cipher, n = r.blockSize, s = this._iv, i = this._keystream; s && (i = this._keystream = s.slice(0), this._iv = void 0), r.encryptBlock(i, 0); for (var a = 0; a < n; a++)e[t + a] ^= i[a] } }), S.Decryptor = g, S), be.pad.NoPadding = { pad: function () { }, unpad: function () { } }, f = (m = be).lib.CipherParams, d = m.enc.Hex, m.format.Hex = { stringify: function (e) { return e.ciphertext.toString(d) }, parse: function (e) { var t = d.parse(e); return f.create({ ciphertext: t }) } }, function () { var e = be, t = e.lib.BlockCipher, r = e.algo, l = [], y = [], c = [], u = [], p = [], m = [], f = [], d = [], S = [], g = []; !function () { for (var e = [], t = 0; t < 256; t++)e[t] = t < 128 ? t << 1 : t << 1 ^ 283; var r = 0, n = 0; for (t = 0; t < 256; t++) { var s = n ^ n << 1 ^ n << 2 ^ n << 3 ^ n << 4; s = s >>> 8 ^ 255 & s ^ 99, l[r] = s; var i = e[y[s] = r], a = e[i], o = e[a], h = 257 * e[s] ^ 16843008 * s; c[r] = h << 24 | h >>> 8, u[r] = h << 16 | h >>> 16, p[r] = h << 8 | h >>> 24, m[r] = h; h = 16843009 * o ^ 65537 * a ^ 257 * i ^ 16843008 * r; f[s] = h << 24 | h >>> 8, d[s] = h << 16 | h >>> 16, S[s] = h << 8 | h >>> 24, g[s] = h, r ? (r = i ^ e[e[e[o ^ i]]], n ^= e[e[n]]) : r = n = 1 } }(); var v = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], n = r.AES = t.extend({ _doReset: function () { if (!this._nRounds || this._keyPriorReset !== this._key) { for (var e = this._keyPriorReset = this._key, t = e.words, r = e.sigBytes / 4, n = 4 * ((this._nRounds = r + 6) + 1), s = this._keySchedule = [], i = 0; i < n; i++)if (i < r) s[i] = t[i]; else { var a = s[i - 1]; i % r ? 6 < r && i % r == 4 && (a = l[a >>> 24] << 24 | l[a >>> 16 & 255] << 16 | l[a >>> 8 & 255] << 8 | l[255 & a]) : (a = l[(a = a << 8 | a >>> 24) >>> 24] << 24 | l[a >>> 16 & 255] << 16 | l[a >>> 8 & 255] << 8 | l[255 & a], a ^= v[i / r | 0] << 24), s[i] = s[i - r] ^ a } for (var o = this._invKeySchedule = [], h = 0; h < n; h++) { i = n - h; if (h % 4) a = s[i]; else a = s[i - 4]; o[h] = h < 4 || i <= 4 ? a : f[l[a >>> 24]] ^ d[l[a >>> 16 & 255]] ^ S[l[a >>> 8 & 255]] ^ g[l[255 & a]] } } }, encryptBlock: function (e, t) { this._doCryptBlock(e, t, this._keySchedule, c, u, p, m, l) }, decryptBlock: function (e, t) { var r = e[t + 1]; e[t + 1] = e[t + 3], e[t + 3] = r, this._doCryptBlock(e, t, this._invKeySchedule, f, d, S, g, y); r = e[t + 1]; e[t + 1] = e[t + 3], e[t + 3] = r }, _doCryptBlock: function (e, t, r, n, s, i, a, o) { for (var h = this._nRounds, l = e[t] ^ r[0], y = e[t + 1] ^ r[1], c = e[t + 2] ^ r[2], u = e[t + 3] ^ r[3], p = 4, m = 1; m < h; m++) { var f = n[l >>> 24] ^ s[y >>> 16 & 255] ^ i[c >>> 8 & 255] ^ a[255 & u] ^ r[p++], d = n[y >>> 24] ^ s[c >>> 16 & 255] ^ i[u >>> 8 & 255] ^ a[255 & l] ^ r[p++], S = n[c >>> 24] ^ s[u >>> 16 & 255] ^ i[l >>> 8 & 255] ^ a[255 & y] ^ r[p++], g = n[u >>> 24] ^ s[l >>> 16 & 255] ^ i[y >>> 8 & 255] ^ a[255 & c] ^ r[p++]; l = f, y = d, c = S, u = g } f = (o[l >>> 24] << 24 | o[y >>> 16 & 255] << 16 | o[c >>> 8 & 255] << 8 | o[255 & u]) ^ r[p++], d = (o[y >>> 24] << 24 | o[c >>> 16 & 255] << 16 | o[u >>> 8 & 255] << 8 | o[255 & l]) ^ r[p++], S = (o[c >>> 24] << 24 | o[u >>> 16 & 255] << 16 | o[l >>> 8 & 255] << 8 | o[255 & y]) ^ r[p++], g = (o[u >>> 24] << 24 | o[l >>> 16 & 255] << 16 | o[y >>> 8 & 255] << 8 | o[255 & c]) ^ r[p++]; e[t] = f, e[t + 1] = d, e[t + 2] = S, e[t + 3] = g }, keySize: 8 }); e.AES = t._createHelper(n) }(), function () { function y(e, t) { var r = (this._lBlock >>> e ^ this._rBlock) & t; this._rBlock ^= r, this._lBlock ^= r << e } function c(e, t) { var r = (this._rBlock >>> e ^ this._lBlock) & t; this._lBlock ^= r, this._rBlock ^= r << e } var e = be, t = e.lib, r = t.WordArray, n = t.BlockCipher, s = e.algo, l = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], u = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], p = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], m = [{ 0: 8421888, 268435456: 32768, 536870912: 8421378, 805306368: 2, 1073741824: 512, 1342177280: 8421890, 1610612736: 8389122, 1879048192: 8388608, 2147483648: 514, 2415919104: 8389120, 2684354560: 33280, 2952790016: 8421376, 3221225472: 32770, 3489660928: 8388610, 3758096384: 0, 4026531840: 33282, 134217728: 0, 402653184: 8421890, 671088640: 33282, 939524096: 32768, 1207959552: 8421888, 1476395008: 512, 1744830464: 8421378, 2013265920: 2, 2281701376: 8389120, 2550136832: 33280, 2818572288: 8421376, 3087007744: 8389122, 3355443200: 8388610, 3623878656: 32770, 3892314112: 514, 4160749568: 8388608, 1: 32768, 268435457: 2, 536870913: 8421888, 805306369: 8388608, 1073741825: 8421378, 1342177281: 33280, 1610612737: 512, 1879048193: 8389122, 2147483649: 8421890, 2415919105: 8421376, 2684354561: 8388610, 2952790017: 33282, 3221225473: 514, 3489660929: 8389120, 3758096385: 32770, 4026531841: 0, 134217729: 8421890, 402653185: 8421376, 671088641: 8388608, 939524097: 512, 1207959553: 32768, 1476395009: 8388610, 1744830465: 2, 2013265921: 33282, 2281701377: 32770, 2550136833: 8389122, 2818572289: 514, 3087007745: 8421888, 3355443201: 8389120, 3623878657: 0, 3892314113: 33280, 4160749569: 8421378 }, { 0: 1074282512, 16777216: 16384, 33554432: 524288, 50331648: 1074266128, 67108864: 1073741840, 83886080: 1074282496, 100663296: 1073758208, 117440512: 16, 134217728: 540672, 150994944: 1073758224, 167772160: 1073741824, 184549376: 540688, 201326592: 524304, 218103808: 0, 234881024: 16400, 251658240: 1074266112, 8388608: 1073758208, 25165824: 540688, 41943040: 16, 58720256: 1073758224, 75497472: 1074282512, 92274688: 1073741824, 109051904: 524288, 125829120: 1074266128, 142606336: 524304, 159383552: 0, 176160768: 16384, 192937984: 1074266112, 209715200: 1073741840, 226492416: 540672, 243269632: 1074282496, 260046848: 16400, 268435456: 0, 285212672: 1074266128, 301989888: 1073758224, 318767104: 1074282496, 335544320: 1074266112, 352321536: 16, 369098752: 540688, 385875968: 16384, 402653184: 16400, 419430400: 524288, 436207616: 524304, 452984832: 1073741840, 469762048: 540672, 486539264: 1073758208, 503316480: 1073741824, 520093696: 1074282512, 276824064: 540688, 293601280: 524288, 310378496: 1074266112, 327155712: 16384, 343932928: 1073758208, 360710144: 1074282512, 377487360: 16, 394264576: 1073741824, 411041792: 1074282496, 427819008: 1073741840, 444596224: 1073758224, 461373440: 524304, 478150656: 0, 494927872: 16400, 511705088: 1074266128, 528482304: 540672 }, { 0: 260, 1048576: 0, 2097152: 67109120, 3145728: 65796, 4194304: 65540, 5242880: 67108868, 6291456: 67174660, 7340032: 67174400, 8388608: 67108864, 9437184: 67174656, 10485760: 65792, 11534336: 67174404, 12582912: 67109124, 13631488: 65536, 14680064: 4, 15728640: 256, 524288: 67174656, 1572864: 67174404, 2621440: 0, 3670016: 67109120, 4718592: 67108868, 5767168: 65536, 6815744: 65540, 7864320: 260, 8912896: 4, 9961472: 256, 11010048: 67174400, 12058624: 65796, 13107200: 65792, 14155776: 67109124, 15204352: 67174660, 16252928: 67108864, 16777216: 67174656, 17825792: 65540, 18874368: 65536, 19922944: 67109120, 20971520: 256, 22020096: 67174660, 23068672: 67108868, 24117248: 0, 25165824: 67109124, 26214400: 67108864, 27262976: 4, 28311552: 65792, 29360128: 67174400, 30408704: 260, 31457280: 65796, 32505856: 67174404, 17301504: 67108864, 18350080: 260, 19398656: 67174656, 20447232: 0, 21495808: 65540, 22544384: 67109120, 23592960: 256, 24641536: 67174404, 25690112: 65536, 26738688: 67174660, 27787264: 65796, 28835840: 67108868, 29884416: 67109124, 30932992: 67174400, 31981568: 4, 33030144: 65792 }, { 0: 2151682048, 65536: 2147487808, 131072: 4198464, 196608: 2151677952, 262144: 0, 327680: 4198400, 393216: 2147483712, 458752: 4194368, 524288: 2147483648, 589824: 4194304, 655360: 64, 720896: 2147487744, 786432: 2151678016, 851968: 4160, 917504: 4096, 983040: 2151682112, 32768: 2147487808, 98304: 64, 163840: 2151678016, 229376: 2147487744, 294912: 4198400, 360448: 2151682112, 425984: 0, 491520: 2151677952, 557056: 4096, 622592: 2151682048, 688128: 4194304, 753664: 4160, 819200: 2147483648, 884736: 4194368, 950272: 4198464, 1015808: 2147483712, 1048576: 4194368, 1114112: 4198400, 1179648: 2147483712, 1245184: 0, 1310720: 4160, 1376256: 2151678016, 1441792: 2151682048, 1507328: 2147487808, 1572864: 2151682112, 1638400: 2147483648, 1703936: 2151677952, 1769472: 4198464, 1835008: 2147487744, 1900544: 4194304, 1966080: 64, 2031616: 4096, 1081344: 2151677952, 1146880: 2151682112, 1212416: 0, 1277952: 4198400, 1343488: 4194368, 1409024: 2147483648, 1474560: 2147487808, 1540096: 64, 1605632: 2147483712, 1671168: 4096, 1736704: 2147487744, 1802240: 2151678016, 1867776: 4160, 1933312: 2151682048, 1998848: 4194304, 2064384: 4198464 }, { 0: 128, 4096: 17039360, 8192: 262144, 12288: 536870912, 16384: 537133184, 20480: 16777344, 24576: 553648256, 28672: 262272, 32768: 16777216, 36864: 537133056, 40960: 536871040, 45056: 553910400, 49152: 553910272, 53248: 0, 57344: 17039488, 61440: 553648128, 2048: 17039488, 6144: 553648256, 10240: 128, 14336: 17039360, 18432: 262144, 22528: 537133184, 26624: 553910272, 30720: 536870912, 34816: 537133056, 38912: 0, 43008: 553910400, 47104: 16777344, 51200: 536871040, 55296: 553648128, 59392: 16777216, 63488: 262272, 65536: 262144, 69632: 128, 73728: 536870912, 77824: 553648256, 81920: 16777344, 86016: 553910272, 90112: 537133184, 94208: 16777216, 98304: 553910400, 102400: 553648128, 106496: 17039360, 110592: 537133056, 114688: 262272, 118784: 536871040, 122880: 0, 126976: 17039488, 67584: 553648256, 71680: 16777216, 75776: 17039360, 79872: 537133184, 83968: 536870912, 88064: 17039488, 92160: 128, 96256: 553910272, 100352: 262272, 104448: 553910400, 108544: 0, 112640: 553648128, 116736: 16777344, 120832: 262144, 124928: 537133056, 129024: 536871040 }, { 0: 268435464, 256: 8192, 512: 270532608, 768: 270540808, 1024: 268443648, 1280: 2097152, 1536: 2097160, 1792: 268435456, 2048: 0, 2304: 268443656, 2560: 2105344, 2816: 8, 3072: 270532616, 3328: 2105352, 3584: 8200, 3840: 270540800, 128: 270532608, 384: 270540808, 640: 8, 896: 2097152, 1152: 2105352, 1408: 268435464, 1664: 268443648, 1920: 8200, 2176: 2097160, 2432: 8192, 2688: 268443656, 2944: 270532616, 3200: 0, 3456: 270540800, 3712: 2105344, 3968: 268435456, 4096: 268443648, 4352: 270532616, 4608: 270540808, 4864: 8200, 5120: 2097152, 5376: 268435456, 5632: 268435464, 5888: 2105344, 6144: 2105352, 6400: 0, 6656: 8, 6912: 270532608, 7168: 8192, 7424: 268443656, 7680: 270540800, 7936: 2097160, 4224: 8, 4480: 2105344, 4736: 2097152, 4992: 268435464, 5248: 268443648, 5504: 8200, 5760: 270540808, 6016: 270532608, 6272: 270540800, 6528: 270532616, 6784: 8192, 7040: 2105352, 7296: 2097160, 7552: 0, 7808: 268435456, 8064: 268443656 }, { 0: 1048576, 16: 33555457, 32: 1024, 48: 1049601, 64: 34604033, 80: 0, 96: 1, 112: 34603009, 128: 33555456, 144: 1048577, 160: 33554433, 176: 34604032, 192: 34603008, 208: 1025, 224: 1049600, 240: 33554432, 8: 34603009, 24: 0, 40: 33555457, 56: 34604032, 72: 1048576, 88: 33554433, 104: 33554432, 120: 1025, 136: 1049601, 152: 33555456, 168: 34603008, 184: 1048577, 200: 1024, 216: 34604033, 232: 1, 248: 1049600, 256: 33554432, 272: 1048576, 288: 33555457, 304: 34603009, 320: 1048577, 336: 33555456, 352: 34604032, 368: 1049601, 384: 1025, 400: 34604033, 416: 1049600, 432: 1, 448: 0, 464: 34603008, 480: 33554433, 496: 1024, 264: 1049600, 280: 33555457, 296: 34603009, 312: 1, 328: 33554432, 344: 1048576, 360: 1025, 376: 34604032, 392: 33554433, 408: 34603008, 424: 0, 440: 34604033, 456: 1049601, 472: 1024, 488: 33555456, 504: 1048577 }, { 0: 134219808, 1: 131072, 2: 134217728, 3: 32, 4: 131104, 5: 134350880, 6: 134350848, 7: 2048, 8: 134348800, 9: 134219776, 10: 133120, 11: 134348832, 12: 2080, 13: 0, 14: 134217760, 15: 133152, 2147483648: 2048, 2147483649: 134350880, 2147483650: 134219808, 2147483651: 134217728, 2147483652: 134348800, 2147483653: 133120, 2147483654: 133152, 2147483655: 32, 2147483656: 134217760, 2147483657: 2080, 2147483658: 131104, 2147483659: 134350848, 2147483660: 0, 2147483661: 134348832, 2147483662: 134219776, 2147483663: 131072, 16: 133152, 17: 134350848, 18: 32, 19: 2048, 20: 134219776, 21: 134217760, 22: 134348832, 23: 131072, 24: 0, 25: 131104, 26: 134348800, 27: 134219808, 28: 134350880, 29: 133120, 30: 2080, 31: 134217728, 2147483664: 131072, 2147483665: 2048, 2147483666: 134348832, 2147483667: 133152, 2147483668: 32, 2147483669: 134348800, 2147483670: 134217728, 2147483671: 134219808, 2147483672: 134350880, 2147483673: 134217760, 2147483674: 134219776, 2147483675: 0, 2147483676: 133120, 2147483677: 2080, 2147483678: 131104, 2147483679: 134350848 }], f = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], i = s.DES = n.extend({ _doReset: function () { for (var e = this._key.words, t = [], r = 0; r < 56; r++) { var n = l[r] - 1; t[r] = e[n >>> 5] >>> 31 - n % 32 & 1 } for (var s = this._subKeys = [], i = 0; i < 16; i++) { var a = s[i] = [], o = p[i]; for (r = 0; r < 24; r++)a[r / 6 | 0] |= t[(u[r] - 1 + o) % 28] << 31 - r % 6, a[4 + (r / 6 | 0)] |= t[28 + (u[r + 24] - 1 + o) % 28] << 31 - r % 6; a[0] = a[0] << 1 | a[0] >>> 31; for (r = 1; r < 7; r++)a[r] = a[r] >>> 4 * (r - 1) + 3; a[7] = a[7] << 5 | a[7] >>> 27 } var h = this._invSubKeys = []; for (r = 0; r < 16; r++)h[r] = s[15 - r] }, encryptBlock: function (e, t) { this._doCryptBlock(e, t, this._subKeys) }, decryptBlock: function (e, t) { this._doCryptBlock(e, t, this._invSubKeys) }, _doCryptBlock: function (e, t, r) { this._lBlock = e[t], this._rBlock = e[t + 1], y.call(this, 4, 252645135), y.call(this, 16, 65535), c.call(this, 2, 858993459), c.call(this, 8, 16711935), y.call(this, 1, 1431655765); for (var n = 0; n < 16; n++) { for (var s = r[n], i = this._lBlock, a = this._rBlock, o = 0, h = 0; h < 8; h++)o |= m[h][((a ^ s[h]) & f[h]) >>> 0]; this._lBlock = a, this._rBlock = i ^ o } var l = this._lBlock; this._lBlock = this._rBlock, this._rBlock = l, y.call(this, 1, 1431655765), c.call(this, 8, 16711935), c.call(this, 2, 858993459), y.call(this, 16, 65535), y.call(this, 4, 252645135), e[t] = this._lBlock, e[t + 1] = this._rBlock }, keySize: 2, ivSize: 2, blockSize: 2 }); e.DES = n._createHelper(i); var a = s.TripleDES = n.extend({ _doReset: function () { var e = this._key.words; this._des1 = i.createEncryptor(r.create(e.slice(0, 2))), this._des2 = i.createEncryptor(r.create(e.slice(2, 4))), this._des3 = i.createEncryptor(r.create(e.slice(4, 6))) }, encryptBlock: function (e, t) { this._des1.encryptBlock(e, t), this._des2.decryptBlock(e, t), this._des3.encryptBlock(e, t) }, decryptBlock: function (e, t) { this._des3.decryptBlock(e, t), this._des2.encryptBlock(e, t), this._des1.decryptBlock(e, t) }, keySize: 6, ivSize: 2, blockSize: 2 }); e.TripleDES = n._createHelper(a) }(), function () { function r() { for (var e = this._S, t = this._i, r = this._j, n = 0, s = 0; s < 4; s++) { r = (r + e[t = (t + 1) % 256]) % 256; var i = e[t]; e[t] = e[r], e[r] = i, n |= e[(e[t] + e[r]) % 256] << 24 - 8 * s } return this._i = t, this._j = r, n } var e = be, t = e.lib.StreamCipher, n = e.algo, s = n.RC4 = t.extend({ _doReset: function () { for (var e = this._key, t = e.words, r = e.sigBytes, n = this._S = [], s = 0; s < 256; s++)n[s] = s; s = 0; for (var i = 0; s < 256; s++) { var a = s % r, o = t[a >>> 2] >>> 24 - a % 4 * 8 & 255; i = (i + n[s] + o) % 256; var h = n[s]; n[s] = n[i], n[i] = h } this._i = this._j = 0 }, _doProcessBlock: function (e, t) { e[t] ^= r.call(this) }, keySize: 8, ivSize: 0 }); e.RC4 = t._createHelper(s); var i = n.RC4Drop = s.extend({ cfg: s.cfg.extend({ drop: 192 }), _doReset: function () { s._doReset.call(this); for (var e = this.cfg.drop; 0 < e; e--)r.call(this) } }); e.RC4Drop = t._createHelper(i) }(), be.mode.CTRGladman = function () { function l(e) { if (255 == (e >> 24 & 255)) { var t = e >> 16 & 255, r = e >> 8 & 255, n = 255 & e; 255 === t ? (t = 0, 255 === r ? (r = 0, 255 === n ? n = 0 : ++n) : ++r) : ++t, e = 0, e += t << 16, e += r << 8, e += n } else e += 1 << 24; return e } var e = be.lib.BlockCipherMode.extend(), t = e.Encryptor = e.extend({ processBlock: function (e, t) { var r, n = this._cipher, s = n.blockSize, i = this._iv, a = this._counter; i && (a = this._counter = i.slice(0), this._iv = void 0), 0 === ((r = a)[0] = l(r[0])) && (r[1] = l(r[1])); var o = a.slice(0); n.encryptBlock(o, 0); for (var h = 0; h < s; h++)e[t + h] ^= o[h] } }); return e.Decryptor = t, e }(), function () { function u() { for (var e = this._X, t = this._C, r = 0; r < 8; r++)h[r] = t[r]; t[0] = t[0] + 1295307597 + this._b | 0, t[1] = t[1] + 3545052371 + (t[0] >>> 0 < h[0] >>> 0 ? 1 : 0) | 0, t[2] = t[2] + 886263092 + (t[1] >>> 0 < h[1] >>> 0 ? 1 : 0) | 0, t[3] = t[3] + 1295307597 + (t[2] >>> 0 < h[2] >>> 0 ? 1 : 0) | 0, t[4] = t[4] + 3545052371 + (t[3] >>> 0 < h[3] >>> 0 ? 1 : 0) | 0, t[5] = t[5] + 886263092 + (t[4] >>> 0 < h[4] >>> 0 ? 1 : 0) | 0, t[6] = t[6] + 1295307597 + (t[5] >>> 0 < h[5] >>> 0 ? 1 : 0) | 0, t[7] = t[7] + 3545052371 + (t[6] >>> 0 < h[6] >>> 0 ? 1 : 0) | 0, this._b = t[7] >>> 0 < h[7] >>> 0 ? 1 : 0; for (r = 0; r < 8; r++) { var n = e[r] + t[r], s = 65535 & n, i = n >>> 16, a = ((s * s >>> 17) + s * i >>> 15) + i * i, o = ((4294901760 & n) * n | 0) + ((65535 & n) * n | 0); l[r] = a ^ o } e[0] = l[0] + (l[7] << 16 | l[7] >>> 16) + (l[6] << 16 | l[6] >>> 16) | 0, e[1] = l[1] + (l[0] << 8 | l[0] >>> 24) + l[7] | 0, e[2] = l[2] + (l[1] << 16 | l[1] >>> 16) + (l[0] << 16 | l[0] >>> 16) | 0, e[3] = l[3] + (l[2] << 8 | l[2] >>> 24) + l[1] | 0, e[4] = l[4] + (l[3] << 16 | l[3] >>> 16) + (l[2] << 16 | l[2] >>> 16) | 0, e[5] = l[5] + (l[4] << 8 | l[4] >>> 24) + l[3] | 0, e[6] = l[6] + (l[5] << 16 | l[5] >>> 16) + (l[4] << 16 | l[4] >>> 16) | 0, e[7] = l[7] + (l[6] << 8 | l[6] >>> 24) + l[5] | 0 } var e = be, t = e.lib.StreamCipher, r = e.algo, s = [], h = [], l = [], n = r.Rabbit = t.extend({ _doReset: function () { for (var e = this._key.words, t = this.cfg.iv, r = 0; r < 4; r++)e[r] = 16711935 & (e[r] << 8 | e[r] >>> 24) | 4278255360 & (e[r] << 24 | e[r] >>> 8); var n = this._X = [e[0], e[3] << 16 | e[2] >>> 16, e[1], e[0] << 16 | e[3] >>> 16, e[2], e[1] << 16 | e[0] >>> 16, e[3], e[2] << 16 | e[1] >>> 16], s = this._C = [e[2] << 16 | e[2] >>> 16, 4294901760 & e[0] | 65535 & e[1], e[3] << 16 | e[3] >>> 16, 4294901760 & e[1] | 65535 & e[2], e[0] << 16 | e[0] >>> 16, 4294901760 & e[2] | 65535 & e[3], e[1] << 16 | e[1] >>> 16, 4294901760 & e[3] | 65535 & e[0]]; for (r = this._b = 0; r < 4; r++)u.call(this); for (r = 0; r < 8; r++)s[r] ^= n[r + 4 & 7]; if (t) { var i = t.words, a = i[0], o = i[1], h = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8), l = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), y = h >>> 16 | 4294901760 & l, c = l << 16 | 65535 & h; s[0] ^= h, s[1] ^= y, s[2] ^= l, s[3] ^= c, s[4] ^= h, s[5] ^= y, s[6] ^= l, s[7] ^= c; for (r = 0; r < 4; r++)u.call(this) } }, _doProcessBlock: function (e, t) { var r = this._X; u.call(this), s[0] = r[0] ^ r[5] >>> 16 ^ r[3] << 16, s[1] = r[2] ^ r[7] >>> 16 ^ r[5] << 16, s[2] = r[4] ^ r[1] >>> 16 ^ r[7] << 16, s[3] = r[6] ^ r[3] >>> 16 ^ r[1] << 16; for (var n = 0; n < 4; n++)s[n] = 16711935 & (s[n] << 8 | s[n] >>> 24) | 4278255360 & (s[n] << 24 | s[n] >>> 8), e[t + n] ^= s[n] }, blockSize: 4, ivSize: 2 }); e.Rabbit = t._createHelper(n) }(), be.mode.CTR = (u = be.lib.BlockCipherMode.extend(), p = u.Encryptor = u.extend({ processBlock: function (e, t) { var r = this._cipher, n = r.blockSize, s = this._iv, i = this._counter; s && (i = this._counter = s.slice(0), this._iv = void 0); var a = i.slice(0); r.encryptBlock(a, 0), i[n - 1] = i[n - 1] + 1 | 0; for (var o = 0; o < n; o++)e[t + o] ^= a[o] } }), u.Decryptor = p, u), function () { function u() { for (var e = this._X, t = this._C, r = 0; r < 8; r++)h[r] = t[r]; t[0] = t[0] + 1295307597 + this._b | 0, t[1] = t[1] + 3545052371 + (t[0] >>> 0 < h[0] >>> 0 ? 1 : 0) | 0, t[2] = t[2] + 886263092 + (t[1] >>> 0 < h[1] >>> 0 ? 1 : 0) | 0, t[3] = t[3] + 1295307597 + (t[2] >>> 0 < h[2] >>> 0 ? 1 : 0) | 0, t[4] = t[4] + 3545052371 + (t[3] >>> 0 < h[3] >>> 0 ? 1 : 0) | 0, t[5] = t[5] + 886263092 + (t[4] >>> 0 < h[4] >>> 0 ? 1 : 0) | 0, t[6] = t[6] + 1295307597 + (t[5] >>> 0 < h[5] >>> 0 ? 1 : 0) | 0, t[7] = t[7] + 3545052371 + (t[6] >>> 0 < h[6] >>> 0 ? 1 : 0) | 0, this._b = t[7] >>> 0 < h[7] >>> 0 ? 1 : 0; for (r = 0; r < 8; r++) { var n = e[r] + t[r], s = 65535 & n, i = n >>> 16, a = ((s * s >>> 17) + s * i >>> 15) + i * i, o = ((4294901760 & n) * n | 0) + ((65535 & n) * n | 0); l[r] = a ^ o } e[0] = l[0] + (l[7] << 16 | l[7] >>> 16) + (l[6] << 16 | l[6] >>> 16) | 0, e[1] = l[1] + (l[0] << 8 | l[0] >>> 24) + l[7] | 0, e[2] = l[2] + (l[1] << 16 | l[1] >>> 16) + (l[0] << 16 | l[0] >>> 16) | 0, e[3] = l[3] + (l[2] << 8 | l[2] >>> 24) + l[1] | 0, e[4] = l[4] + (l[3] << 16 | l[3] >>> 16) + (l[2] << 16 | l[2] >>> 16) | 0, e[5] = l[5] + (l[4] << 8 | l[4] >>> 24) + l[3] | 0, e[6] = l[6] + (l[5] << 16 | l[5] >>> 16) + (l[4] << 16 | l[4] >>> 16) | 0, e[7] = l[7] + (l[6] << 8 | l[6] >>> 24) + l[5] | 0 } var e = be, t = e.lib.StreamCipher, r = e.algo, s = [], h = [], l = [], n = r.RabbitLegacy = t.extend({ _doReset: function () { for (var e = this._key.words, t = this.cfg.iv, r = this._X = [e[0], e[3] << 16 | e[2] >>> 16, e[1], e[0] << 16 | e[3] >>> 16, e[2], e[1] << 16 | e[0] >>> 16, e[3], e[2] << 16 | e[1] >>> 16], n = this._C = [e[2] << 16 | e[2] >>> 16, 4294901760 & e[0] | 65535 & e[1], e[3] << 16 | e[3] >>> 16, 4294901760 & e[1] | 65535 & e[2], e[0] << 16 | e[0] >>> 16, 4294901760 & e[2] | 65535 & e[3], e[1] << 16 | e[1] >>> 16, 4294901760 & e[3] | 65535 & e[0]], s = this._b = 0; s < 4; s++)u.call(this); for (s = 0; s < 8; s++)n[s] ^= r[s + 4 & 7]; if (t) { var i = t.words, a = i[0], o = i[1], h = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8), l = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), y = h >>> 16 | 4294901760 & l, c = l << 16 | 65535 & h; n[0] ^= h, n[1] ^= y, n[2] ^= l, n[3] ^= c, n[4] ^= h, n[5] ^= y, n[6] ^= l, n[7] ^= c; for (s = 0; s < 4; s++)u.call(this) } }, _doProcessBlock: function (e, t) { var r = this._X; u.call(this), s[0] = r[0] ^ r[5] >>> 16 ^ r[3] << 16, s[1] = r[2] ^ r[7] >>> 16 ^ r[5] << 16, s[2] = r[4] ^ r[1] >>> 16 ^ r[7] << 16, s[3] = r[6] ^ r[3] >>> 16 ^ r[1] << 16; for (var n = 0; n < 4; n++)s[n] = 16711935 & (s[n] << 8 | s[n] >>> 24) | 4278255360 & (s[n] << 24 | s[n] >>> 8), e[t + n] ^= s[n] }, blockSize: 4, ivSize: 2 }); e.RabbitLegacy = t._createHelper(n) }(), be.pad.ZeroPadding = { pad: function (e, t) { var r = 4 * t; e.clamp(), e.sigBytes += r - (e.sigBytes % r || r) }, unpad: function (e) { for (var t = e.words, r = e.sigBytes - 1; !(t[r >>> 2] >>> 24 - r % 4 * 8 & 255);)r--; e.sigBytes = r + 1 } }, be }), function (e, t) { "object" == typeof exports ? module.exports = exports = t(require("./core")) : "function" == typeof define && define.amd ? define(["./core"], t) : t(e.CryptoJS) }(this, function (e) { return h = (t = e).lib.WordArray, t.enc.Base64 = { stringify: function (e) { var t = e.words, r = e.sigBytes, n = this._map; e.clamp(); for (var s = [], i = 0; i < r; i += 3)for (var a = (t[i >>> 2] >>> 24 - i % 4 * 8 & 255) << 16 | (t[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255) << 8 | t[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255, o = 0; o < 4 && i + .75 * o < r; o++)s.push(n.charAt(a >>> 6 * (3 - o) & 63)); var h = n.charAt(64); if (h) for (; s.length % 4;)s.push(h); return s.join("") }, parse: function (e) { var t = e.length, r = this._map, n = this._reverseMap; if (!n) { n = this._reverseMap = []; for (var s = 0; s < r.length; s++)n[r.charCodeAt(s)] = s } var i = r.charAt(64); if (i) { var a = e.indexOf(i); -1 !== a && (t = a) } return function (e, t, r) { for (var n = [], s = 0, i = 0; i < t; i++)if (i % 4) { var a = r[e.charCodeAt(i - 1)] << i % 4 * 2, o = r[e.charCodeAt(i)] >>> 6 - i % 4 * 2; n[s >>> 2] |= (a | o) << 24 - s % 4 * 8, s++ } return h.create(n, s) }(e, t, n) }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=" }, e.enc.Base64; var t, h }); var System = {}; if (window.System = { __namespace: !0, __typeName: "Sys", getName: function () { return "Sys" }, __upperCaseTypes: {} }, System.Type = function () { this.Name = "name", this.Namespace = "", this.FullName = "", this.ToString = function () { return this.FullName }, function () { var e = ""; e = arguments[0]; var t = []; (this.FullName = e) && (t = e.split("."), this.Name = t[t.length - 1], this.Namespace = t.slice(0, t.length - 2).join(".")) }.apply(this, arguments) }, System.Type.Inherits = function (e, t) { for (var r in t) "__typeName" !== r && "GetType" !== r && (e[r] = t[r]); return t }, System.Type.RegisterNamespace = function (e) { if ("undefined" != typeof Type && "function" == typeof Type.registerNamespace) Type.registerNamespace.apply(this, arguments); else for (var t = window, r = e.split("."), n = 0; n < r.length; n++) { var s = r[n], i = t[s]; i || (i = t[s] = {}), i.__typeName = e, i.__namespace = !0, t = i } }, System.Type.RegisterClass = function (typeName, baseType, interfaceTypes) { var o = eval(typeName); "undefined" != typeof Type && "function" == typeof Type.registerClass ? Type.registerClass.apply(o, arguments) : (o.__typeName = typeName, o.__class = !0), o.prototype.GetType = function () { return new System.Type(typeName) } }, System.Type.RegisterInterface = function (e, t) { }, System.Type.RegisterEnum = function (type, flags) { var o = eval(type); if ("undefined" != typeof Type && "function" == typeof Type.registerEnum) Type.registerEnum.apply(o, arguments); else { for (var i in o.prototype) o[i] = o.prototype[i]; o.__enum = !0, o.__flags = flags } }, System.Type.RegisterProperty = function (t) { me[t]; me[t] = function (e) { if (0 === arguments.length) return me[t].get(); 1 === arguments.length && me[t].set(e) } }, System.Type.RegisterNamespace("System"), System.Type.RegisterClass("System.Type"), System.Type.GetType = function (e) { return new System.Type(e) }, System.TypeCode = function () { }, System.TypeCode.prototype = { Empty: 0, Object: 1, DBNull: 2, Boolean: 3, Char: 4, SByte: 5, Byte: 6, Int16: 7, UInt16: 8, Int32: 9, UInt32: 10, Int64: 11, UInt64: 12, Single: 13, Double: 14, Decimal: 15, DateTime: 16, String: 18 }, System.Type.RegisterEnum("System.TypeCode"), System.TimeUnitType = function () { }, System.TimeUnitType.prototype = { Seconds: 0, Minutes: 1, Hours: 2, Days: 3 }, System.Type.RegisterEnum("System.TimeUnitType"), System.SR = function () { }, System.SR.prototype = { NotReadableStream: "The base stream is not readable.", NotWriteableStream: "The base stream is not writeable.", ArgumentOutOfRange_Enum: "Enum value was out of legal range." }, System.Type.RegisterClass("System.SR"), System.SR.GetString = function (e) { var t = System.SR.prototype[e]; return t || (t = e), t }, System.Extensions = function () { this.Apply = function () { var e = !1; "object" == typeof Response && (e = !0), e || void 0 === this.$ && (this.$ = function () { return document.getElementById(arguments[0]) }), Date.prototype.SubtractDays = System.DateTime.SubtractDays, Date.prototype.SubtractMonths = System.DateTime.SubtractMonths, Date.prototype.GetFromString = System.DateTime.GetFromString, Date.prototype.GetFromUtcString = System.DateTime.GetFromUtcString, Date.prototype.DefaultFormat = "yyyy-MM-dd HH:mm:ss", Date.prototype.ToString = System.DateTime.ToString, Date.prototype.Subtract = System.DateTime.Subtract, Date.prototype.Ticks = System.DateTime.Ticks, Date.prototype.ToUniversalTime = System.DateTime.ToUniversalTime, Number.prototype.ToString = Number.prototype.toString, String.prototype.Trim = function (e) { return System.Text.Trim(this, e) }, String.prototype.ToCamelCase = function () { return System.Text.ToCamelCase(this) }, String.Format = function (e, y) { return y = Array.prototype.slice.call(arguments, 1), e.replace(/{(\d+)(:([xX]?\d+))?(,([-]?\d+))?}/g, function (e, t) { var r = void 0 !== y[t] ? y[t] : e, n = e.match(":([xX])(\\d+)"); if (n) { r = r.toString(16), r = "x" === n[1] ? r.toLowerCase() : r.toUpperCase(), a = parseInt(n[2]); var s = ""; for (i = r.length; i < a; i++)s += "0"; r = s + r } var a, o = e.match(",([-]?\\d+)"); if (o) { a = parseInt(o[1]), r = r.toString(); var h = Math.abs(a), l = ""; for (i = r.length; i < h; i++)l += " "; r = 0 <= a ? l + r : r + l } return r }) }, String.Join = function (e, t, r, n) { if (e || (e = ""), r || (r = 0), n || (n = t.length), 0 === n) return ""; for (var s = r + n - 1, i = "", a = r; a <= s; a++)r < a && (i += e), i += t[a]; return i }, Array.prototype.Clone = function () { for (var e = this.slice(0, this.length), t = 0; t < this.length; t++)e[t] = this[t]; return e } } }, System.Type.RegisterClass("System.Extensions"), System.AsyncCallback = function (e) { }, System.Type.RegisterClass("System.AsyncCallback"), System.AsyncWriteDelegate = function (e, t, r, n) { }, System.Type.RegisterClass("System.AsyncWriteDelegate"), System.GetScriptsPath = function () { var e, t = "", r = new RegExp("System(.debug)?.js", "gi"), n = document.getElementsByTagName("head")[0].getElementsByTagName("script"); for (e = 0; e < n.length; e++)if (n[e].src.match(r)) { t = n[e].src.replace(r, ""); break } if (0 === t.length) for (n = document.getElementsByTagName("script"), e = 0; e < n.length; e++)if (n[e].src.match(r)) { t = n[e].src.replace(r, ""); break } return t }, System.Extensions = new System.Extensions, System.Type.Class = System.Type.Class ? System.Type.Class : {}, System.Type.Class.Root = this, System.Type.Class.Inherit = function () { var e; for (Trace.Write("exec System.Class.Inherit(arguments){", 1), this.Classes = [], this.Objects = [], e = 0; e < arguments.length; e++)arguments[e].prototype.NoInit = !0, this.Objects.push(new arguments[e]), arguments[e].prototype.NoInit = !1, this.Classes.push(arguments[e]); for (e = 0; e < this.Objects.length; e++)0 === e ? Trace.Write("Inherit: '" + this.Objects[e].Type + "' Class From: ", 1) : Trace.Write(this.Objects[e].Type); Trace.Write("Done", -2); for (var t = this.Classes[0], r = this.Objects[0], n = this.Classes.length - 1; 0 < n; n--) { var s = this.Classes[n], i = this.Objects[n], a = this.Objects[n - 1]; this.Classes[n - 1]; Trace.Write("// Inherit: '" + a.Type + "' From: '" + i.Type + "'"), t.prototype = i, Trace.Write("1. Import Class Properties: " + r.Type + ".prototype <- " + i.Type, 1), Trace.Write("End Import", -2), Trace.Write("2. Fix Prototype Constructor", 1), t.prototype.constructor = t, Trace.Write("End Fix", -2), Trace.Write("3. Allow to call methods in a superclass", 1), Trace.Write("Import Superclass Properties: " + r.Type + ".superclass <- " + i.Type + ".prototype"), t.superclass = s.prototype, Trace.Write("End Import", -2) } Trace.Write("} //System.Class.Inherit(arrguments)", -2) }, System.Type.Class.Inherit = function (e, t) { e.prototype = new t, (e.prototype.constructor = e).superclass = t.prototype }, System.Type.Class.Exists = function (e) { var t; t = System.Class.Root; for (var r = !0, n = e.split("."), s = 0; s < n.length; s++) { var i = n[s]; if (!t[i]) { r = !1; break } t = t[i] } return r }, System.Class = System.Class ? System.Class : {}, System.Class.Inherit = System.Type.Class.Inherit, System.Class.Root = this, System.Uri = function (e) { this.OriginalString, this.AbsolutePath, this.Query, this.QueryParams, this.GetType = function () { return new System.Type("System.Uri") }, this.GetQueryValue = function (e, t) { var r, n = null; for (var s in !0 === t && (e = e.toLowerCase()), this.QueryParams) if (r = s, !0 === t && (r = s.toLowerCase()), e === r) { n = this.QueryParams[s]; break } return n }, this.GetParameters = function (e) { var t = {}; if (null === e) return t; for (var r, n, s, i = e.substring(e.indexOf("?") + 1, e.length).split("&"), a = 0; a < i.length; a++)n = (r = i[a]).substring(0, r.indexOf("=")), s = r.substring(r.indexOf("=") + 1, r.length), s = unescape(s), t[n] = s; return t }, function () { var e = arguments[0]; this.OriginalString = e, this.AbsolutePath = -1 < e.indexOf("?") ? e.substring(0, e.indexOf("?") - 1) : e, this.Query = -1 < e.indexOf("?") ? e.substring(e.indexOf("?"), e.length) : null, this.QueryParams = this.GetParameters(this.Query) }.apply(this, arguments) }, System.Type.RegisterClass("System.Uri"), System.EventItem = function () { this.Node, this.Name, this.Handler, this.Capture }, System.Type.RegisterClass("System.EventItem"), System.EventHandler = function (n, s, i) { this.Method = null, this.Target = null, this.Timeout = null, this.Invoke = function () { if ("number" != typeof this.Timeout) return this.Method.apply(this.Target, arguments); setTimeout(function () { return this.Method.apply(this.Target, arguments) }, this.Timeout) }, this.InvokeNative = function () { var e = arguments[0] || window.event, t = e.target || e.srcElement, r = new Array(2); if (r[0] = t, r[1] = e, "number" != typeof i) return s.apply(n, r); setTimeout(function () { return s.apply(n, r) }, i) }, this.Initialize = function () { this.Target = n, this.Method = s }, this.Initialize() }, System.Type.RegisterClass("System.EventHandler"), System.Event = function (e) { this.args = {}, this._delegates = [], this.name = e, this.Add = function (e) { this._delegates[this._delegates.length] = e }, this.Remove = function (e) { for (i = this._delegates.length - 1; 0 <= i; i -= 1)e === this._delegates[i] && this._delegates.splice(i, 1) }, this.Fire = function (e, t) { for (var r = 0; r < this._delegates.length; r++)this._delegates[r].Invoke(e, t) } }, System.Type.RegisterClass("System.Event"), System.EventArgs = function (e) { this.Name = "", this.ToString = function () { var e = ""; for (var t in this) { var r = !1; (r = (r = r || "Initialize" === t) || "ToString" === t) || (e += t + "='" + this[t] + "';") } return e = "e[" + e + "]" }, this.Initialize = function (e) { this.Name = e || "" }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.EventArgs"), System.EventsManager = function (e) { this.Items = null, this.Context = null; var n = this; this.Add = function (e, t, r, n) { var s, i = !0; s = "string" == typeof e ? e = this.Context.document.getElementById(e) : e.id; var a = void 0 !== Trace; if (a && Trace.Write("call " + this.GetType().Name + ".Add(node, '" + t + "', eventHandler, " + n + ")"), e) if ("boolean" != typeof n) e[t].Add(r); else { if (r.GetType && "System.EventHandler" === r.GetType().FullName && (r = r.InvokeNative), e.addEventListener) e.addEventListener(t, r, n); else if (e.attachEvent) { a && Trace.Write("thru System.EventHandler: " + r.Type); e.attachEvent("on" + t, r) } this.AddItem(e, t, r, n) } else a && Trace.Write("Error: " + this.GetType().Name + ".Add(...) - node '" + s + "' was not found!"), i = !1; return i }, this.Remove = function (e, t, r) { "string" == typeof e && (e = this.Context.document.getElementById(e)), this.RemoveItem(e, t, r) }, this.AddItem = function (e, t, r, n) { var s = new System.EventItem; s.Node = e, s.Name = t, s.Handler = r, s.Capture = n, this.Items.push(s) }, this.RemoveItem = function (e, t, r) { var n, s; for (n = this.Items.length - 1; 0 <= n; n -= 1)"boolean" != typeof (s = this.Items[n]).Capture ? s.Node[s.Name].Remove(s.Handler) : (r.GetType && "System.EventHandler" === r.GetType().FullName && (r = r.InvokeNative), e === s.Node && t === s.Name && r === s.Handler && (s.Node.removeEventListener ? s.Node.removeEventListener(s.Name, s.Handler, s.Capture) : s.Node.detachEvent && s.Node.detachEvent("on" + s.Name, s.Handler))) }, this.Dispose = function () { var e, t; for (e = n.Items.length - 1; 0 <= e; e -= 1)if ("boolean" != typeof (t = n.Items[e]).Capture) t.Node[t.Name].Remove(t.Handler); else { var r = t.Handler; r.GetType && "System.EventHandler" === r.GetType().FullName && (r = r.InvokeNative), t.Node.removeEventListener ? t.Node.removeEventListener(t.Name, t.Handler, t.Capture) : t.Node.detachEvent && t.Node.detachEvent("on" + t.Name, t.Handler) } }, this.InitializeClass = function () { this.Context = e || window, this.Items = [], this.Add(this.Context, "unload", new System.EventHandler(this, this.Dispose), !1) }, this.InitializeClass() }, System.Type.RegisterClass("System.EventsManager"), "object" != typeof Response) { var Events = new System.EventsManager; System.EventsManager.Current = new System.EventsManager } Error.create = function (e, t) { var r = new Error(e); if (r.message = e, t) for (var n in t) r[n] = t[n]; return r.popStackFrame(), r }, Error.prototype.popStackFrame = function () { if (0 !== arguments.length) throw Error.parameterCount(); if (void 0 !== this.stack && null !== this.stack && void 0 !== this.fileName && null !== this.fileName && void 0 !== this.lineNumber && null !== this.lineNumber) { for (var e = this.stack.split("\n"), t = e[0], r = this.fileName + ":" + this.lineNumber; null != t && -1 === t.indexOf(r);)e.shift(), t = e[0]; var n = e[1]; if (null != n) { var s = n.match(/@(.*):(\d+)$/); null != s && (this.fileName = s[1], this.lineNumber = parseInt(s[2]), e.shift(), this.stack = e.join("\n")) } } }, System.Exception = function (e) { }, System.Exception = function () { switch (arguments.length) { case 0: break; case 1: if ("function" == typeof arguments[0].GetType) return arguments[0]; this.message = arguments[0] }var e = Error.create(this.message, { name: this.GetType().FullName }); return e.popStackFrame(), e }, System.Type.RegisterClass("System.Exception"), System.ArgumentNullException = function (e, t) { this.message = "", this.message += t || "Value cannot be null.", this.message += "\r\nParameter name: '" + e + "'"; var r = Error.create(this.message, { name: this.GetType().FullName }); return r.popStackFrame(), r }, System.Type.RegisterClass("System.ArgumentNullException"), System.ArgumentException = function (e, t) { new System.Type.Inherits(this, new System.Exception); this.message = "", this.message += e, this.message += t ? "\r\nParameter name: '" + t + "'" : ""; var r = Error.create(this.message, { name: this.GetType().FullName }); return r.popStackFrame(), r }, System.Type.RegisterClass("System.ArgumentException"), System.ObjectDisposedException = function (e, t) { new System.Type.Inherits(this, new System.Exception); this.message = "", this.message += t || "Cannot access a disposed object.", this.message += "\r\nObject name: '" + e + "'"; var r = Error.create(this.message, { name: this.GetType().FullName }); return r.popStackFrame(), r }, System.Type.RegisterClass("System.ObjectDisposedException"), System.Class.ExceptionToString = function (e) { var t = new System.Exception(e); return "object" == typeof Response ? "Error: Exception[number=" + t.number + "; name='" + t.GetType().FullName + "'; message='" + t.message + "'; description='" + t.description + "']" : "Error: Exception[result=" + t.result + "; name='" + t.GetType().FullName + "'; message='" + t.message + "']" }, System.Class.ExceptionToTrace = function (e) { Trace.Write(System.Class.ExceptionToString(e)) }, System.Class.Properties = {}, System.Class.Properties.ToString = function (e) { var t = ""; for (var r in t += typeof e + " properties:\r\n", e) { t += typeof e[r] + " " + r + " = " + e[r] + "\r\n" } return t }, System.Class.Properties.ToTrace = function (e, t, r, n) { if ("object" == typeof e && void 0 === t) try { t = new String(e) } catch (e) { System.Class.ExceptionToTrace(e) } void 0 === n && (n = 3), !1 === r && (n = 0); try { for (var s in Trace.LevelUpdate(1), e) { var i = "." + s; if ("string" == typeof e[s] ? i += '<font color="gray"> = \'' + e[s] + "'</font>" : i += '<font color="gray"> = ' + e[s] + "</font>", 1 < n) { var a = "object" == typeof e[s] || "prototype" === s || "superclass" === s; if (null === e[s] && (a = !1), a) { var o = "." + s, h = n - 1; Trace.Write(i + " {", 1), System.Class.ListProperties(e[s], o, !0, h), Trace.Write("}", -2) } else Trace.Write(i) } } } catch (e) { } Trace.LevelUpdate(-1), null !== t && Trace.Write("}") }, System.Class.ListProperties = function (e, t, r, n) { System.Class.Properties.ToTrace(e, t, r, n) }, System.Parse = function (e, t) { var r = null; switch (typeof e) { case "boolean": r = System.Bool.Parse(t); break; case "number": r = parseFloat(t); break; case "string": r = t; break; case "object": r = t, "function" == typeof e.getDate && (r = (new Date).GetFromString(t)); break; default: r = t }return r }, System.Bool = function () { }, System.Type.RegisterClass("System.Bool"), System.Bool.Parse = function (e) { var t = new String(e).toLowerCase(); return t = "true" === t || "1" === t || "-1" === t || "on" === t || "yes" === t }, System.Bool.IsBoolean = function (e) { return "true" === (e = new String(e).toLowerCase()) || "false" === e || "1" === e || "0" === e || "-1" === e || "on" === e || "off" === e || "yes" === e || "no" === e }, System.Guid = function () { }, System.Guid = function (e) { }, System.Guid = function (e) { this.Bytes = new Array, this.ByteOrder = [3, 2, 1, 0, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15], this.ToString = function (e) { for (var t = -1 < "DBP".indexOf(e = e || "D"), r = "", n = 0; n < 16; n++) { t && (r += 4 === n || 6 === n || 8 === n || 10 === n ? "-" : ""); var s = this.ByteOrder[n]; r += this.numberToHex(this.Bytes[s]) } return "B" === e && (r = "{" + r + "}"), "P" === e && (r = "(" + r + ")"), r }, this.toString = this.ToString, this.ToByteArray = function () { return this.Bytes }, this.Equals = function (e) { var t = e, r = !0; "object" != typeof e && (t = new System.Guid(e)); for (var n = 0; n < 16; n++)if (this.Bytes[n] !== t.Bytes[n]) { r = !1; break } return r }, this.numberToHex = function (e) { var t = e <= 15 ? "0" : ""; return t += e.toString(16) }, this.GuidStringToBytes = function (e) { for (var t = new RegExp("[{}()-]", "g"), r = e.replace(t, ""), n = [], s = 0; s < 16; s++) { var i = this.ByteOrder[s], a = r.charAt(2 * i), o = r.charAt(2 * i + 1); n.push(unescape("%" + a + o).charCodeAt(0)) } return n }, this.InitializeClass = function () { this.Bytes = []; var e, t = arguments[0]; switch (typeof t) { case "null": case "undefined": for (e = 0; e < 16; e++)this.Bytes.push(0); break; case "string": this.Bytes = this.GuidStringToBytes(t); break; case "object": if (t.GetType && "System.Guid" === t.GetType().FullName) for (e = 0; e < 16; e++)this.Bytes.push(t.Bytes[e]); else for (e = 0; e < 16; e++)this.Bytes.push(t[e]) } }, this.InitializeClass.apply(this, arguments) }, System.Type.RegisterClass("System.Guid"), System.Guid.Empty = new System.Guid("00000000-0000-0000-0000-000000000000"), System.Guid.NewGuid = function () { for (var e = [], t = 0; t < 16; t++) { var r = Math.floor(255 * Math.random()); e.push(r) } return new System.Guid(e) }, System.Math = System.Math ? System.Math : {}, System.Math.ShiftRight = function (e, t) { var r = Math.pow(2, t); return (e - (e & r - 1)) / r }, System.Math.ShiftLRight = function (e, t) { var r = Math.pow(2, t); return (e - (e & r - 1)) / r }, System.Math.ShiftLeft = function (e, t) { return e * Math.pow(2, t) }, System.Random = function () { this.Next = function (e) { }, this.Next = function (e, t) { switch (arguments.length) { case 0: t = Math.pow(2, 31), e = 0; break; case 1: t = e, e = 0; break; case 2: break; default: return 0 }var r = e; return e < t && (r = Math.floor(Math.random() * (t - e)) + e), r }, this.NextBytes = function (e) { for (var t = e.length, r = 0; r < t; r++)e[r] = this.Next(0, 256); return e }, this.InitializeClass = function () { }, this.InitializeClass.apply(this, arguments) }, System.Type.RegisterClass("System.Random"), System.Char = function () { }, System.Type.RegisterClass("System.Char"), System.TimeSpan = function () { this.Ticks = 0, this.Milliseconds = 0, this.Seconds = 0, this.Minutes = 0, this.Hours = 0, this.Days = 0, this.TotalMilliseconds = 0, this.TotalSeconds = 0, this.TotalMinutes = 0, this.TotalHours = 0, this.TotalDays = 0; var a = this; function e() { for (var e, t, r, n = ["Days", "Hours", "Minutes", "Seconds", "Milliseconds"], s = arguments.length, i = 0; i < s; i++) { this[n[n.length - arguments.length + i]] = arguments[i] } t = e = 0, e = a.Milliseconds % 1e3, t = (a.Milliseconds - e) / 1e3, a.Milliseconds = e, a.Seconds += t, e = a.Seconds % 60, t = (a.Seconds - e) / 60, a.Seconds = e, a.Minutes += t, e = a.Minutes % 60, t = (a.Minutes - e) / 60, a.Minutes = e, a.Hours += t, e = a.Hours % 24, t = (a.Hours - e) / 24, a.Hours = e, a.Days += t, r = 60 * ((r = 60 * ((r = 24 * a.Days) + a.Hours)) + a.Minutes), a.Ticks = 1e3 * (r + a.Seconds) + a.Milliseconds, a.TotalMilliseconds = a.Ticks, a.TotalSeconds = a.TotalMilliseconds / 1e3, a.TotalMinutes = a.TotalSeconds / 60, a.TotalHours = a.TotalMinutes / 60, a.TotalDays = a.TotalHours / 24 } this.Add = function () { var e = arguments[0]; "number" == typeof arguments[0] && (e = new System.TimeSpan.apply(this, arguments)); var t = this.Ticks + e.Ticks; return new System.TimeSpan(t) }, this.Subtract = function () { var e = arguments[0]; "number" == typeof arguments[0] && (e = new System.TimeSpan.apply(this, arguments)); var t = this.Ticks - e.Ticks; return new System.TimeSpan(t) }, this.ToString = function (e) { var t = "", r = "X" === e ? " days " : " ", n = "X" === e ? " hours " : ":", s = "X" === e ? " min " : ":", i = "X" === e ? " sec" : ""; return (1 <= this.TotalDays || "F" === e) && (t += this.Days + r), t += (this.Hours < 10 ? "0" : "") + this.Hours + n, t += (this.Minutes < 10 ? "0" : "") + this.Minutes + s, t += (this.Seconds < 10 ? "0" : "") + this.Seconds + i, "F" === e && (t += "." + this.Milliseconds), t }, this.toString = this.ToString, this.InitializeClass = function () { e.apply(this, arguments) }, this.InitializeClass.apply(this, arguments) }, System.Type.RegisterClass("System.TimeSpan"), System.TimeSpan.TicksPerMillisecond = 1, System.Array = function () { this.Initialize = function () { }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Array"), System.Array.Reverse = function (e, t, r) { t = t || 0, r = r || e.length; for (var n = e.slice(t, t + r).reverse(), s = 0; s < r; s++)e[s + t] = n[s] }, System.Array._Copy1 = function (e, t, r) { for (var n = 0; n < r; n++)t[n] = e[n] }, System.Array._Copy2 = function (e, t, r, n, s) { for (var i = 0; i < s; i++)r[n + i] = e[t + i] }, System.Array.Copy = function () { 3 === arguments.length && System.Array._Copy1.apply(this, arguments), 5 === arguments.length && System.Array._Copy2.apply(this, arguments) }, System.Array.FillMultiDimensional = function (e, t, r) { var n; if (0 < t.length) for (n = 0; n < e.length; n++) { var s = new Array(t[0]), i = t.slice(1); System.Array.FillMultiDimensional(s, i, r), e[n] = s } else for (n = 0; n < e.length; n++)e[n] = r; return e }, System.Array.GetMultiDimensional = function (e, t) { var r = new Array(e[0]); return System.Array.FillMultiDimensional(r, e.slice(1), t) }, System.Array.Clear = function (e, t, r) { for (var n = 0; n < r; n++)e[n + t] = 0 }, System.Array.SortComparer = function (r, e) { var n = e ? [-1, 1] : [1, -1]; return function (e, t) { return e[r] === t[r] ? 0 : e[r] < t[r] ? n[0] : n[1] } }, System.Array.Sort = function (e, t, r) { r = !1 !== r, e.sort(System.Array.SortComparer(t, r)) }, System.Array.Resize = function (e, t, r) { for (void 0 === r && (r = 0); t > e.length;)e.push(r); e.length = t }, System.Buffer = function () { this.Initialize = function () { }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Buffer"), System.Buffer.BlockCopy = function (e, t, r, n, s) { for (var i = 0; i < s; i++)r[n + i] = e[t + i] }, System.Byte = function () { for (var e = [], t = 0; t < arguments.length; t++)e.push(arguments[t]); return System.Array.GetMultiDimensional(e, 0) }, System.Type.RegisterClass("System.Byte"), System.Int32 = function (e) { this.Int = 0, this.DefaultFormat = "", this.ToString = function (e) { var t = ""; switch (e) { case "B": t = 1048576 <= this.Int ? Math.round(this.Int / 1048576 * 10) / 10 + " MB" : 1024 <= this.Int ? Math.round(this.Int / 1024 * 10) / 10 + " KB" : new String(this.Int); break; case "X2": case "X4": case "X6": case "X8": var r = this.Int.toString(16), n = parseInt(e.substr(1)); t = "00000000".substr(0, n).substr(0, n - r.length) + r; break; default: t = new String(this.Int) }return t }, this.InitializeClass = function () { this.Int = parseInt(e), this.DefaultFormat = "" }, this.InitializeClass() }, System.Type.RegisterClass("System.Int32"), System.UInt32 = System.Byte, System.Int16 = System.Byte, System.UInt16 = System.Byte, System.DateTime = function (e, t, r, n, s, i, a) { return e = null === e ? 0 : e, t = null === t ? 1 : t, r = null === r ? 1 : r, n = null === n ? 0 : n, s = null === s ? 0 : s, i = null === i ? 0 : i, a = null === a ? 0 : a, new Date(e, t - 1, r, n, s, i, a) }, System.Type.RegisterClass("System.DateTime"), System.DateTime.Now = function () { return new Date }, System.DateTime.UtcNow = function () { var e = new Date; return new Date(e.getTime() + 6e4 * e.getTimezoneOffset()) }, System.DateTime.ToUniversalTime = function () { return new Date(this.getTime() + 6e4 * this.getTimezoneOffset()) }, System.DateTime._jsZero = 621355968e5, System.DateTime.Expressions = { Default: new RegExp("(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])/([0-9][0-9])"), UtcDate: new RegExp("([0-9][0-9][0-9][0-9])-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])"), UtcTime: new RegExp("([01][0-9]|[2][0123]):([012345][0-9]):([012345][0-9])"), UtcMs: new RegExp(".([0-9]+)"), Zone: new RegExp("([+-])([01][0-9]|[2][0123]):([012345][0-9])"), Utc: new RegExp("([0-9][0-9][0-9][0-9])-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[T ]([01][0-9]|[2][0123]):([012345][0-9]):([012345][0-9])") }, System.DateTime.Expression = new RegExp("(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])/([0-9][0-9])"), System.DateTime.ExpressionUtcDate = new RegExp("([0-9][0-9][0-9][0-9])-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])"), System.DateTime.ExpressionUtcTime = new RegExp("([01][0-9]|[2][0123]):([012345][0-9]):([012345][0-9])"), System.DateTime.ExpressionUtcMs = new RegExp(".([0-9]+)"), System.DateTime.ExpressionZone = new RegExp("([+-])([01][0-9]|[2][0123]):([012345][0-9])"), System.DateTime.ExpressionUtc = new RegExp(System.DateTime.ExpressionUtcDate.toString() + "[T ]" + System.DateTime.ExpressionUtcTime.toString()), System.DateTime.Subtract = function (e) { return this.getTime() - e.getTime() + System.DateTime._jsZero }, System.DateTime.Ticks = function () { var e = this; return Date.UTC(e.getFullYear(), e.getMonth(), e.getDate(), e.getHours(), e.getMinutes(), e.getSeconds(), e.getMilliseconds()) + System.DateTime._jsZero }, System.DateTime.SubtractDays = function (e, t) { date = this; var r = new Date(date - new System.TimeSpan(e, 0, 0, 0, 0).Ticks), n = r; return t && (n = new Date(r.getFullYear(), r.getMonth(), r.getDate())), n }, System.DateTime.SubtractMonths = function (e, t) { date = this; var r = 12 * date.getFullYear() + date.getMonth(); r -= e; var n = Math.floor(r / 12), s = r - 12 * n; date.setFullYear(n), date.setMonth(s); var i = date; return t && (i = new Date(date.getFullYear(), date.getMonth(), date.getDate())), i }, System.DateTime.GetFromString = function (e, t) { date = this; var r = 0, n = 0, s = 0, i = e.match(System.DateTime.ExpressionUtcDate); i && (r = i[0].replace(System.DateTime.ExpressionUtcDate, "$1"), n = i[0].replace(System.DateTime.ExpressionUtcDate, "$2"), s = i[0].replace(System.DateTime.ExpressionUtcDate, "$3")); var a = 0, o = 0, h = 0, l = e.match(System.DateTime.ExpressionUtcTime); l && (a = l[0].replace(System.DateTime.ExpressionUtcTime, "$1"), o = l[0].replace(System.DateTime.ExpressionUtcTime, "$2"), h = l[0].replace(System.DateTime.ExpressionUtcTime, "$3")); var y = 0, c = e.match(System.DateTime.ExpressionUtcMs); c && (y = c[0].replace(System.DateTime.ExpressionUtcMs, "$1"), y = parseFloat("0." + y), y = parseInt(1e3 * y)); var u = e.match(System.DateTime.ExpressionZone), p = 0, m = 0, f = 0; if (u && (p = parseInt(parseFloat(u[0].replace(System.DateTime.ExpressionZone, "$1") + "1")), m = parseInt(parseFloat(u[0].replace(System.DateTime.ExpressionZone, "$2")) * p), f = parseInt(parseFloat(u[0].replace(System.DateTime.ExpressionZone, "$3")) * p)), t) date.setUTCFullYear(r, n - 1, s), date.setUTCHours(a, o, h, y); else { var d = !1; d = (d = d || -1 < e.indexOf("GMT")) || -1 < e.indexOf("Z"), 0 !== p || d ? (date.setUTCFullYear(r, n - 1, s), date.setUTCHours(a, o, h, y), date = new Date(date.getTime() - 60 * (60 * m + f) * 1e3)) : (date.setFullYear(r, n - 1, s), date.setHours(a, o, h, y)) } return date }, System.DateTime.GetFromUtcString = function (e) { return date = this, date.GetFromString(e, !0), date }, System.DateTime.ToString = function (e) { }, System.DateTime.ToString = function (e, t) { var r; switch (arguments.length) { case 0: t = (r = this).DefaultFormat; break; case 1: r = this, t = e; break; case 2: r = e, t = t; break; default: return "" }r.addZero = function (e) { return e < 10 ? "0" + e : e }; var n = new Array("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"), s = new Array("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"), i = new Array("Sunday", "Monday", "Tuesday", "Wednesday", "Thuesday", "Friday", "Saturday"), a = new Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"); if (null === t && (t = r.DefaultFormat), "Outlook" === t) { var o = new Date; r.getFullYear() === o.getFullYear() && r.getMonth() === o.getMonth() && r.getDate() === o.getDate() ? results = "ddd HH:mm" : t = "yyyy-MM-dd HH:mm" } "X" === t && (t = "yyyy-MM-ddTHH:mm:ss.fffzzz"); var h = r.getMilliseconds(), l = r.getFullYear(), y = new String(r.addZero(l)); y = y.substr(y.length - 2, 2); var c = n[r.getDay()], u = i[r.getDay()], p = s[r.getDay()], m = r.addZero(r.getDate()), f = a[r.getMonth()], d = r.addZero(r.getMonth() + 1), S = r.getHours() % 12; 0 === S && (S = 12); var g = r.addZero(S), v = r.addZero(r.getHours()), C = r.addZero(r.getMinutes()), T = r.addZero(r.getSeconds()), _ = r.getHours() < 12 ? "AM" : "PM", B = r.addZero(r.getTimezoneOffset()), w = r.getTimezoneOffset(), I = w < 0; I && (w *= -1), B = r.addZero(Math.floor(w / 60)) + ":" + r.addZero(w % 60), B = I || 0 === w ? "+" + B : "-" + B; var A = new String(t); return A = (A = (A = (A = (A = (A = (A = (A = (A = (A = (A = (A = (A = (A = (A = (A = (A = A.replace("yyyy", l)).replace("yy", y)).replace("www", c)).replace(new RegExp("[d]{4-10}", "g"), u)).replace(new RegExp("[d]{3}", "g"), p)).replace("dd", m)).replace("MMM", f)).replace("MM", d)).replace("ss", T)).replace("hh", g)).replace("HH", v)).replace("mm", C)).replace("ss", T)).replace("tt", _)).replace("ffffff", (h + "000000").substr(0, 6))).replace("fff", (h + "000").substr(0, 3))).replace("zzz", B) }, System.DateTime.ToUtcString = function (e) { var t = this.getTime() + 6e4 * this.getTimezoneOffset(); return new Date(t).toString(e) }, System.DateTime.ToDifferenceString = function (e, t) { this.addZero = function (e) { return e < 10 ? "0" + e : e }; var r = (t = t || new Date).getTime() - e.getTime(), n = new Date(r), s = n.getHours(), i = n.getMinutes(), a = 1e3 * (60 * (60 * s + i) + n.getSeconds()) + n.getMilliseconds(), o = (n.getTime() - a) / 24 / 60 / 60 / 1e3; return Math.round(o) + "d " + s + "h " + i + "m" }, System.DateTime.GetDayType = function (e, t) { var r = ""; return 9 === (e = e || new Date).getMonth() && 31 === e.getDate() && (r = "Halloween"), 11 === e.getMonth() && 31 === e.getDate() && (r = "New Year"), t && (r = r.replace(" ", "")), r }, System.DateTime.Separator = "/", System.DateTime.YearMin = 1900, System.DateTime.YearMax = 2100, System.DateTime.DateFormat = "dd/mm/yyyy", System.DateTime.Expression = new RegExp("(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])/([0-9][0-9])"), System.DateTime.StripCharsInBag = function (e, t) { for (var r = "", n = 0; n < e.length; n++) { var s = e.charAt(n); -1 === t.indexOf(s) && (r += s) } return r }, System.DateTime.DaysInFebruary = function (e) { return e % 4 != 0 || e % 100 == 0 && e % 400 != 0 ? 28 : 29 }, System.DateTime.DaysArray = function (e) { for (var t = new Array, r = 1; r <= 12; r++)t[r] = 31, 4 !== r && 6 !== r && 9 !== r && 11 !== r || (t[r] = 30); return t[2] = System.DateTime.DaysInFebruary(e), t }, System.DateTime.IsDate = function (e) { var t = new String(e); if (results = "", !System.DateTime.Expression.test(t)) return 'Invalid! <span style="color: gray;">Format: mm/dd/yyyy</span>'; var r = parseInt(t.replace(System.DateTime.Expression, "$1"), 10), n = parseInt(t.replace(System.DateTime.Expression, "$2"), 10), s = parseInt(t.replace(System.DateTime.Expression, "$3"), 10); 0 <= s && s <= 50 && (s += 2e3), 50 < s && s <= 99 && (s += 1900); var i = System.DateTime.DaysArray(s)[r]; return r < 1 || 12 < r ? "Invalid Month" : i < n ? "Invalid Day" : s < System.DateTime.YearMin || s > System.DateTime.YearMax ? "Invalid Year" : results }, Date.prototype.GetFromString = System.DateTime.GetFromString, Date.prototype.GetFromUtcString = System.DateTime.GetFromUtcString, Date.prototype.DefaultFormat = "yyyy-MM-dd HH:mm:ss", Date.prototype.ToString = System.DateTime.ToString, System.Type.RegisterNamespace("System.Web.UI"), System.Web.IsIE = function () { var e = window.navigator.userAgent; return 0 < e.indexOf("MSIE ") || 0 < e.indexOf("Trident/") || 0 < e.indexOf("Edge/") }, System.Web.UI.Console = function (e, t) { this.IsEnabled = new Boolean, this.IsServerSide = new Boolean, this.IsInterfaceReady = !1, this.CurrentLevel = 0, this.Node, this.TableNode, this.FrameNode, this.ControlNode, this.LogDoc = null, this.LogDiv = null, this.UncommittedNodes = new Array, this.CssPrefix = "SWUI_Console", this.Id, this.IdentSize = unescape("%A0%A0%A0%A0"), this.CurrentIdent = "", this.LogStyle = {}, this.LogStyle2 = {}, this.TimeStamp = "yyyy-MM-dd HH:mm:ss", this.Context = null, this.Style = "", this.AutoScroll = !0, this.CmdLine, this.TraceLevelSwitch = 4; var r, i = this; function n(e, t) { return "OnKeyDown" === t.EventName && t.KeyName, null } function s(e, t) { e.Parent.Write("guest$ " + t.Command); var r = t.Command.toLowerCase(); switch (r) { case "/console cls": i.Clear(); break; case "/console help": e.Parent.Write("CLS - Clears the screen."); break; default: if (-1 < r.indexOf("/console kbd ")) { var n = t.Command.substr(13); i.ChangeLayout(n) } else if (-1 < r.indexOf("/console style ")) { var s = t.Command.substr(15); i.SetStyle(s) } else e.Parent.Write("'" + t.Command + "' is not recognized as an internal or external command,"), e.Parent.Write("operable program or batch file.") } } function a(e) { var t = this.Context.createElement("div"); t.styleText = this.StyleMessage, t.innerHTML = e; var r = i.BodyContentNode, n = r.scrollHeight - r.scrollTop - r.clientHeight; if (this.BodyContentNode.appendChild(t), this.AutoScroll) try { n <= 0 && this.ScrollDown(!0) } catch (e) { } } this.SetStyle = function (e) { "Matrix" === this.Style && void 0 === e ? this.Style = "Matrix" : this.Style = new String(e), this.returnIdent = function () { return i.CurrentIdent }, this.returnDate = function () { return '<span style="color: #A0A0A0;">' + (new Date).ToString(i.TimeStamp) + ": </span>" }, this.Font = "", function () { var e; for (e in this.LogStyle.onevent = { F: "'([oO]n)([a-zA-Z]+)'", R: "<span style=\"color: #800000;\">'$1$2'</span>", O: "g" }, this.LogStyle.on = { F: "^(on )(.*)", R: '<span style="color: #808080;">on </span>$2', O: "i" }, this.LogStyle.true = { F: "(true)", R: '<span style="color: #0000E0;">$1</span>', O: "ig" }, this.LogStyle.false = { F: "(false)", R: '<span style="color: #0000E0;">$1</span>', O: "ig" }, this.LogStyle.set = { F: "^(set )(.*)", R: '<span style="color: #707000;">set </span>$2', O: "i" }, this.LogStyle.get = { F: "^(get )(.*)", R: '<span style="color: #707000;">get </span>$2', O: "i" }, this.LogStyle.call = { F: "^(call )(.*)", R: '<span style="color: #0000FF;">call</span> $2', O: "i" }, this.LogStyle.warning = { F: "^(warning)(.*)", R: '<span style="color: #b8860b;">Warning</span>$2', O: "i" }, this.LogStyle.error = { F: "^(error)(.*)", R: '<span style="color: #ff0000;">Error</span>$2', O: "i" }, this.LogStyle.exec = { F: "^(exec)(.*)", R: '<span style="color: #cc0099;">exec</span>$2', O: "i" }, this.LogStyle.info = { F: "^(info.*)", R: '<span style="color: #c0c000;">$1</span>', O: "i" }, this.LogStyle.comment1 = { F: "([^:])//(.*)$", R: '$1<span style="color: #008000">//$2</span>', O: "g" }, this.LogStyle.comment2 = { F: "^//(.*)$", R: '<span style="color: #008000">//$1</span>', O: "g" }, this.LogStyle2.date = { F: "#date#", R: i.returnDate, O: "i" }, this.LogStyle2.ident = { F: "#ident#", R: i.returnIdent, O: "i" }, this.LogStyle) this.LogStyle[e].Fx = new RegExp(this.LogStyle[e].F, this.LogStyle[e].O); for (e in this.LogStyle2) this.LogStyle2[e].Fx = new RegExp(this.LogStyle2[e].F, this.LogStyle2[e].O) }.call(this), "Matrix" === this.Style ? this.TimeStamp = "dd:HH:mm:ss" : this.TimeStamp = "yyyy-MM-dd HH:mm:ss"; var t = this.CssPrefix + (e ? "_" + e : ""); this.StyleMessage = "white-space: nowrap; text-align: left;", this.Node && (this.Node.className = t, this.HeadNode.className = t + "_Head", this.HeadContentNode.className = t + "_HeadContent", this.BodyNode.className = t + "_Body", this.BodyContentNode.className = t + "_BodyContent", this.FootNode.className = t + "_Foot", this.FootContentNode.className = t + "_FootContent"), this.IsServerSide && (this.StyleMessage += "font-size: 8pt; font-family: Verdana;") }, this.LevelUpdate = function (e) { null === e || (this.CurrentLevel = 0 === e ? 0 : (1 < e && (e = 1), e < -1 && (e = -1), this.CurrentLevel + e)), i.CurrentIdent = ""; for (var t = 0; t < this.CurrentLevel; t++)i.CurrentIdent += this.IdentSize }, this.ChangeLayout = function (e) { System.Type.Class.Exists("System.Web.UI.ShortKeys.KeysManager") && (r && r.Dispose(), r = new System.Web.UI.ShortKeys.KeysManager("LayoutControl", this.CmdLine.LineNode), "" !== e && System.Type.Class.Exists("System.Globalization.KeyboardLayouts.Layout") && (r.KeyboardLayout = new System.Globalization.KeyboardLayouts.Layout(e)), r.PreventKeys(["CTRL+T", "CTRL+S"]), r.AllowKeys(["CTRL+S"]), r.OnShortCutAction = n) }, this.Clear = function () { this.BodyContentNode.innerHTML = "" }, this.CreateInterface = function () { if (!this.FrameNode && (this.Node = this.Context.getElementById(this.Id), 0 < this.Context.getElementsByTagName("body").length && !this.Node)) { if (this.Node = this.Context.createElement("div"), this.Node.id = this.Id, this.HeadNode = this.Context.createElement("div"), this.HeadContentNode = this.Context.createElement("div"), this.HeadContentNode.innerHTML = "Trace Log", this.BodyNode = this.Context.createElement("div"), this.BodyContentNode = this.Context.createElement("div"), this.FootNode = this.Context.createElement("div"), this.FootContentNode = this.Context.createElement("div"), this.Node.appendChild(this.HeadNode), this.Node.appendChild(this.BodyNode), this.Node.appendChild(this.FootNode), this.HeadNode.appendChild(this.HeadContentNode), this.BodyNode.appendChild(this.BodyContentNode), this.FootNode.appendChild(this.FootContentNode), System.Type.Class.Exists("System.Web.UI.HtmlControls.TextBox.CommandLine")) { var e = this.Context.createElement("input"); e.id = this.Id + "CommandLine", this.FootContentNode.appendChild(e), this.CmdLine = new System.Web.UI.HtmlControls.TextBox.CommandLine(e, this.Context), (this.CmdLine.Parent = this).CmdLine.Command = s } else this.CmdLine = this.Context.createElement("div"), this.CmdLine.innerHTML = "[Clear]", this.CmdLine.style.cursor = "pointer", this.CmdLine.onclick = function () { i.Clear() }, this.FootContentNode.appendChild(this.CmdLine); this.ChangeLayout("Lithuanian (UK)"), this.SetStyle(), this.IsInterfaceReady = !0, this.Write("Info: --- Document Body Initialized ---") } }, this.GetHtml = function (e, t, r) { 2 !== t && -2 !== t || this.LevelUpdate(t); var n, s, i, a = new String(e); for (n in this.LogStyle) s = this.LogStyle[n].Fx, i = this.LogStyle[n].R, a = a.replace(s, i); var o = "#date##ident#"; for (n in this.LogStyle2) s = this.LogStyle2[n].Fx, i = this.LogStyle2[n].R, o = o.replace(s, i); return !1 !== r && (a = o + a), 1 !== t && -1 !== t || this.LevelUpdate(t), a }, this.TraceError = function (e) { 0 < this.TraceLevelSwitch && this.Write(e) }, this.TraceWarning = function (e) { 1 < this.TraceLevelSwitch && this.Write(e) }, this.TraceInformation = function (e) { 2 < this.TraceLevelSwitch && this.Write(e) }, this.Write = function (e, t, r, n) { if (3 < this.TraceLevelSwitch) { var s = ""; if (this.IsEnabled || !0 === r) if (s = this.GetHtml(e, t, n), this.IsServerSide) s = '<div style="' + this.StyleMessage + '">' + s + "</div>\r\n", Response.Write(s), !0 === Response.Buffer && Response.Flush(); else if ("TraceLog" === this.Id && function () { if (0 < this.Context.getElementsByTagName("body").length) { var e = this.Context.getElementById("TraceLog"); if (e && !this.Context.getElementById("SystemTraceLogFrame")) { this.Id = "SystemTraceLog", this.CreateInterface(); var t = e.parentNode, r = this.Context.createElement("div"); r.id = "TraceLog", r.style.cssText = e.style.cssText, r.appendChild(this.Node), t.replaceChild(r, e) } } }.call(this), this.IsInterfaceReady) { if (0 < this.UncommittedNodes.length) { for (var i = 0; i < this.UncommittedNodes.length; i++)a.call(this, this.UncommittedNodes[i]); this.UncommittedNodes = [] } a.call(this, s) } else this.UncommittedNodes.push(s); return s } }, this.ScrollDown = function (e) { if (e) this.BodyNode.scrollTop += this.BodyNode.scrollHeight - this.BodyNode.scrollTop; else { var t = i.BodyContentNode; t.scrollHeight - t.scrollTop - t.clientHeight <= 0 && (this.BodyNode.scrollTop += this.BodyNode.scrollHeight - this.BodyNode.scrollTop) } }, this.WriteError = function (e, t) { this.Write("error: " + e, t, !0) }, this.WriteRecordSet = function (e, t) { if (!0 === this.IsEnabled || !0 === t) { this.Write("Route thru Records...", 1); var r = 0, n = 0; if (null !== e.Fields) { if (0 < (r = e.Fields.Count)) n = new Array(e.GetRows).length; this.Write("// RecordSet[" + r + "," + n + "]"), e.MoveFirst() } if (0 < n) for (var s = 0; s < r; s++) { var i = new String(e(s).Name), a = e(s).Value; -1 < i.indexOf("password") && (a = "&lt;********&gt;"), this.Write(i + " = '" + a + "'") } this.Write("...End", -2) } }, this.InitializeInterface = function () { }, this.InitializeEvents = function () { }, this.Dispose = function () { this.Node && (this.Table.tBodies[0].rows[0].childNodes[0].removeChild(this.FrameNode), this.Node.removeChild(this.TableNode)) }, this.Initialize = function () { if (this.IsEnabled = !1, this.Id = arguments[0], this.IsServerSide = "object" == typeof Response, !this.IsServerSide) { var e = arguments[1]; this.Context = e || document } this.SetStyle() }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Web.UI.Console"); var Trace = new System.Web.UI.Console("TraceLog"); for (var property in System.Web.Events = System.Web.Events ? System.Web.Events : {}, System.Web.Events.Add = function (sourceObjectId, eventName, objectName, delegateName) { var eventId = objectName + "." + delegateName, delegateScript = eventId + " = function(e){ var e = e ? e : window.event; var sender = e.target ? e.target : e.srcElement; " + objectName + ".OnEvent(sender,e); }", eventScript = ""; return eventScript = this.attachEvent ? 'document.getElementById("' + sourceObjectId + '").attachEvent("on' + eventName + '", ' + eventId + ");" : 'document.getElementById("' + sourceObjectId + '").addEventListener("' + eventName + '", ' + eventId + ",true);", Trace.Write(this.GetType().Name + "(" + sourceObjectId + ", " + eventName + ", " + objectName + ", " + delegateName + ");", 1), Trace.Write("// " + delegateScript), Trace.Write("// " + eventScript), Trace.Write("// return " + eventId), Trace.Write("}", -2), eval(delegateScript), eval(eventScript), eventId }, System.Web.Events.Remove = function (sourceObjectId, eventName, objectName, delegateName) { var eventId = objectName + "." + delegateName, eventScript = ""; eventScript = this.detachEvent ? 'document.getElementById("' + sourceObjectId + '").detachEvent("on' + eventName + '", ' + eventId + ");" : 'document.getElementById("' + sourceObjectId + '").removeEventListener("' + eventName + '", ' + eventId + ",true);", Trace.Write(this.GetType().Name + "(" + sourceObjectId + ", " + eventName + ", " + objectName + ", " + delegateName + ");", 1), Trace.Write("// " + eventScript), Trace.Write("}", -2), eval(eventScript) }, System.Web.HttpRequest = function () { this.HttpRequest = {}, this.QueryUrl = "", this.QueryData = "", this.States = new Array("Uninitialized", "Loading...", "Loaded", "Interactive", "Complete"), this.IsWebService, this.UniqueId = "", this.DownloadSize = 0, this.DownloadSizeLastP = 0, this.DownloadTotal = 0, this.DownloadTimeBegin = new Date, this.DownlaodTimeEnd = new Date, this.Busy = !1, this.IsServerSide = "object" == typeof Response; var u = this; this.OnDataReady = function (e, t) { Trace.Write("results") }, this.OnDataError, this.Send = function (e, t) { this.QueryUrl = new String(e), this.QueryData = new String(t), void 0 === this.IsWebService && (this.IsWebService = -1 < this.QueryUrl.indexOf("asmx")), Trace.Write(this.UniqueId + ": Send: [" + this.QueryData.length + " bytes] // IsWebService = " + this.IsWebService + "; QueryUrl=" + e + "?" + t), this.HttpRequest.onreadystatechange = this.OnReadyStateChange, System.Web.IsIE() || (this.HttpRequest.onprogress = this.OnProgress), this.IsWebService ? (this.HttpRequest.open("GET", this.QueryUrl + "?" + this.QueryData, !0), this.HttpRequest.setRequestHeader("Connection", "close"), this.HttpRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), this.HttpRequest.setRequestHeader("Accept-Ranges", "bytes")) : (this.HttpRequest.open("GET", this.QueryUrl + "?" + this.QueryData, !0), this.HttpRequest.setRequestHeader("Connection", "close"), this.HttpRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), this.HttpRequest.setRequestHeader("Content-Length", this.QueryData.length)), this.HttpRequest.setRequestHeader("POSTDATA", this.QueryData), System.Web.IsIE(), this.HttpRequest.send(this.QueryData) }, this.OnReadyState = function (e, t) { }, this.OnProgress = function (e) { var t = "on " + u.UniqueId + '<span style="color: gray;">.OnProgress:</span> ', r = u.StateToString() + "[" + u.HttpRequest.readyState + "]"; if ((3 === u.HttpRequest.readyState || 4 === u.HttpRequest.readyState) && !u.Busy) { u.Busy = !0, System.Web.IsIE() ? (u.DownloadSize = -1, u.DownloadTotal = -1) : (u.DownloadSize = u.HttpRequest.responseText.length, u.DownloadTotal = u.HttpRequest.getResponseHeader("Content-Length")), 4 === u.HttpRequest.readyState && (u.DownloadSize = u.DownloadTotal); var n = new System.EventArgs("onstatechange"); n.Size = u.DownloadSize, n.Total = u.DownloadTotal, u.OnReadyState && u.OnReadyState(u, n), Trace.Write(t + r + ": Bytes Retrieved: " + u.DownloadSize + " / " + u.DownloadTotal), u.Busy = !1 } }, this.OnReadyStateChange = function (e) { var t = "on " + u.UniqueId + '<span style="color: gray;">.OnReadyStateChange:</span> ', r = u.StateToString() + "[" + u.HttpRequest.readyState + "]"; if ((u.HttpRequest.readyState < 3 || 4 === u.HttpRequest.readyState) && "object" == typeof Trace && Trace.Write(t + "; state='" + r + "'"), 1 === u.HttpRequest.readyState && (u.TimeBegin = new Date), u.HttpRequest.readyState, u.HttpRequest.readyState, 4 === u.HttpRequest.readyState) { u.TimeEnd = new Date; var n = u.TimeEnd.getTime() - u.TimeBegin.getTime(), s = new Date(n); Trace.Write(t + "Download Time: " + s.getMinutes() + ":" + s.getMinutes() + ":" + s.getSeconds() + "." + s.getMilliseconds()), u.OnProgress(); var i = u.DownloadSize + " Bytes"; 1e3 <= u.DownloadSize && (i = Math.round(u.DownloadSize / 1024) + " KB"), Trace.Write(t + "Downloaded: " + i); var a = -1; try { a = u.HttpRequest.status } catch (e) { } Trace.Write(t + "Request Status: " + a); var o = !1; if (200 === a) { var h; if (Trace.Write(t + "Returning Results"), u.IsWebService) if (void 0 === (h = u.HttpRequest.responseXML)) Trace.Write("Error: " + u.UniqueId + " data has no properties!"), o = !0; else try { h.setProperty("SelectionLanguage", "XPath") } catch (e) { Trace.Write('Error: data.setProperty("SelectionLanguage", "XPath") because ' + e.message) } else h = u.HttpRequest.responseText; o || u.OnDataReady(u, h) } else { var l = "", y = ""; try { l = u.HttpRequest.responseText, y = u.HttpRequest.statusText } catch (e) { } Trace.Write(t + "There was a problem retrieving the XML data: " + a + " - " + y + " - " + u.QueryUrl + ": " + l); var c = new System.EventArgs("OnDataError"); u.OnDataError && u.OnDataError(u, c) } } }, this.Reload = function () { return Trace.Write("Reload: " + this.QueryUrl + "?" + this.QueryData), u.Send(this.QueryUrl, this.QueryData) }, this.StateToString = function () { return this.States[this.HttpRequest.readyState] }, this.PatamatersToQuery = function () { var e = ""; if (this.Parameters) for (var t in this.Parameters) 0 < e.length && (e += "&"), e += t + "=" + escape(this.Parameters[t]); return e }, this.InitializeClass = function () { this.HttpRequest = new System.Xml.XmlRequest; var e = new String(Math.random()); this.UniqueId = "WebService-" + e.substring(2) }, this.InitializeClass() }, System.Type.RegisterClass("System.Web.HttpRequest"), "object" != typeof Response && (System.Web.IsIE() || (document.implementation && document.implementation.hasFeature("XPath", "3.0") && (XMLDocument.prototype.selectNodes = function (e, t) { t || (t = this); for (var r = this.createNSResolver(this.documentElement), n = this.evaluate(e, t, r, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null), s = [], i = 0; i < n.snapshotLength; i++)s[i] = n.snapshotItem(i); return s }, Element.prototype.selectNodes = function (e) { if (this.ownerDocument.selectNodes) return this.ownerDocument.selectNodes(e, this); throw "For XML Elements Only" }, XMLDocument.prototype.selectSingleNode = function (e, t) { t || (t = this); var r = this.selectNodes(e, t); return 0 < r.length ? r[0] : null }, Element.prototype.selectSingleNode = function (e) { if (this.ownerDocument.selectSingleNode) return this.ownerDocument.selectSingleNode(e, this); throw "For XML Elements Only" }), "undefined" != typeof XMLDocument && void 0 === XMLDocument.setProperty && (XMLDocument.prototype.setProperty = function (e, t) { if ("SelectionNamespaces" === e) { namespaces = {}; for (var r = t.split(" xmlns:"), n = 1; n < r.length; n++) { var s = r[n].split("="); namespaces[s[0]] = s[1].replace(/\"/g, "") } this._ns = { lookupNamespaceURI: function (e) { return namespaces[e] } } } }, XMLDocument.prototype._ns = { lookupNamespaceURI: function () { return null } }))), System.Timers = System.Timers ? System.Timers : {}, System.Timers.Timer = function (e, t, r) { var s = this; this.Interval = 0, this.TimerId, this.RunAtStart, this.StartDate, this.StopDate, this.State = "stopped", this.customAction, this.AutoReset = !1, this.RunOnce = !1, this.OnStop, this.OnStart, this.OnResume, this.OnElapsed, this.OnEvent = function (e, t) { }, this._action = function () { var e; if (-1 === s.TimerId) Trace.Write("Warning: Can't do " + this.id + "[id=" + s.TimerId + "]._action(). Timer is stopped."); else { Trace.Write(s.id + "._action() // TimerId = " + s.TimerId), s.StopDate = new Date, window.clearInterval(s.TimerId), s.TimerId = -1, s.State = "stopped"; var t = new System.EventArgs("OnAction"); s.OnEvent(s, t), s.OnElapsed && s.OnElapsed(s, t), null !== s.Action && (e = s.Action(s, t)) } !0 === (e = !0 === e || !1 === e ? e : s.AutoReset) && (s.AutoReset = !1, Trace.Write("// " + s.id + ".AutoReset == true // AutoReset timer..."), s.Resume(!0)) }, this.ResetAndExecute = function () { s.Reset(!0) }, this.Reset = function (e) { s.Stop(), s.RunAtStart = !0 === e, s.Start(!0) }, this.Start = function (e) { if (s.AutoReset = !1 !== e, -1 === s.TimerId) { Trace.Write(this.id + ".Start(" + s.AutoReset + ") // TimerId = " + s.TimerId), s.State = "running", s.StartDate = new Date, !0 === s.RunAtStart ? (s.RunAtStart = !1, s.TimerId = window.setTimeout(s._action, 0)) : s.TimerId = window.setTimeout(s._action, s.Interval); var t = new System.EventArgs("OnStart"); s.OnEvent(s, t), s.OnStart && s.OnStart(s, t) } else Trace.Write("Warning: Can't " + this.id + "[id=" + s.TimerId + "].Start(). Timer is running.") }, this.Resume = function (e) { if (s.AutoReset = !1 !== e, -1 === s.TimerId) { s.State = "running"; var t = (new Date).getTime() - s.StopDate.getTime(), r = s.Interval - t; Trace.Write(this.id + ".Resume(" + s.AutoReset + ") // Time passed from: LastStop = " + t + "; Difference with iterval = " + r), r < 0 && (r = 0), s.StartDate = new Date, !0 === s.RunAtStart ? (s.RunAtStart = !1, s.TimerId = window.setTimeout(s._action, 0)) : s.TimerId = window.setTimeout(s._action, r); var n = new System.EventArgs("OnResume"); s.OnEvent(s, n) } else Trace.Write("Warning: Can't " + this.id + "[id=" + s.TimerId + "].Resume(). Timer is already running.") }, this.Stop = function () { if (-1 === s.TimerId) Trace.Write("Warning: Can't " + this.id + "[id=" + s.TimerId + "].Stop(). Timer is already stopped."); else { Trace.Write(this.id + ".Stop() // TimerId = " + s.TimerId), s.StopDate = new Date, window.clearTimeout(s.TimerId), s.TimerId = -1, s.State = "stopped"; var e = new System.EventArgs("OnStoped"); s.OnEvent(s, e), s.OnStop && s.OnStop(s, e) } }, this.Initialize = function () { this.id = e || this.GetType().Name, this.TimerId = -1, this.RunAtStart = !1, this.Interval = t ? parseInt(t) : 4e3, s.AutoReset = !1 !== r }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Timers.Timer"), System.Timers.ProgressTimer = function (e, t, r, n) { this.TimerId, this.Interval; var s = this; this.Task, this.Done, this.Args, this.Context, this.Tick = function () { this.Done ? (window.clearInterval(this.TimerId), this.TimerId = -1) : (this.Task.apply(this, this.Args), this.Done = !0) }, this.Execute = function () { this.Args = arguments, this.Done = !1, -1 === this.TimerId && (this.TimerId = setInterval(function () { s.Tick() }, this.Interval)) }, this.InitializeClass = function () { this.id = e || this.GetType().Name, this.Task = t, this.TimerId = -1, this.Context = n || this, this.Done = !0, this.Interval = r ? parseInt(r) : 200 }, this.InitializeClass() }, System.Type.RegisterClass("System.Timers.ProgressTimer"), System.Timers.Synchronizer = function (e, t) { this.OnResults, this.QueryUrl = "", this.QueryData = "", this.Browser, this.TimeServerUrl = "http://132.163.4.101:14/index.cgi", this.ServiceUrl = "", this.QueryUrl = "", this.TestType = "", this.TimeArray = [], this.TestTimes = 10, this.TestStart = function () { if (this.TimeArray.length === this.TestTimes) i.Results(); else { var e = {}; e.LocalTimeStart = new Date, this.TimeArray.push(e), Trace.Write("exec " + this.id + ".TestServer() // Request No." + this.TimeArray.length), this.Browser.UniqueId = this.id + ".Browser", this.QueryData = "", this.Browser.OnDataReady = this.OnDataReady, this.Browser.Send(this.QueryUrl, this.QueryData) } }, this.Test = function (e) { switch (this.TestType = e) { case "Server": this.QueryUrl = this.ServiceUrl + "/GetServerUtcTime"; break; case "Database": this.QueryUrl = this.ServiceUrl + "/GetDatabaseUtcTime"; break; case "Remote": this.QueryUrl = this.ServiceUrl + "/GetRemoteUtcTime"; break; default: this.QueryUrl = this.ServiceUrl + "/GetServerUtcTime" }this.TimeArray = [], this.TestStart() }, this.Results = function () { Trace.Write(this.id + ".Results()"); for (var e = 1e4, t = -1, r = 0; r < this.TimeArray.length; r++) { var n = this.TimeArray[r], s = n.LocalTimeEnd.getTime() - n.LocalTimeStart.getTime(); s < e && (e = s, t = r), Trace.Write("Delay Time " + r + ": " + s) } if (Trace.Write("Best Time " + t + ": " + e), -1 === t) Trace.Write("Error: Server reply is slower than 10 seconds!!!"); else { var i = this.TimeArray[t].LocalTimeStart.getTime() + e / 2, a = new Date(i), o = this.TimeArray[t].ServerUtcTime; Trace.Write("// Local Time: " + a.ToString("yyyy-MM-dd HH:mm:ss.fff") + " - Server Time: " + o.ToString("yyyy-MM-dd HH:mm:ss.fff")); var h = a.getTime() - o.getTime(); Trace.Write(this.TestType + " Time Difference: " + h / 1e3 + " seconds"); var l = new System.EventArgs("OnTimeSyncResults"); l.Difference = h / 1e3, l.Bias = e / 1e3, l.Distance = l.Difference < 0 ? -1 * l.Difference : l.Difference, l.Sign = l.Difference < 0 ? "-" : "+", l.TestType = this.TestType, l.Message = "Time Difference between your PC and " + this.TestType + " is: " + l.Difference + " sec. [Bias: ±" + l.Bias + " sec]", this.OnResults && this.OnResults(this, l) } }, this.OnDataReady = function (e, t) { Trace.Write("on " + i.id + ".OnDataReady(sender,data)"); var r = "child::*[name()='dateTime']/text()", n = t.selectSingleNode(r).nodeValue, s = System.Xml.Node.parseDateTime(t.selectSingleNode(r)); i.TimeArray[i.TimeArray.length - 1].ServerUtcTime = s, i.TimeArray[i.TimeArray.length - 1].LocalTimeEnd = new Date, Trace.Write("Server Local Time: " + n), Trace.Write("Server Local Time: " + s.ToString("yyyy-MM-dd HH:mm:ss.fff")), i.TestStart() }; var i = this; this.InitializeClass = function () { this.id = e || this.GetType().Name, this.ServiceUrl = t || "/WebServices/Time.asmx", this.Browser = new System.Web.HttpRequest }, this.InitializeClass() }, System.Type.RegisterClass("System.Timers.Synchronizer"), System.Clipboard = function () { }, System.Type.RegisterClass("System.Clipboard"), System.Clipboard.Copy = function (t) { var e = !1; if (window.clipboardData) window.clipboardData.setData("Text", t), e = !0; else if (window.netscape) try { netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect"); var r = "Text to copy", n = Components.classes["@mozilla.org/supports-string;1"].createInstance(Components.interfaces.nsISupportsString); if (!n) return !1; n.data = r; var s = Components.classes["@mozilla.org/widget/transferable;1"].createInstance(Components.interfaces.nsITransferable); if (!s) return !1; s.addDataFlavor("text/unicode"), s.setTransferData("text/unicode", n, 2 * r.length); var i = Components.interfaces.nsIClipboard, a = Components.classes["@mozilla.org/widget/clipboard;1"].getService(i); if (!a) return !1; a.setData(s, null, i.kGlobalClipboard) } catch (e) { System.Clipboard.FlashCopy(t) } return e }, System.Clipboard.FlashCopy = function (e) { var t = "FlashCopier"; if (!document.getElementById(t)) { var r = document.createElement("div"); r.id = t, document.body.appendChild(r) } var n = System.GetScriptsPath() + "/Adobe.Flash.Clipboard.swf"; document.getElementById(t).innerHTML = ""; var s = '<embed src="' + n + '" FlashVars="clipboard=' + encodeURIComponent(e) + '" width="0" height="0" type="application/x-shockwave-flash"></embed>'; document.getElementById(t).innerHTML = s }, System.Clipboard.Paste = function (e) { window.clipboardData ? window.clipboardData.getData("Text") : window.netscape }, System.Matrix = {}, System.Matrix.Current = null, System.Matrix.Ask = function () { document.getElementById("TheMatrixDiv").style.display = "", null !== System.Matrix.Current && System.Matrix.Current.Stop(), System.Matrix.Current = new System.Matrix.Type("\nYou take the blue pill and the story ends.\r\nYou wake in your bed and believe whatever you want to believe.\r\nYou take the red pill and you stay in Wonderland...\r\n...and I show you how deep the rabbit-hole goes.\r\nRemember - all I am offering is the truth, nothing more.\r\nWelcome to The Matrix!... "), System.Matrix.Current.Start() }, System.Matrix.Leave = function () { null !== System.Matrix.Current && System.Matrix.Current.Stop(), document.getElementById("TheMatrixDiv").style.display = "none", Trace.IsEnabled = !1, CrmInt.ShowHideTrace(!1), Trace.SetStyle("default") }, System.Matrix.Enter = function () { var e = document.getElementById("TheMatrixDiv"); e && (e.style.display = "none"), Trace.SetStyle("Matrix"), CrmInt && CrmInt.ShowHideTrace(!0), Trace.IsEnabled = !0 }, System.Matrix.Type = function (e) { var n = this; n.pos = -1, n.message = e, n.TextNode = document.createElement("span"), n.TextNode.style.color = "#00A000", n.CursorNode = document.createElement("span"), n.CursorNode.appendChild(document.createTextNode("")), n.CursorNode.style.color = "#20ff20", document.getElementById("TheMatrixConsole").appendChild(n.TextNode), document.getElementById("TheMatrixConsole").appendChild(n.CursorNode), n.TimerId, this.Start = function () { n.pos++; var e = n.CursorNode.firstChild; n.TextNode.appendChild(e); var t = n.message.charAt(n.pos); if (node = document.createTextNode(t), "\n" === t && n.TextNode.appendChild(document.createTextNode("Morpheus:> ")), "\r" === t && (node = document.createElement("br")), n.CursorNode.appendChild(node), n.pos < n.message.length) { var r = 100; "\r" === t && (r = 1e3), " " === t && (r = 0), n.TimerId = window.setTimeout(n.Start, r) } else n.CursorNode.style.textDecoration = "blink" }, this.Stop = function () { window.clearTimeout(n.TimerId), n.TextNode.innerHTML = "", n.CursorNode.innerHTML = "", n.CursorNode.appendChild(document.createTextNode("")), n.pos = -1 } }, System.Diagnostics = System.Diagnostics ? System.Diagnostics : {}, System.Type.RegisterNamespace("System.Diagnostics"), System.Diagnostics.TraceEventType = function () { }, System.Diagnostics.TraceEventType.prototype = { Critical: 0, Error: 1, Information: 2 }, System.Type.RegisterEnum("System.Diagnostics.TraceEventType"), System.Diagnostics.TraceListener = function (e) { if (e === System.Diagnostics.TraceInternal || "TraceListener" === e.GetType().Name) return e }, System.Diagnostics.TraceListener.prototype = { Filter: null, Flush: function () { }, Ident: function () { }, TraceEvent: function (e, t, r, n) { }, Unindent: function () { }, Write: function (e, t) { (null === this.Filter || this.Filter.ShouldTrace(null, "", TraceEventType.Verbose, 0, e)) && (null === t ? this.Write(e) : this.Write(t + ": " + (null === e ? "" : e))) }, WriteLine: function (e) { }, Fail: function (e, t) { var r = new System.Text.StringBuilder; r.Append("TraceListenerFail"), r.Append(" "), r.Append(e), t && (r.Append(" "), r.Append(t)), this.WriteLine(r.ToString()) } }, System.Type.RegisterClass("System.Diagnostics.TraceListener"), System.Diagnostics.TraceInternal = new function () { this.IdentLevel = 0, this._invoke = function (e, t) { for (var r = System.Diagnostics.Trace.Listeners(), n = 0; n < r.length; n++) { var s = new System.Diagnostics.TraceListener(r[n]); s[e].apply(s, t), it.AutoFlush && s.Flush() } }, this.Write = function (e) { this._invoke.apply(this, ["Write", e]) }, this.WriteLine = function (e) { this._invoke.apply(thistory, ["WriteLine", e]) }, this.Indent = function () { indentLevel < 2147483647 && indentLevel++; for (var e = System.Diagnostics.Trace.Listeners(), t = 0; t < e.length; t++) { new System.Diagnostics.TraceListener(e[t]).IndentLevel = this.IndentLevel } }, this.TraceEvent = function (e, t, r, n) { this._invoke.apply(this, ["TraceEvent", arguments]) }, this.Unindent = function () { 0 < indentLevel && indentLevel--; for (var e = System.Diagnostics.Trace.Listeners(), t = 0; t < e.length; t++) { new System.Diagnostics.TraceListener(e[t]).IndentLevel = this.IndentLevel } } }, System.Diagnostics.Trace = new System.Diagnostics.TraceListener(System.Diagnostics.TraceInternal), System.Diagnostics.Trace.AutoFlush = !1, System.Diagnostics.Trace.Listeners = [], System.Extensions.Apply.apply(this), System.IO = System.IO ? System.IO : {}, System.Type.RegisterNamespace("System.IO"), System.IO.Directory = function () { }, System.Type.RegisterClass("System.IO.Directory"), System.IO.Directory.CreateDirectory = function (e) { var t = null, r = new ActiveXObject("Scripting.FileSystemObject"), n = new String(e); -1 === n.indexOf(":") && (n = Server.MapPath(e)); var s = new Array, i = new RegExp("\\\\", "g"); s = n.split(i); for (var a = "", o = 0; o < s.length; o++) { if (0 < o && (a += "\\"), a += s[o], 0 < o && !r.FolderExists(a)) { Trace.Write("Create folder: " + a); try { r.CreateFolder(a), t = r.GetFolder(a) } catch (e) { } } } return t }, System.IO.Directory.GetItems = function (e, t, r) { for (var n = new ActiveXObject("Scripting.FileSystemObject").GetFolder(e), s = new Enumerator(r ? n.Files : n.SubFolders), i = [], a = new RegExp(t || ".*"); !s.atEnd(); s.moveNext()) { var o = s.item(); null !== o.Name.match(a) && i.push(o) } return i }, System.IO.Directory.GetFiles = function (e, t) { return System.IO.Directory.GetItems(e, t, !0) }, System.IO.Directory.GetDirectories = function (e, t) { return System.IO.Directory.GetItems(e, t, !1) }, System.IO.File = function () { }, System.Type.RegisterClass("System.IO.File"), System.IO.File.ReadAllText = function (e) { new ActiveXObject("Scripting.FileSystemObject"); var t, r = fso.OpenTextFile(e, 1); return t = r.ReadAll(), r.Close(), r = null, t }, System.IO.File.WriteAllText = function (e, t, r) { if ("string" == typeof t) { var n = new ActiveXObject("Scripting.FileSystemObject").CreateTextFile(e); n.Write(t), n.Close(), n = null } else { var s = Server.CreateObject("ADODB.Stream"); s.Type = 1, null !== r && (s.CharSet = r), s.Open(); try { s.Write(t) } catch (e) { } s.SaveToFile(e, 2), s = null } }, System.IO.File.Delete = function (e, t) { return t = !0 === t, new ActiveXObject("Scripting.FileSystemObject").DeleteFile(e, t) }, System.IO.File.Exists = function (e) { return new ActiveXObject("Scripting.FileSystemObject").FileExists(e) }, System.IO.File.Move = function (e, t) { return new ActiveXObject("Scripting.FileSystemObject").MoveFile(e, t) }, System.IO.Path = function () { }, System.Type.RegisterClass("System.IO.Path"), System.IO.Path = function () { this.AltDirectorySeparatorChar = "/", this.DirectorySeparatorChar = "\\", this.ERROR_SUCCESS = 0, this.InternalInvalidPathChars = ['"', "<", ">", "|", "\0", "\b", "\x0010", "\x0011", "\x0012", "\x0014", "\x0015", "\x0016", "\x0017", "\x0018", "\x0019"], this.InvalidPathChars = ['"', "<", ">", "|", "\0", "\b", "\x0010", "\x0011", "\x0012", "\x0014", "\x0015", "\x0016", "\x0017", "\x0018", "\x0019"], this.MAX_DIRECTORY_PATH = 248, this.MAX_PATH = 260, this.PathSeparator = ";", this.VolumeSeparatorChar = ":", this.CheckInvalidPathChars = function (e) { var t = new RegExp("[" + this.InternalInvalidPathChars.toString().replace(",", "", "g") + "]"); return !!e.match(t) }, this.FixupPath = function (e) { return e }, this.IsDirectorySeparator = function (e) { return e === this.AltDirectorySeparatorChar || e === this.DirectorySeparatorChar }, this.GetRootLength = function (e) { if (!this.CheckInvalidPathChars(e)) { var t = 0, r = e.length; if (1 <= r && this.IsDirectorySeparator(e.charAt(0))) { if (t = 1, 2 <= r && this.IsDirectorySeparator(e.charAt(1))) for (var n = t = 2; t < r && (e.charAt(t) !== this.DirectorySeparatorChar && e.charAt(t) !== this.AltDirectorySeparatorChar || 0 < --n);)t++; return t } return 2 <= r && e.charAt(1) === this.VolumeSeparatorChar && (t = 2, 3 <= r && this.IsDirectorySeparator(e.charAt(2)) && t++), t } }, this.GetDirectoryName = function (e) { if (null !== e) { this.CheckInvalidPathChars(e); e = this.FixupPath(e); var t = this.GetRootLength(e); if (e.length > t) { var r = e.length; if (r === t) return null; for (; t < r && e.charAt(--r) !== this.DirectorySeparatorChar && e.charAt(r) !== this.AltDirectorySeparatorChar;); return e.substr(0, r) } } return null }, this.GetExtension = function (e) { if (null !== e && !this.CheckInvalidPathChars(e)) { for (var t = e.length, r = t; 0 <= --r;) { var n = e.charAt(r); if ("." === n) return r !== t - 1 ? e.substr(r, t - r) : ""; if (n === this.DirectorySeparatorChar || n === this.AltDirectorySeparatorChar || n === this.VolumeSeparatorChar) break } return "" } }, this.GetFileName = function (e) { if (null !== e && !this.CheckInvalidPathChars(e)) for (var t = e.length, r = t; 0 <= --r;) { var n = e.charAt(r); if (n === this.DirectorySeparatorChar || n === this.AltDirectorySeparatorChar || n === this.VolumeSeparatorChar) return e.substr(r + 1, t - r - 1) } return e }, this.GetFileNameWithoutExtension = function (e) { if (null === (e = this.GetFileName(e))) return null; var t = e.lastIndexOf("."); return -1 === t ? e : e.substr(0, t) }, this.HasExtension = function (e) { if (null !== e && !this.CheckInvalidPathChars(e)) for (var t = e.length; 0 <= --t;) { var r = e.charAt(t); if ("." === r) return t !== e.length - 1; if (r === this.DirectorySeparatorChar || r === this.AltDirectorySeparatorChar || r === this.VolumeSeparatorChar) break } return !1 }, this.GetPathRoot = function (e) { return null === e ? null : (e = this.FixupPath(e)).substr(0, this.GetRootLength(e)) }, this.IsPathRooted = function (e) { if (null !== e && !this.CheckInvalidPathChars(e)) { var t = e.length; if (1 <= t && (e.charAt(0) === this.DirectorySeparatorChar || e.charAt(0) === this.AltDirectorySeparatorChar) || 2 <= t && e.charAt(1) === this.VolumeSeparatorChar) return !0 } return !1 }, this.Combine = function (e, t) { if (null !== e && null !== t && !this.CheckInvalidPathChars(e) && !this.CheckInvalidPathChars(t)) { if (0 === t.length) return e; if (0 === e.length) return t; if (this.IsPathRooted(t)) return t; var r = e.charAt(e.length - 1); return r !== this.DirectorySeparatorChar && r !== this.AltDirectorySeparatorChar && r !== this.VolumeSeparatorChar ? e + this.DirectorySeparatorChar + t : e + t } }, this.Initialize = function () { }, this.Initialize.apply(this, arguments) }, System.IO.Stream = function () { this.Buffer = [], this.Capacity = 0, this.Length = 0, this.Position = 0, this.CanWrite = !0; this.CanRead = !0; this.Read = function (e, t, r) { if (t + r > e.length) throw new System.Exception("The sum of 'offset' and 'count' is larger than the 'buffer' length."); var n = 0; n = Math.min(r, this.Buffer.length - this.Position); for (var s = 0; s < n; s++)e[t + s] = this.Buffer[this.Position + s]; return this.Position += n, n }, this.ToArray = function () { return this.Buffer.slice(0, this.Buffer.length) }, this.Flush = function () { 0 }, this.Write = function (e, t, r) { if (t + r > e.length) throw new System.Exception("The sum of 'offset' and 'count' is greater than the 'buffer' length."); for (var n = 0; n < r; n++)this.Buffer[this.Position + n] = e[t + n]; this.Position += r }, this.WriteTo = function (e) { e.Write(this.Buffer, 0, this.Buffer.length) }, this.Close = function () { this.Dispose(!0) }, this.CopyTo = function (e, t) { 1 === arguments.length && (t = 4096); for (var r = 0, n = new System.Byte(t); 0 !== (r = this.Read(n, 0, n.length));)e.Write(n, 0, r) }, this.Dispose = function () { 0 === arguments.length && this.Dispose_0(), 1 === arguments.length && this.Dispose_1(!0) }, this.Dispose_0 = function () { this.Close() }, this.Dispose_1 = function (e) { }, this.Initialize = function () { if (arguments[0]) { var e = arguments[0]; this.Write(e, 0, e.length), this.Capacity = e.length, this.Length = e.length, this.Position = 0 } }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.IO.Stream"), System.IO.MemoryStream = function (e) { System.Type.Inherits(this, new System.IO.Stream); this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.IO.MemoryStream"), System.IO.InvalidDataException = function (e) { new System.Type.Inherits(this, new System.Exception); this.message = "", this.message += e || "Invalid Data."; var t = Error.create(this.message, { name: this.GetType().FullName }); return t.popStackFrame(), t }, System.Type.RegisterClass("System.IO.InvalidDataException"), System.Char.UNICODE_PLANE00_END = 65535, System.Char.UNICODE_PLANE01_START = 65536, System.Char.UNICODE_PLANE16_END = 1114111, System.Char.HIGH_SURROGATE_START = 55296, System.Char.HIGH_SURROGATE_END = 56319, System.Char.LOW_SURROGATE_START = 56320, System.Char.LOW_SURROGATE_END = 57343, System.Char.IsHighSurrogate = function (e, t) { var r = e.charCodeAt(t); return 55296 <= r && r <= 56319 }, System.Char.IsLowSurrogate = function (e, t) { var r = e.charCodeAt(t); return 56320 <= r && r <= 57343 }, System.Char._ConvertToUtf32_1 = function (e, t) { return "string" == typeof e && "string" == typeof t && (e = e.charCodeAt(0), t = t.charCodeAt(0)), 1024 * (e - 55296) + t - 56320 + 65536 }, System.Char._ConvertToUtf32_2 = function (e, t) { if (t < e.length - 1 && System.Char.IsHighSurrogate(e, t) && System.Char.IsLowSurrogate(e, t + 1)) { var r = e.charCodeAt(t), n = e.charCodeAt(t + 1); return System.Char._ConvertToUtf32_1(r, n) } return e.charCodeAt(t) }, System.Char.ConvertToUtf32 = function () { return "string" == typeof arguments[0] && "number" == typeof arguments[1] ? System.Char._ConvertToUtf32_2(arguments[0], arguments[1]) : System.Char._ConvertToUtf32_1(arguments[0], arguments[1]) }, System.Char.ConvertFromUtf32 = function (e) { if (e < 65536) return String.fromCharCode(e); var t = (e -= 65536) / 1024 + 55296, r = e % 1024 + 56320; return String.fromCharCode(t) + String.fromCharCode(r) }, System.Type.RegisterNamespace("System.Text"), System.Text.PadZeros = function (e, t) { var r = e.toString(), n = t - r.length; if (0 < n) for (var s = 1; s <= n; s++)r = "0" + r; return r }, System.Text.Trim = function (e, t) { null === t && (t = " "); var r = new RegExp("^[" + t + "]+", "g"), n = new RegExp("[" + t + "]+$", "g"); return e.replace(r, "").replace(n, "") }, System.Text.ToTitleCase = function (e) { var t = new RegExp("([A-Z])([A-Z]+)", "ig"); return e.replace(t, function (e, t, r) { return t.toUpperCase() + r.toLowerCase() }) }, System.Text.ToCamelCase = function (e) { var t = new RegExp("([A-Z])([A-Z]+)", "ig"); return e.replace(t, function (e, t, r) { return t.toUpperCase() + r.toLowerCase() }) }, System.Text.HtmlSymbolCodes = { 34: "quot", 38: "amp", 60: "lt", 62: "gt", 160: "nbsp", 161: "iexcl", 162: "cent", 163: "pound", 164: "curren", 165: "yen", 166: "brvbar", 167: "sect", 168: "uml", 169: "copy", 170: "ordf", 171: "laquo", 172: "not", 173: "shy", 174: "reg", 175: "macr", 176: "deg", 177: "plusmn", 178: "sup2", 179: "sup3", 180: "acute", 181: "micro", 182: "para", 183: "middot", 184: "cedil", 185: "sup1", 186: "ordm", 187: "raquo", 188: "frac14", 189: "frac12", 190: "frac34", 191: "iquest", 192: "Agrave", 193: "Aacute", 194: "Acirc", 195: "Atilde", 196: "Auml", 197: "Aring", 198: "AElig", 199: "Ccedil", 200: "Egrave", 201: "Eacute", 202: "Ecirc", 203: "Euml", 204: "Igrave", 205: "Iacute", 206: "Icirc", 207: "Iuml", 208: "ETH", 209: "Ntilde", 210: "Ograve", 211: "Oacute", 212: "Ocirc", 213: "Otilde", 214: "Ouml", 215: "times", 216: "Oslash", 217: "Ugrave", 218: "Uacute", 219: "Ucirc", 220: "Uuml", 221: "Yacute", 222: "THORN", 223: "szlig", 224: "agrave", 225: "aacute", 226: "acirc", 227: "atilde", 228: "auml", 229: "aring", 230: "aelig", 231: "ccedil", 232: "egrave", 233: "eacute", 234: "ecirc", 235: "euml", 236: "igrave", 237: "iacute", 238: "icirc", 239: "iuml", 240: "eth", 241: "ntilde", 242: "ograve", 243: "oacute", 244: "ocirc", 245: "otilde", 246: "ouml", 247: "divide", 248: "oslash", 249: "ugrave", 250: "uacute", 251: "ucirc", 252: "uuml", 253: "yacute", 254: "thorn", 255: "yuml", 338: "OElig", 339: "oelig", 352: "Scaron", 353: "scaron", 376: "Yuml", 402: "fnof", 710: "circ", 732: "tilde", 913: "Alpha", 914: "Beta", 915: "Gamma", 916: "Delta", 917: "Epsilon", 918: "Zeta", 919: "Eta", 920: "Theta", 921: "Iota", 922: "Kappa", 923: "Lambda", 924: "Mu", 925: "Nu", 926: "Xi", 927: "Omicron", 928: "Pi", 929: "Rho", 931: "Sigma", 932: "Tau", 933: "Upsilon", 934: "Phi", 935: "Chi", 936: "Psi", 937: "Omega", 945: "alpha", 946: "beta", 947: "gamma", 948: "delta", 949: "epsilon", 950: "zeta", 951: "eta", 952: "theta", 953: "iota", 954: "kappa", 955: "lambda", 956: "mu", 957: "nu", 958: "xi", 959: "omicron", 960: "pi", 961: "rho", 962: "sigmaf", 963: "sigma", 964: "tau", 965: "upsilon", 966: "phi", 967: "chi", 968: "psi", 969: "omega", 977: "thetasym", 978: "upsih", 982: "piv", 8194: "ensp", 8195: "emsp", 8201: "thinsp", 8204: "zwnj", 8205: "zwj", 8206: "lrm", 8207: "rlm", 8211: "ndash", 8212: "mdash", 8216: "lsquo", 8217: "rsquo", 8218: "sbquo", 8220: "ldquo", 8221: "rdquo", 8222: "bdquo", 8224: "dagger", 8225: "Dagger", 8226: "bull", 8230: "hellip", 8240: "permil", 8242: "prime", 8243: "Prime", 8249: "lsaquo", 8250: "rsaquo", 8254: "oline", 8260: "frasl", 8364: "euro", 8465: "image", 8472: "weierp", 8476: "real", 8482: "trade", 8501: "alefsym", 8592: "larr", 8593: "uarr", 8594: "rarr", 8595: "darr", 8596: "harr", 8629: "crarr", 8656: "lArr", 8657: "uArr", 8658: "rArr", 8659: "dArr", 8660: "hArr", 8704: "forall", 8706: "part", 8707: "exist", 8709: "empty", 8711: "nabla", 8712: "isin", 8713: "notin", 8715: "ni", 8719: "prod", 8721: "sum", 8722: "minus", 8727: "lowast", 8730: "radic", 8733: "prop", 8734: "infin", 8736: "ang", 8743: "and", 8744: "or", 8745: "cap", 8746: "cup", 8747: "int", 8756: "there4", 8764: "sim", 8773: "cong", 8776: "asymp", 8800: "ne", 8801: "equiv", 8804: "le", 8805: "ge", 8834: "sub", 8835: "sup", 8836: "nsub", 8838: "sube", 8839: "supe", 8853: "oplus", 8855: "otimes", 8869: "perp", 8901: "sdot", 8968: "lceil", 8969: "rceil", 8970: "lfloor", 8971: "rfloor", 9001: "lang", 9002: "rang", 9674: "loz", 9824: "spades", 9827: "clubs", 9829: "hearts", 9830: "diams" }, System.Text.HtmlChars = {}, System.Text.HtmlSymbolCodes) { var name = System.Text.HtmlSymbolCodes[property]; System.Text.HtmlChars[name] = String.fromCharCode(property) } System.Text.HtmlDecode = function (s) { var out = ""; if (null !== s) for (var l = s.length, i = 0; i < l; i++) { var ch = s.charAt(i); if ("&" === ch) { var semicolonIndex = s.indexOf(";", i + 1); if (0 < semicolonIndex) { var entity = s.substring(i + 1, semicolonIndex); ch = 1 < entity.length && "#" === entity.charAt(0) ? "x" === entity.charAt(1) || "X" === entity.charAt(1) ? String.fromCharCode(eval("0" + entity.substring(1))) : String.fromCharCode(eval(entity.substring(1))) : System.Text.HtmlChars[entity] ? System.Text.HtmlChars[entity] : "", i = semicolonIndex } } out += ch } return out }, System.Text.StringArray = {}, System.Text.StringArray.ToArray = function (e) { }, System.Text.StringArray.AddValue = function (e, t, r) { var n = new RegExp(";", "g"); e = e.replace(n, ","); var s = new RegExp("[^a-z0-9,\\\\]", "gi"); e = (e = e.replace(new RegExp("^.*<", "g"), ",")).replace(s, ""), e = "," + System.Text.Trim(e, ",") + ","; var i = System.Text.Trim(t, " "); if (e = e.replace("," + i + ",", ",", "gi"), e = System.Text.Trim(e, ","), !1 !== r) { var a = new RegExp("^.*<", "g"), o = new RegExp(">.*$", "g"); e = e + "," + (i = (i = i.replace(a, "")).replace(o, "")) } e = System.Text.Trim(e, ","); var h = new RegExp(",", "gi"); return e = e.replace(h, ", ") }, System.Text.StringArray.IsMatch = function (e, t) { var r = new RegExp("[^a-z0-9,\\\\]", "gi"); e = e.replace(r, ""); var n = new RegExp("^" + t + ",|," + t + ",|," + t + "$|^" + t + "$", "gi"); return null !== e.match(n) }, System.Type.RegisterNamespace("System.Text.RegularExpressions.Templates"), System.Text.RegularExpressions.Templates.Email = new RegExp("^[A-Z0-9_%-]+(|([.][A-Z0-9_%-]+)+)@[A-Z0-9_%-]+(|([.][A-Z0-9_%-]+)+)$", "i"), System.Text.RegularExpressions.Templates.EmailStrict = new RegExp("^[A-Z0-9_%-]+(|([.][A-Z0-9_%-]+)+)@[A-Z0-9_%-]+(|([.][A-Z0-9_%-]+)+)[.](([0-9]{1,3})|([A-Z]{2,3})|(aero|coop|info|museum|name))$", "i"), System.Text.RegularExpressions.GetByTag = function (e, t) { var r = new RegExp("<s*" + e + "[^>]*>(.*?)<s*/" + e + "s*>", "g"); return r.ignoreCase = !0 === t, r }, System.Text.RegularExpressions.GetMatch = function (e, t, r) { var n = ""; null === r && (r = "$1"); var s = new RegExp(t); null !== e.match(s) && (n = e.match(s)[0].replace(s, r)); return n }, System.Text.RegularExpressions.GetEscapedPattern = function (e) { for (var t = "", r = 0; r < e.length; r++) { var n = e.charCodeAt(r).toString(16); t += "\\u" + "0000".substr(0, 4 - n.length) + n } return t }, System.Text.RegularExpressions.Trim = function (e, t, r) { t || (t = " "); var n = t; r && (n = System.Text.RegularExpressions.GetEscapedPattern(t)); var s = new RegExp("^[" + n + "]+", "gm"), i = new RegExp("[" + n + "]+$", "gm"); return e.replace(s, "").replace(i, "") }, System.Text.RegularExpressions.Replace = function (e, t, r, n) { e = new String(e); var s = new RegExp(t, "g"); new RegExp(r); return s.ignoreCase = !0 === n, e.replace(s, r) }, System.Text.ControlChars = { Tab: 9, Vt: 11, Ff: 12, Space: 32, Lf: 10, Bs: 8, Ht: 9, Dq: 34, Sq: 39, Bh: 92 }, System.Text.UtfSignatures = { Utf16Le: 65535, Utf16Be: 65279, Utf8: 15711167 }, System.Text.StringBuilder = function (e) { var i = []; this.Append = function (e, t) { var r = !0; if (void 0 === e) r = !1; else for (var n = t || 1, s = 0; s < n; s++)i.push(e); return r }, this.AppendLine = function (e) { return void 0 === e && (e = ""), this.Append(e + "\r\n") }, this.AppendFormat = function (e, t) { var r = String.Format.apply(this, arguments); return this.Append(r) }, this.Clear = function () { 0 < i.length && i.splice(0, i.length) }, this.IsEmpty = function () { return 0 === i.length }, this.ToString = function (e) { return i.join(e || "") }, this.ToArray = function (e) { return i }, this.InitializeClass = function () { e && this.Append(e) }, this.InitializeClass() }, System.Type.RegisterClass("System.Text.StringBuilder"), System.Text.Encoding = function () { }, System.Type.RegisterClass("System.Text.Encoding"), System.Text.UTF8Encoder = function () { this.GetBytes = function (e) { for (var t = [], r = 0, n = 0; n < e.length; n++)65535 < (r = System.Char._ConvertToUtf32_2(e, n)) && n++ , r < 128 ? t.push(r) : r < 2048 ? (t.push(192 | r >> 6), t.push(128 | 63 & r)) : r < 65536 ? (t.push(224 | r >> 12), t.push(128 | r >> 6 & 63), t.push(128 | 63 & r)) : r < 2097152 ? (t.push(240 | r >> 18), t.push(128 | r >> 12 & 63), t.push(128 | r >> 6 & 63), t.push(128 | 63 & r)) : t.push(63); return t }, this.GetString = function (e, t, r) { void 0 === t && (t = 0), void 0 === r && (r = e.length - t); for (var n = "", s = { Value: 0 }, i = 0; i < r && (n += this.ReadChar(e, t + i, s), i += s.Value, 0 !== s.Value);); return n }, this.ReadChar = function (e, t, r) { void 0 === t && (t = 0); var n = 0, s = t, i = e.length; return e[s] >> 7 == 0 ? (n = 127 & e[s], r.Value = 1) : e[s] >> 5 == 6 && s + 1 < i ? (n = (31 & e[s++]) << 6 | 63 & e[s], r.Value = 2) : e[s] >> 4 == 14 && s + 2 < i ? (n = (15 & e[s++]) << 12 | (63 & e[s++]) << 6 | 63 & e[s], r.Value = 3) : e[s] >> 3 == 30 && s + 3 < i ? (n = (7 & e[s++]) << 18 | (63 & e[s++]) << 12 | (63 & e[s++]) << 6 | 63 & e[s], r.Value = 4) : (n = 63, r.Value = 1), System.Char.ConvertFromUtf32(n) }, this.InitializeClass = function () { }, this.InitializeClass() }, System.Type.RegisterClass("System.Text.UTF8Encoder"), System.Text.Encoding.UTF8 = new System.Text.UTF8Encoder, System.Text.UnicodeEncoder = function () { this.GetBytes = function (e) { for (var t = [], r = 0, n = 0; n < e.length; n++)65535 < (r = e.charCodeAt(n)) ? (t.push(56320 | 1023 & r), t.push(55232 + (r >> 10))) : (t.push(255 & r), t.push(r >> 8)); return t }, this.GetString = function (e, t, r) { void 0 === t && (t = 0), void 0 === r && (r = e.length - t); for (var n = "", s = { Value: 0 }, i = 0; i < r && (n += this.ReadChar(e, t + i, s), i += s.Value, 0 !== s.Value);); return n }, this.ReadChar = function (e, t, r) { void 0 === t && (t = 0); var n = t, s = e[n++], i = e[n++], a = i << 8 | s, o = String.fromCharCode(a); return r.Value = 2, n < e.length - 1 && 55296 <= a && a <= 56319 && (s = e[n++], 56320 <= (a = (i = e[n++]) << 8 | s) && a <= 57343 && (o += String.fromCharCode(a), r.Value = 4)), o }, this.InitializeClass = function () { }, this.InitializeClass() }, System.Type.RegisterClass("System.Text.UnicodeEncoder"), System.Text.Encoding.Unicode = new System.Text.UnicodeEncoder, System.Text.UTF32Encoder = function () { this.GetBytes = function (e) { for (var t = [], r = 0, n = 0; n < e.length; n++)r = System.Char._ConvertToUtf32_2(e, n), t.push(255 & r), t.push(r >> 8 & 255), t.push(r >> 16 & 255), t.push(r >> 24 & 255), 65535 < r && n++; return t }, this.GetString = function (e, t, r) { void 0 === t && (t = 0), void 0 === r && (r = e.length - t); for (var n = "", s = { Value: 0 }, i = 0; i < r && (n += this.ReadChar(e, t + i, s), i += s.Value, 0 !== s.Value);); return n }, this.ReadChar = function (e, t, r) { void 0 === t && (t = 0); var n, s, i, a, o = t; return n = e[o++], s = e[o++], i = e[o++], a = e[o] << 24 | i << 16 | s << 8 | n, r.Value = 4, System.Char.ConvertFromUtf32(a) }, this.InitializeClass = function () { }, this.InitializeClass() }, System.Type.RegisterClass("System.Text.UTF32Encoder"), System.Text.Encoding.UTF32 = new System.Text.UTF32Encoder, System.Text.ASCIIEncoder = function () { this.GetBytes = function (e) { for (var t = [], r = 0, n = 0; n < e.length; n++)255 < (r = e.charCodeAt(n)) ? t.push(63) : t.push(r); return t }, this.GetString = function (e, t, r) { void 0 === t && (t = 0), void 0 === r && (r = e.length - t); for (var n = "", s = { Value: 0 }, i = 0; i < r && (n += this.ReadChar(e, t + i, s), i += s.Value, 0 !== s.Value);); return n }, this.ReadChar = function (e, t, r) { return void 0 === t && (t = 0), r.Value = 1, String.fromCharCode(e[t]) }, this.Convert = function (e, t, r, n, s, i, a, o, h, l) { for (var y = 0; y < r; y++) { var c = String.fromCharCode(e[t + y]); if (n[s + y] = c, o.Value = y, (h.Value = y) <= i) break } l.Value = !0 }, this.InitializeClass = function () { }, this.InitializeClass() }, System.Type.RegisterClass("System.Text.ASCIIEncoder"), System.Text.Encoding.ASCII = new System.Text.ASCIIEncoder, System.Convert = System.Convert ? System.Convert : {}, System.Type.RegisterNamespace("System.Convert"), System.Base64FormattingOptions = function () { }, System.Base64FormattingOptions.prototype = { None: 0, InsertLineBreaks: 1 }, System.Type.RegisterEnum("System.Base64FormattingOptions"), System.Convert.Base64Array = function () { this.S = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", this.CA = [], this.IA = [], this.InitializeClass = function () { for (var e = "", t = 0; t < this.S.length; t++)e = this.S.charAt(t), this.CA[t] = e, this.IA[e] = t }, this.InitializeClass() }, System.Convert.ToBase64String = function (e, t) { var r = t === System.Base64FormattingOptions.InsertLineBreaks || !0 === t, n = new System.Convert.Base64Array, s = e ? e.length : 0; if (0 === s) return new Array(0); for (var i = 3 * Math.floor(s / 3), a = (s - 1) / 3 + 1 << 2, o = a + (r ? (a - 1) / 76 << 1 : 0), h = new Array(o), l = 0, y = 0, c = 0; l < i;) { var u = (255 & e[l++]) << 16 | (255 & e[l++]) << 8 | 255 & e[l++]; h[y++] = n.CA[u >>> 18 & 63], h[y++] = n.CA[u >>> 12 & 63], h[y++] = n.CA[u >>> 6 & 63], h[y++] = n.CA[63 & u], r && 19 == ++c && y < o - 2 && (h[y++] = "\r", h[y++] = "\n", c = 0) } var p = s - i; if (0 < p) { var m = (255 & e[i]) << 10 | (2 === p ? (255 & e[s - 1]) << 2 : 0); h[o - 4] = n.CA[m >> 12], h[o - 3] = n.CA[m >>> 6 & 63], h[o - 2] = 2 === p ? n.CA[63 & m] : "=", h[o - 1] = "=" } return h.join("") }, System.Convert.FromBase64String = function (e, t) { var r = new System.Convert.Base64Array; if (t) { var n = new RegExp("[^" + r.S + "]", "g"); e = e.replace(n, "") } var s = e.length; if (0 === s) return new Array(0); for (var i, a = 0, o = s - 1, h = "=" === e.charAt(o) ? "=" === e.charAt(o - 1) ? 2 : 1 : 0, l = o - a + 1, y = "\r" === e.charAt(76) ? l / 78 : 0, c = 76 < s ? y << 1 : 0, u = (6 * (l - c) >> 3) - h, p = new Array(u), m = 0, f = 3 * Math.floor(u / 3), d = 0; m < f;)i = r.IA[e.charAt(a++)] << 18 | r.IA[e.charAt(a++)] << 12 | r.IA[e.charAt(a++)] << 6 | r.IA[e.charAt(a++)], p[m++] = i >> 16, p[m++] = (65535 & i) >> 8, p[m++] = 255 & i, 0 < c && 19 == ++d && (a += 2, d = 0); if (m < u) { for (var S = i = 0; a <= o - h; S++)i |= r.IA[e.charAt(a++)] << 18 - 6 * S; for (var g = 16; m < u; g -= 8) { var v = Math.pow(2, g + 8) - 1; p[m++] = (i & v) >> g } } return p }, System.Convert.ToBase64UrlString = function (e, t) { var r = System.Convert.ToBase64String(e, t); return r = (r = (r = r.replace(new RegExp("[=]+$", "g"), "")).replace(new RegExp("[+]", "g"), "-")).replace(new RegExp("[/]", "g"), "_") }, System.Convert.FromBase64UrlString = function (e, t) { var r = (e = (e = e.replace(new RegExp("[-]", "g"), "+")).replace(new RegExp("[_]", "g"), "/")).length % 4; return 2 === r && (e += "=="), 3 === r && (e += "="), System.Convert.FromBase64String(e) }, System.Type.RegisterNamespace("System.Web.HttpServerUtility"), System.Web.HttpServerUtility.UrlTokenDecode = System.Convert.FromBase64UrlString, System.Web.HttpServerUtility.UrlTokenEncode = System.Convert.ToBase64UrlString, System.Convert.HexStringToBytes = function (e) { 0 !== e.indexOf("0x") && 0 !== e.indexOf("0X") || (e = e.substring(2)), e.length % 2 == 1 && (e = "0" + e); for (var t = [], r = 0; r < e.length; r += 2)t[r / 2] = parseInt(e.slice(r, r + 2), 16); return t }, System.Convert.BytesToHexString = function (e, t) { var r = []; if (e) { for (var n = 0; n < e.length; n++) { var s = e[n]; s <= 15 ? r.push("0" + s.toString(16)) : r.push(s.toString(16)) } var i = t || ""; return r.join(i) } }, System._bitConverter = function () { this.IsLittleEndian; var me = this, cMask = {}; cMask[System.TypeCode.Boolean] = 1, cMask[System.TypeCode.Byte] = 255, cMask[System.TypeCode.SByte] = 127, cMask[System.TypeCode.Int16] = 32767, cMask[System.TypeCode.Int32] = 2147483647, cMask[System.TypeCode.UInt16] = 65535, cMask[System.TypeCode.UInt32] = 4294967295; var sBits = {}; function _GetBytesFromIntArray(e, t, r, n, s) { var i = sBits[n], a = (i || 32) / 8; t = t || 0, r = r || e.length - t; var o, h, l = new Array(r * a), y = t + r; for (o = t; o < y; o++)for (h = 0; h < a; h++)l[s ? o * a + a - 1 - h : o * a + h] = e[o] >> 8 * h & 255; return l } function _ToIntArray(e, t, r, n, s) { var i = sBits[n], a = (i || 32) / 8; t = t || 0, r = r || e.length - t; for (var o, h, l = Array(), y = 0; y < r; y++) { var c = (y - y % a) / a; o = 255 & e[t + y], h = y % a * 8, s && (h = i - 8 - h), l[c] |= o << h } return l } function Add(e, t) { for (var r, n = 0, s = t.length; s--;)r = (0 | e[s]) + t[s] + n, e[s] = r % 10, n = 9 < r } function Halve(e) { for (var t, r = 0, n = e.length, s = 0; s < n; s++)"." !== (t = e[s]) && (r = 1 & (t += 10 * r), e[s] = t >> 1); r && (e[s] = 5) } function DecimalDigits(e, t) { for (var r = [0], n = [10], s = t + 1, i = e.length, a = s; a < i; a++)Halve(n), 1 === e[a] && Add(r, n); return r } function Twice(e) { var t = e.length; for (C = 0, T; t--;)"." !== (T = e[t]) && (T = 2 * T + C, e[t] = T % 10, C = 9 < T); C && e.unshift(1) } sBits[System.TypeCode.Boolean] = 1, sBits[System.TypeCode.Byte] = 8, sBits[System.TypeCode.SByte] = 8, sBits[System.TypeCode.Int16] = 16, sBits[System.TypeCode.Int32] = 32, sBits[System.TypeCode.UInt16] = 16, sBits[System.TypeCode.UInt32] = 32, this.GetBytes = function (e, t) { switch (typeof e) { case "boolean": return e ? [1] : [0]; case "number": switch (t) { case System.TypeCode.Single: return this.GetBytesFromNumber(e, 32); case System.TypeCode.Double: return this.GetBytesFromNumber(e, 64); case System.TypeCode.Int16: case System.TypeCode.UInt16: return this.GetBytesFromInt16Le(e); case System.TypeCode.Int32: case System.TypeCode.UInt32: default: return this.GetBytesFromInt32Le(e) }case "object": switch (t) { case System.TypeCode.Single: return this.GetBytesFromNumber(e, 32); case System.TypeCode.Double: return this.GetBytesFromNumber(e, 64); case System.TypeCode.Int16: case System.TypeCode.UInt16: case System.TypeCode.Int32: case System.TypeCode.UInt32: default: return this.GetBytesFromInt32ArrayLe(e) } } }, this.ToSingle = function (e, t) { var r = e.slice(t, t + 4); return this.ToNumber(r) }, this.ToDouble = function (e, t) { var r = e.slice(t, t + 8); return this.ToNumber(r) }, this.ToBoolean = function (e, t) { return !!(1 & e[t]) }, this.ToInt16Le = function (e, t) { return this.GetSigned(this.ToInt16ArrayLe(e, t, 2)[0], System.TypeCode.Int16) }, this.ToInt16Be = function (e, t) { return this.GetSigned(this.ToInt16ArrayBe(e, t, 2)[0], System.TypeCode.Int16) }, this.ToInt16 = this.ToInt16Le, this.ToUInt16Le = function (e, t) { return this.GetUnsigned(this.ToInt16Le(e, t), System.TypeCode.Int16) }, this.ToUInt16Be = function (e, t) { return this.GetUnsigned(this.ToInt16Be(e, t), System.TypeCode.Int16) }, this.ToUInt16 = this.ToUInt16Le, this.ToInt32Le = function (e, t) { return this.ToInt32ArrayLe(e, t, 4)[0] }, this.ToInt32Be = function (e, t) { return this.ToInt32ArrayBe(e, t, 4)[0] }, this.ToInt32 = this.ToInt32Le, this.ToUInt32Le = function (e, t) { return this.GetUnsigned(this.ToInt32Le(e, t), System.TypeCode.Int32) }, this.ToUInt32Be = function (e, t) { return this.GetUnsigned(this.ToInt32Be(e, t), System.TypeCode.Int32) }, this.ToUInt32 = this.ToUInt32Le, this._GetBytesFromInt = function (e, t, r) { var n = sBits[t], s = (n || 32) / 8, i = new Array(s); for (b = 0; b < s; b++)m = r ? s - 1 - b : b, i[m] = e >> 8 * b & 255; return i }, this.GetBytesFromInt16Le = function (e) { return this._GetBytesFromInt(e, System.TypeCode.Int16, !1) }, this.GetBytesFromInt16Be = function (e) { return this._GetBytesFromInt(e, System.TypeCode.Int16, !0) }, this.GetBytesFromInt32Le = function (e) { return this._GetBytesFromInt(e, System.TypeCode.Int32, !1) }, this.GetBytesFromInt32Be = function (e) { return this._GetBytesFromInt(e, System.TypeCode.Int32, !0) }, this.GetBitsLe = function (e, t) { var r = e.length, n = sBits[t]; n = n || 32; for (var s = new Array(r * n), i = 0; i < r; i++)for (var a = e[i], o = 0; o < n; o++)s[i * n + o] = 1 & a, a >>= 1; return s }, this.GetBitsBe = function (e, t) { var r = e.length, n = sBits[t]; n = n || 32; for (var s = new Array(r * n), i = 0; i < r; i++)for (var a = e[i], o = 0; o < n; o++)s[i * n + n - 1 - o] = 1 & a, a >>= 1; return s }, this.GetBits = this.GetBitsLe, this.GetUnsigned = function (e, t) { var r, n = cMask[t + 1]; if ("number" == typeof e) r = (e & n) << 0 >>> 0; else { n = cMask[t + 1]; var s = e.length; r = new Array(s); for (var i = 0; i < s; i++) { var a = e[i]; r[i] = a & n << 0 >>> 0 } } return r }, this.GetSigned = function (e, t) { var r, n = cMask[t], s = cMask[t - 1]; if ("number" == typeof e) r = s < e ? -(-e & n) : e; else { var i = e.length; r = new Array(i); for (var a = 0; a < i; a++) { var o = e[a]; r[a] = s < o ? -(-o & n) : o } } return r }, this.GetBytesFromInt16ArrayLe = function (e, t, r) { return _GetBytesFromIntArray(e, t, r, System.TypeCode.Int16, !1) }, this.GetBytesFromInt16ArrayBe = function (e, t, r) { return _GetBytesFromIntArray(e, t, r, System.TypeCode.Int16, !0) }, this.GetBytesFromInt32ArrayLe = function (e, t, r) { return _GetBytesFromIntArray(e, t, r, System.TypeCode.Int32, !1) }, this.GetBytesFromInt32ArrayBe = function (e, t, r) { return _GetBytesFromIntArray(e, t, r, System.TypeCode.Int32, !0) }, this.ToInt16ArrayLe = function (e, t, r) { return _ToIntArray(e, t, r, System.TypeCode.Int16, !1) }, this.ToInt16ArrayBe = function (e, t, r) { return _ToIntArray(e, t, r, System.TypeCode.Int16, !0) }, this.ToInt32ArrayLe = function (e, t, r) { return _ToIntArray(e, t, r, System.TypeCode.Int32, !1) }, this.ToInt32ArrayBe = function (e, t, r) { return _ToIntArray(e, t, r, System.TypeCode.Int32, !0) }, this.Int16EndianSwap = function (e) { return e = e >> 8 | e << 8 }, this.Int32EndianSwap = function (e) { return e = e >> 24 | e << 8 & 16711680 | e >> 8 & 65280 | e << 24 }, this.Int64EndianSwap = function (e) { return e = e >> 56 | e << 40 & 0xff000000000000 | e << 24 & 0xff0000000000 | e << 8 & 0xff00000000 | e >> 8 & 4278190080 | e >> 24 & 16711680 | e >> 40 & 65280 | e << 56 }, this.ToString = function (e, t, r) { var n = []; if (e) { r = r || "X2"; var s, i = parseInt(r.substr(1)), a = ""; for (s = 0; s < i; s++)a += "0"; for (s = 0; s < e.length; s++) { var o = (255 & e[s]).toString(16).toUpperCase(); n.push(a.substr(0, i - o.length) + o) } var h = void 0 === t ? "-" : t; return n.join(h) } }, this.SemSingleToBytes = function (e, t, r) { var n = new Array(4); return r = Math.pow(2, 23) * r + .5, n[3] = 255 & r, n[2] = 255 & r >> 8, n[1] = 127 & r >> 16 | (1 & t) << 7, n[0] = e << 7 | t >> 1, n }, this.SemDoubleToBytes = function (e, t, r) { var n = new Array(4); return r = Math.pow(2, 52) * r, n[3] = 65535 & r, n[2] = 65535 & r >> 16, r /= Math.pow(2, 32), n[1] = 65535 & r, n[0] = e << 15 | t << 4 | 15 & r >> 16, this.GetBytesFromInt16ArrayBe(n, 0, n.length) }, this.GetBytesFromNumber = function (e, t) { var r; this.Number = e, this.nb01 = ""; var n, s, i, a, o = { 32: { d: 127, c: 128, b: 0, a: 0 }, 64: { d: 32752, c: 0, b: 0, a: 0 } }, h = { 32: 8, 64: 11 }[t], l = t - h - 1; if (isNaN(e) && (n = !((r = o[t]).a = 1), s = Math.pow(2, h) - 1, i = Math.pow(2, -l)), r || (n = e < 0 || 1 / e < 0, isFinite(e) || (r = o[t], this.Sign && (r.d += 1 << t / 4 - 1), s = Math.pow(2, h) - 1, i = 0)), !r) { for (s = { 32: 127, 64: 1023 }[t], i = Math.abs(e); 2 <= i;)s++ , i /= 2; for (; i < 1 && 0 < this.Exponent;)s-- , i *= 2; s <= 0 && (i /= 2), 32 === t && 254 < this.Exponent && (r = { d: n ? 255 : 127, c: 128, b: 0, a: 0 }, s = Math.pow(2, h) - 1, i = 0) } return r ? (a = [r.a, r.b, r.c, r.d], 64 === t && (a = this.GetBytesFromInt16ArrayBe(a, 0, a.length))) : (32 === t && (a = this.SemSingleToBytes(n, s, i)), 64 === t && (a = this.SemDoubleToBytes(n, s, i))), a.reverse() }, this.ToNumber = function (value) { var bytes = value.reverse(), bits = this.GetBitsBe(bytes, System.TypeCode.Byte), BinStr = this.GetBitsBe(bytes, System.TypeCode.Byte).join(""), ExW = { 32: 8, 64: 11 }[BinStr.length], M = BinStr.match(new RegExp("^(.)(.{" + ExW + "})(.*)$")), sign = 1 === bits[0] ? "-" : "+", denorm = 0 == +M[2], expo = parseInt(M[2], 2) - Math.pow(2, ExW - 1) + 1, array = DecimalDigits(bits, ExW); for (array.unshift(+!denorm, "."), denorm && expo++; expo < 0;)expo++ , Halve(array); for (; 0 < expo;)expo-- , Twice(array); var value1 = sign + array.join("").replace(/(\d)0+$/, "$1"); return +eval(value1) }, this._isLittleEndian = function () { return 0 === this.GetBytes(-1.5, System.TypeCode.Double)[0] }, this.Initialize = function () { this.IsLittleEndian = this._isLittleEndian() }, this.Initialize.apply(this, arguments) }, System.BitConverter = new System._bitConverter, System.BitConverter.ToArrayDefinition = function (e, t, r) { var n = [], s = "<br />\r\nvar a = [<br />\r\n"; t = t || 8, r = r || "X4"; var i, a = parseInt(r.substr(1)), o = ""; for (i = 0; i < a; i++)o += "0"; for (i = 0; i < e.length; i++) { var h = e[i].toString(16).toUpperCase(); n.push(o.substr(0, a - h.length) + h), (i + 1) % t || (s += "0x", s += n.join(", 0x"), i < e.length - 1 && (s += ","), s += "<br />\r\n", n = []) } return 0 < n.length && (s += "0x", s += n.join(", 0x"), s += "<br />\r\n"), s += "];" }, System.Type.RegisterNamespace("System"), System.BigInt = function () { var i = System.BigInt.Utils; this.digits = [], this.Clear = function () { this.digits = [] }, this.CopyFrom = function (e) { this.digits = [e.digits.length], System.Array.Copy(e.digits, 0, this.digits, 0, e.digits.length) }, this.Clone = function () { var e = new System.BigInt; return e.CopyFrom(this), e }, this.Divide = function (e) { }, this.Multiply = function (e) { System.BigInt.Multiply(this, e, this) }, this.Equals = function (e) { return System.BigInt.Equals(this, e) }, this.GetHashCode = function () { }, this.IsNegative = function () { return i.IsNegative(this.digits) }, this.IsZero = function () { return !0 }, this.FromHex = function (e) { this.FromString(e, 16) }, this.ToHex = function () { return this.ToString(16) }, this.FromDecimal = function (e) { this.FromString(a, 10) }, this.ToDecimal = function () { return this.ToString(10) }, this.FromString = function (e, t) { var r = !1; 0 === e.indexOf("-") && (r = !0, e = e.substring(1, e.length)), -1 < e.indexOf("x") ? (e = e.substring(e.indexOf("x") + 1, e.length), this.digits = i.FromString(e, 16, 0)) : this.digits = void 0 === t ? i.FromString(e, 10, 0) : i.FromString(e, t, 0), r && i.Negate_(this.digits) }, this.ToString = function (e) { var t, r = this.digits, n = this.IsNegative(); return n && (r = i.Negate(r)), t = i.ToString(r, e), n && (t = "-" + t), t }, this.ToByteArray = function () { var e = i.Clone(this.digits), t = i.ToArray(e, 256), r = this.IsNegative(); r && (t[t.length - 1] = 255); var n = function (e, t) { for (var r = e.length; 0 < r-- && e[r] === t;); return r + 1 }(t, r ? 255 : 0), s = 0 != (128 & t[n - 1]); return r && !s && (t.push(255), n++), !r && s && (t.push(0), n++), t.slice(0, n) }, this.FromByteArray = function (e) { e[e.length - 1]; this.digits = i.FromArray(e, 256) }, function () { switch (typeof arguments[0]) { case "string": this.FromString.apply(this, arguments); break; default: this.FromString.apply(this, ["0"]) } }.apply(this, arguments) }, System.BigInt.Compare = function (e, t) { if (null === e && null === t) return 0; if (null === e) return -1; if (null === t) return 1; var r = e.Size(), n = t.Size(); if (r !== n) return r < n ? -1 : 1; for (; 0 < r--;)if (e.digits[r] !== t.digits[r]) return e.digits[r] < t.digits[r] ? -1 : 1; return 0 }, System.BigInt.Equals = function (e, t) { return 0 === System.BigInt.Compare(e, t) }, System.BigInt.MoreThan = function (e, t) { return 1 === System.BigInt.Compare(e, t) }, System.BigInt.LessThan = function (e, t) { return -1 === System.BigInt.Compare(e, t) }, System.BigInt._Utils = function () { var u = 0, p = 0, m = 0, l = "", o = []; function c(e) { var t, r, n, s; for (r = new Array(e), t = 0; t < e; t++)r[t] = 0; for (r[0] = 2, n = 0; r[n] < e;) { for (t = r[n] * r[n]; t < e; t += r[n])r[t] = 1; for (r[++n] = r[n - 1] + 1; r[n] < e && r[r[n]]; r[n]++); } for (s = new Array(n), t = 0; t < n; t++)s[t] = r[t]; return s } function f(e, t) { return mr_x1.length !== e.length && (mr_x1 = j(e), mr_r = j(e), mr_a = j(e)), Q(mr_a, t), i(e, mr_a) } function i(e, t) { var r, n, s, i; for (mr_x1.length !== e.length && (mr_x1 = j(e), mr_r = j(e), mr_a = j(e)), q(mr_a, t), q(mr_r, e), q(mr_x1, e), J(mr_r, -1), J(mr_x1, -1), r = s = 0; r < mr_r.length; r++)for (n = 1; n < p; n <<= 1)e[r] & n ? (i = s < mr_r.length + u ? s : 0, r = mr_r.length, n = p) : s++; if (i && X(mr_r, i), ce(mr_a, mr_r, e), !L(mr_a, 1) && !G(mr_a, mr_x1)) { for (n = 1; n <= i - 1 && !G(mr_a, mr_x1);) { if (le(mr_a, e), L(mr_a, 1)) return 0; n++ } if (!G(mr_a, mr_x1)) return 0 } return 1 } function d(e) { var t, r, n; for (t = e.length - 1; 0 === e[t] && 0 < t; t--); for (r = 0, n = e[t]; n; n >>= 1, r++); return r += u * t } function h(e, t) { var r = U(0, (e.length > t ? e.length : t) * u, 0); return q(r, e), r } function e(e) { var t = U(0, e, 0); return B(t, e), ye(t, 1) } function r(e) { return n(e, 600 <= e ? 2 : 550 <= e ? 4 : 500 <= e ? 5 : 400 <= e ? 6 : 350 <= e ? 7 : 300 <= e ? 9 : 250 <= e ? 12 : 200 <= e ? 15 : 150 <= e ? 18 : 100 <= e ? 27 : 40) } function n(e, t) { var r, n, s; for (3e4, r = U(0, e, 0), 0 === primes.length && (primes = c(3e4)), rpprb.length !== r.length && (rpprb = j(r)); ;) { for (A(r, e, 0), r[0] |= 1, n = s = 0; n < primes.length && primes[n] <= 3e4; n++)if (0 === O(r, primes[n]) && !L(r, primes[n])) { s = 1; break } for (n = 0; n < t && !s; n++) { for (A(rpprb, e, 0); !F(r, rpprb);)A(rpprb, e, 0); i(r, rpprb) || (s = 1) } if (!s) return r } } function s(e, t) { var r = j(e); return oe(r, t), ye(r, 1) } function a(e, t) { var r = h(e, e.length + 1); return J(r, t), ye(r, 1) } function y(e, t) { var r = h(e, e.length + t.length); return ae(r, t), ye(r, 1) } function S(e, t, r) { var n = h(e, r.length); return ce(n, ye(t, 2), ye(r, 2)), ye(n, 1) } function g(e, t) { var r, n = M(e), s = M(t), i = e, a = t; if (n && (i = pe(e)), s && (a = pe(t)), n) return s ? F(i, a) ? (me(r = g(i, a)), r) : g(a, i) : (me(r = v(i, t)), r); if (s) return v(e, a); if (!F(i, a)) return me(r = g(a, e)), r; var o = h(e, e.length > t.length ? e.length + 1 : t.length + 1); return se(o, t), ye(o, 1) } function v(e, t) { var r, n = M(e), s = M(t), i = e, a = t; if (n && (i = pe(e)), s && (a = pe(t)), n) return s ? (me(r = v(i, a)), r) : F(a, i) ? g(a, i) : (me(r = g(i, a)), r); if (s) return F(i, a) ? g(i, a) : (me(r = g(a, i)), r); var o = h(e, e.length > t.length ? e.length + 1 : t.length + 1); return ie(o, t), ye(o, 1) } function C(e, t) { var r = h(e, t.length); return E(r, t) ? ye(r, 1) : null } function _(e, t, r) { var n = h(e, r.length); return he(n, t, r), ye(n, 1) } function B(e, t) { var r, n, s, i, a, o, h, l, y; if (0 === primes.length && (primes = c(3e4)), 0 === pows.length) for (pows = new Array(512), s = 0; s < 512; s++)pows[s] = Math.pow(2, s / 511 - 1); if (.1, 20, recLimit = 20, s_i2.length !== e.length && (s_i2 = j(e), s_R = j(e), s_n1 = j(e), s_r2 = j(e), s_d = j(e), s_x1 = j(e), s_x2 = j(e), s_b = j(e), s_n = j(e), s_i = j(e), s_rm = j(e), s_q = j(e), s_a = j(e), s_aa = j(e)), t <= recLimit) { for (r = (1 << (t + 2 >> 1)) - 1, Q(e, 0), n = 1; n;)for (e[n = 0] = 1 | 1 << t - 1 | Math.floor(Math.random() * (1 << t)), s = 1; s < primes.length && (primes[s] & r) === primes[s]; s++)if (0 == e[0] % primes[s]) { n = 1; break } P(e) } else { if (a = .1 * t * t, 40 < t) for (i = 1; t - t * i <= 20;)i = pows[Math.floor(512 * Math.random())]; else i = .5; for (y = Math.floor(i * t) + 1, B(s_q, y), Q(s_i2, 0), s_i2[Math.floor((t - 2) / u)] |= 1 << (t - 2) % u, N(s_i2, s_q, s_i, s_rm), h = d(s_i); ;) { for (; A(s_R, h, 0), !F(s_i, s_R);); for (J(s_R, 1), ie(s_R, s_i), q(s_n, s_q), ae(s_n, s_R), $(s_n, 2), J(s_n, 1), q(s_r2, s_R), $(s_r2, 2), s = o = 0; s < primes.length && primes[s] < a; s++)if (0 === O(s_n, primes[s]) && !L(s_n, primes[s])) { o = 1; break } if (o || f(s_n, 2) || (o = 1), !o) { for (J(s_n, -3), s = s_n.length - 1; 0 === s_n[s] && 0 < s; s--); for (l = 0, w = s_n[s]; w; w >>= 1, l++); for (l += u * s; A(s_a, l, 0), !F(s_n, s_a);); if (J(s_n, 3), J(s_a, 2), q(s_b, s_a), q(s_n1, s_n), J(s_n1, -1), ce(s_b, s_n1, s_n), J(s_b, -1), W(s_b) && (q(s_b, s_a), ce(s_b, s_r2, s_n), J(s_b, -1), q(s_aa, s_n), q(s_d, s_b), b(s_d, s_n), L(s_d, 1))) return void q(e, s_aa) } } } } function I(e, t) { var r; return A(r = U(0, 0, Math.floor((e - 1) / u) + 2), e, t), r } function A(e, t, r) { var n, s; for (n = 0; n < e.length; n++)e[n] = 0; for (s = Math.floor((t - 1) / u) + 1, n = 0; n < s; n++)e[n] = Math.floor(Math.random() * (1 << u - 1)); e[s - 1] &= (2 << (t - 1) % u) - 1, 1 === r && (e[s - 1] |= 1 << (t - 1) % u) } function x(e, t) { var r; return b(r = j(e), j(t)), r } function b(e, r) { var n, s, i, a, o, h, l, y, c; for (T.length !== e.length && (T = j(e)), c = 1; c;) { for (c = 0, n = 1; n < r.length; n++)if (r[n]) { c = 1; break } if (!c) break; for (n = e.length; !e[n] && 0 <= n; n--); for (s = e[n], i = r[n], h = o = 0, l = a = 1; i + h && i + l && (y = Math.floor((s + a) / (i + h)), qp = Math.floor((s + o) / (i + l)), y === qp);)t = a - y * h, a = h, h = t, t = o - y * l, o = l, l = t, t = s - y * i, s = i, i = t; o ? (q(T, e), ee(e, r, a, o), ee(r, T, l, h)) : (oe(e, r), q(T, e), q(e, r), q(r, T)) } if (0 !== r[0]) for (t = O(e, r[0]), Q(e, r[0]), r[0] = t; r[0];)e[0] %= r[0], t = e[0], e[0] = r[0], r[0] = t } function E(e, t) { var r = 1 + 2 * Math.max(e.length, t.length); if (!(1 & e[0] || 1 & t[0])) return Q(e, 0), 0; for (eg_u.length !== r && (eg_u = new Array(r), eg_v = new Array(r), eg_A = new Array(r), eg_B = new Array(r), eg_C = new Array(r), eg_D = new Array(r)), q(eg_u, e), q(eg_v, t), Q(eg_A, 1), Q(eg_B, 0), Q(eg_C, 0), Q(eg_D, 1); ;) { for (; !(1 & eg_u[0]);)V(eg_u), 1 & eg_A[0] || 1 & eg_B[0] ? (ie(eg_A, t), V(eg_A), se(eg_B, e)) : V(eg_A), V(eg_B); for (; !(1 & eg_v[0]);)V(eg_v), 1 & eg_C[0] || 1 & eg_D[0] ? (ie(eg_C, t), V(eg_C), se(eg_D, e)) : V(eg_C), V(eg_D); if (F(eg_v, eg_u) ? (se(eg_v, eg_u), se(eg_C, eg_A), se(eg_D, eg_B)) : (se(eg_u, eg_v), se(eg_A, eg_C), se(eg_B, eg_D)), L(eg_u, 0)) return M(eg_C) && ie(eg_C, t), q(e, eg_C), L(eg_v, 1) ? 1 : (Q(e, 0), 0) } } function D(e, t) { for (var r = 1, n = 0; ;) { if (1 === e) return r; if (0 === e) return 0; if (n -= r * Math.floor(t / e), 1 === (t %= e)) return n; if (0 === t) return 0; r -= n * Math.floor(e / t), e %= t } } function R(e, t, r, n, s) { var i = 0, a = Math.max(e.length, t.length); for (eg_u.length !== a && (eg_u = new Array(a), eg_A = new Array(a), eg_B = new Array(a), eg_C = new Array(a), eg_D = new Array(a)); !(1 & e[0] || 1 & t[0]);)V(e), V(t), i++; for (q(eg_u, e), q(r, t), Q(eg_A, 1), Q(eg_B, 0), Q(eg_C, 0), Q(eg_D, 1); ;) { for (; !(1 & eg_u[0]);)V(eg_u), 1 & eg_A[0] || 1 & eg_B[0] ? (ie(eg_A, t), V(eg_A), se(eg_B, e)) : V(eg_A), V(eg_B); for (; !(1 & r[0]);)V(r), 1 & eg_C[0] || 1 & eg_D[0] ? (ie(eg_C, t), V(eg_C), se(eg_D, e)) : V(eg_C), V(eg_D); if (F(r, eg_u) ? (se(r, eg_u), se(eg_C, eg_A), se(eg_D, eg_B)) : (se(eg_u, r), se(eg_A, eg_C), se(eg_B, eg_D)), L(eg_u, 0)) return M(eg_C) && (ie(eg_C, t), se(eg_D, e)), $(eg_D, -1), q(n, eg_C), q(s, eg_D), void Z(r, i) } } function M(e) { return e[e.length - 1] >> u - 1 & 1 } function H(e, t, r) { var n, s = e.length, i = t.length; for (k = s + r < i ? s + r : i, n = i - 1 - r; n < s && 0 <= n; n++)if (0 < e[n]) return 1; for (n = s - 1 + r; n < i; n++)if (0 < t[n]) return 0; for (n = k - 1; r <= n; n--) { if (e[n - r] > t[n]) return 1; if (e[n - r] < t[n]) return 0 } return 0 } t = new Array(0), ss = t, s0 = t, s1 = t, s2 = t, s3 = t, s4 = t, s5 = t, s6 = t, s7 = t, T = t, sa = t, mr_x1 = t, mr_r = t, mr_a = t, eg_v = t, eg_u = t, eg_A = t, eg_B = t, eg_C = t, eg_D = t, md_q1 = t, md_q2 = t, md_q3 = t, md_r = t, md_r1 = t, md_r2 = t, md_tt = t, primes = t, pows = t, s_i = t, s_i2 = t, s_R = t, s_rm = t, s_q = t, s_n1 = t, s_a = t, s_r2 = t, s_n = t, s_b = t, s_d = t, s_x1 = t, s_x2 = t, s_aa = t, rpprb = t; var F = function (e, t) { var r, n = e.length < t.length ? e.length : t.length; for (r = e.length; r < t.length; r++)if (t[r]) return 0; for (r = t.length; r < e.length; r++)if (e[r]) return 1; for (r = n - 1; 0 <= r; r--) { if (e[r] > t[r]) return 1; if (e[r] < t[r]) return 0 } return 0 }; function N(e, t, r, n) { var s, i, a, o, h, l, y, c; for (q(n, e), i = t.length; 0 === t[i - 1]; i--); for (c = t[i - 1], y = 0; c; y++)c >>= 1; for (Z(t, y = u - y), Z(n, y), s = n.length; 0 === n[s - 1] && i < s; s--); for (Q(r, 0); !H(t, n, s - i);)ne(n, t, s - i), r[s - i]++; for (a = s - 1; i <= a; a--) { for (n[a] === t[i - 1] ? r[a - i] = p : r[a - i] = Math.floor((n[a] * m + n[a - 1]) / t[i - 1]); l = (h = (1 < i ? t[i - 2] : 0) * r[a - i]) >> u, h &= p, l = (o = l + r[a - i] * t[i - 1]) >> u, o &= p, l === n[a] ? o === n[a - 1] ? h > (1 < a ? n[a - 2] : 0) : o > n[a - 1] : l > n[a];)r[a - i]--; te(n, t, -r[a - i], a - i), M(n) && (re(n, t, a - i), r[a - i]--) } X(t, y), X(n, y) } function P(e) { var t, r, n, s; for (r = e.length, t = n = 0; t < r; t++)(n += e[t]) < (s = 0) && (n += (s = -(n >> u)) * m), e[t] = n & p, n = (n >> u) - s } function O(e, t) { var r, n = 0; for (r = e.length - 1; 0 <= r; r--)n = (n * m + e[r]) % t; return n } function U(e, t, r) { var n; return n = (n = Math.ceil(t / u) + 1) < r ? r : n, buff = new Array(n), Q(buff, e), buff } function z(e, t, r) { var n, s, i, a, o, h = e.length; if (-1 === t) { for (i = new Array(0); ;) { for (a = new Array(i.length + 1), s = 0; s < i.length; s++)a[s + 1] = i[s]; if (a[0] = parseInt(e, 10), i = a, (n = e.indexOf(",", 0)) < 1) break; if (0 === (e = e.substring(n + 1)).length) break } return i.length < r ? (q(a = new Array(r), i), a) : i } for (i = U(0, t * h, 0), s = 0; s < h && (n = l.indexOf(e.substring(s, s + 1), 0), t <= 36 && 36 <= n && (n -= 26), !(t <= n || n < 0)); s++)$(i, t), J(i, n); for (h = i.length; 0 < h && !i[h - 1]; h--); for (h = h + 1 < r ? r : h + 1, a = new Array(h), o = h < i.length ? h : i.length, s = 0; s < o; s++)a[s] = i[s]; for (; s < h; s++)a[s] = 0; return a } function L(e, t) { var r; if (e[0] !== t) return 0; for (r = 1; r < e.length; r++)if (e[r]) return 0; return 1 } function G(e, t) { var r, n = e.length < t.length ? e.length : t.length; for (r = 0; r < n; r++)if (e[r] !== t[r]) return 0; if (e.length > t.length) { for (; r < e.length; r++)if (e[r]) return 0 } else for (; r < t.length; r++)if (t[r]) return 0; return 1 } function W(e) { var t; for (t = 0; t < e.length; t++)if (e[t]) return 0; return 1 } function K(e, t) { var r, n, s = ""; if (s6.length !== e.length ? s6 = j(e) : q(s6, e), -1 === t) { for (r = e.length - 1; 0 < r; r--)s += e[r] + ","; s += e[0] } else for (; !W(s6);)n = Y(s6, t), s = l.substring(n, n + 1) + s; return 0 === s.length && (s = "0"), s } function j(e) { return buff = new Array(e.length), q(buff, e), buff } function q(e, t) { var r, n = e.length < t.length ? e.length : t.length; for (r = 0; r < n; r++)e[r] = t[r]; for (r = n; r < e.length; r++)e[r] = 0 } function Q(e, t) { var r, n; for (n = t, r = 0; r < e.length; r++)e[r] = n & p, n >>= u } function J(e, t) { var r, n, s, i; for (e[0] += t, n = e.length, r = s = 0; r < n; r++)if ((s += e[r]) < (i = 0) && (s += (i = -(s >> u)) * m), e[r] = s & p, !(s = (s >> u) - i)) return } function X(e, t) { var r, n = Math.floor(t / u); if (n) { for (r = 0; r < e.length - n; r++)e[r] = e[r + n]; for (; r < e.length; r++)e[r] = 0; t %= u } for (r = 0; r < e.length - 1; r++)e[r] = p & (e[r + 1] << u - t | e[r] >> t); e[r] >>= t } function V(e) { var t; for (t = 0; t < e.length - 1; t++)e[t] = p & (e[t + 1] << u - 1 | e[t] >> 1); e[t] = e[t] >> 1 | e[t] & m >> 1 } function Z(e, t) { var r, n = Math.floor(t / u); if (n) { for (r = e.length; n <= r; r--)e[r] = e[r - n]; for (; 0 <= r; r--)e[r] = 0; t %= u } if (t) { for (r = e.length - 1; 0 < r; r--)e[r] = p & (e[r] << t | e[r - 1] >> u - t); e[r] = p & e[r] << t } } function $(e, t) { var r, n, s, i; if (t) for (n = e.length, r = s = 0; r < n; r++)(s += e[r] * t) < (i = 0) && (s += (i = -(s >> u)) * m), e[r] = s & p, s = (s >> u) - i } function Y(e, t) { var r, n, s = 0; for (r = e.length - 1; 0 <= r; r--)n = s * m + e[r], e[r] = Math.floor(n / t), s = n % t; return s } function ee(e, t, r, n) { var s, i, a, o; for (a = e.length < t.length ? e.length : t.length, o = e.length, s = i = 0; s < a; s++)i += r * e[s] + n * t[s], e[s] = i & p, i >>= u; for (s = a; s < o; s++)i += r * e[s], e[s] = i & p, i >>= u } function te(e, t, r, n) { var s, i, a, o; for (a = e.length < n + t.length ? e.length : n + t.length, o = e.length, i = 0, s = n; s < a; s++)i += e[s] + r * t[s - n], e[s] = i & p, i >>= u; for (s = a; i && s < o; s++)i += e[s], e[s] = i & p, i >>= u } function re(e, t, r) { var n, s, i, a; for (i = e.length < r + t.length ? e.length : r + t.length, a = e.length, s = 0, n = r; n < i; n++)s += e[n] + t[n - r], e[n] = s & p, s >>= u; for (n = i; s && n < a; n++)s += e[n], e[n] = s & p, s >>= u } function ne(e, t, r) { var n, s, i, a; for (i = e.length < r + t.length ? e.length : r + t.length, a = e.length, s = 0, n = r; n < i; n++)s += e[n] - t[n - r], e[n] = s & p, s >>= u; for (n = i; s && n < a; n++)s += e[n], e[n] = s & p, s >>= u } function se(e, t) { var r, n, s; for (s = e.length < t.length ? e.length : t.length, r = n = 0; r < s; r++)n += e[r] - t[r], e[r] = n & p, n >>= u; for (r = s; n && r < e.length; r++)n += e[r], e[r] = n & p, n >>= u } function ie(e, t) { var r, n, s, i, a = M(e), o = M(t); if (o && (r = pe(t)), a); else if (o) return F(e, r) ? void se(e, r) : (q(e, g(r, e)), void me(e)); for (i = e.length < t.length ? e.length : t.length, n = s = 0; n < i; n++)s += e[n] + t[n], e[n] = s & p, s >>= u; for (n = i; s && n < e.length; n++)s += e[n], e[n] = s & p, s >>= u } function ae(e, t) { var r; for (ss.length !== 2 * e.length && (ss = new Array(2 * e.length)), Q(ss, 0), r = 0; r < t.length; r++)t[r] && te(ss, e, t[r], r); q(e, ss) } function oe(e, t) { s4.length !== e.length ? s4 = j(e) : q(s4, e), s5.length !== e.length && (s5 = j(e)), N(s4, t, s5, e) } function he(e, t, r) { var n; for (s0.length !== 2 * e.length && (s0 = new Array(2 * e.length)), Q(s0, 0), n = 0; n < t.length; n++)t[n] && te(s0, e, t[n], n); oe(s0, r), q(e, s0) } function le(e, t) { var r, n, s, i, a; for (i = e.length; 0 < i && !e[i - 1]; i--); for (a = i > t.length ? 2 * i : 2 * t.length, s0.length !== a && (s0 = new Array(a)), Q(s0, 0), r = 0; r < i; r++) { for (s = s0[2 * r] + e[r] * e[r], s0[2 * r] = s & p, s >>= u, n = r + 1; n < i; n++)s = s0[r + n] + 2 * e[r] * e[n] + s, s0[r + n] = s & p, s >>= u; s0[r + i] = s } oe(s0, t), q(e, s0) } function ye(e, t) { var r, n; for (r = e.length; 0 < r && !e[r - 1]; r--); return q(n = new Array(r + t), e), n } function ce(e, t, r) { var n, s, i, a; if (s7.length !== r.length && (s7 = j(r)), 0 != (1 & r[0])) { for (Q(s7, 0), i = r.length; 0 < i && !r[i - 1]; i--); for (a = m - D(O(r, m), m), s7[i] = 1, he(e, s7, r), s3.length !== e.length ? s3 = j(e) : q(s3, e), n = t.length - 1; 0 < n & !t[n]; n--); if (0 !== t[n]) { for (s = 1 << u - 1; s && !(t[n] & s); s >>= 1); for (; ;) { if (!(s >>= 1)) { if (--n < 0) return void ue(e, o, r, a); s = 1 << u - 1 } ue(e, e, r, a), s & t[n] && ue(e, s3, r, a) } } else Q(e, 1) } else for (q(s7, e), Q(e, 1); !L(t, 0);)1 & t[0] && he(e, s7, r), Y(t, 2), le(s7, r) } function ue(e, t, r, n) { var s, i, a, o, h, l, y = r.length, c = t.length; for (sa.length !== y && (sa = new Array(y)), Q(sa, 0); 0 < y && 0 === r[y - 1]; y--); for (; 0 < c && 0 === t[c - 1]; c--); for (l = sa.length - 1, s = 0; s < y; s++) { for (a = (h = sa[0] + e[s] * t[0]) + (o = (h & p) * n & p) * r[0] >> u, h = e[s], i = 1; i < c - 4;)a += sa[i] + o * r[i] + h * t[i], sa[i - 1] = a & p, a >>= u, i++ , a += sa[i] + o * r[i] + h * t[i], sa[i - 1] = a & p, a >>= u, i++ , a += sa[i] + o * r[i] + h * t[i], sa[i - 1] = a & p, a >>= u, i++ , a += sa[i] + o * r[i] + h * t[i], sa[i - 1] = a & p, a >>= u, i++ , a += sa[i] + o * r[i] + h * t[i], sa[i - 1] = a & p, a >>= u, i++; for (; i < c;)a += sa[i] + o * r[i] + h * t[i], sa[i - 1] = a & p, a >>= u, i++; for (; i < y - 4;)a += sa[i] + o * r[i], sa[i - 1] = a & p, a >>= u, i++ , a += sa[i] + o * r[i], sa[i - 1] = a & p, a >>= u, i++ , a += sa[i] + o * r[i], sa[i - 1] = a & p, a >>= u, i++ , a += sa[i] + o * r[i], sa[i - 1] = a & p, a >>= u, i++ , a += sa[i] + o * r[i], sa[i - 1] = a & p, a >>= u, i++; for (; i < y;)a += sa[i] + o * r[i], sa[i - 1] = a & p, a >>= u, i++; for (; i < l;)a += sa[i], sa[i - 1] = a & p, a >>= u, i++; sa[i - 1] = a & p } F(r, sa) || se(sa, r), q(e, sa) } function pe(e) { var t = j(e); return $(t, -1), t } function me(e) { $(e, -1) } this.ToArray = function (e, t) { var r, n, s = []; if (s6.length !== e.length ? s6 = j(e) : q(s6, e), -1 === t) for (r = 0; r < e.length; r++)s.push(e[r]); else for (; !W(s6);)n = Y(s6, t), s.push(n); return 0 === s.length && s.push(0), s }, this.FromArray = function (e, t, r) { var n, s, i, a, o, h = e.length; for (i = U(0, t * h, 0), s = 0; s < h && !(t <= (n = e[s]) || n < 0); s++)$(i, t), J(i, n); for (h = i.length; 0 < h && !i[h - 1]; h--); for (h = h + 1 < r ? r : h + 1, a = new Array(h), o = h < i.length ? h : i.length, s = 0; s < o; s++)a[s] = i[s]; for (; s < h; s++)a[s] = 0; return a }; var fe = F; F = function (e, t) { return 1 === fe(e, t) }, this.ToBytes = function (e) { return this.ToArray(e, 256) }, this.FromBytes = function (e) { return this.FromArray(e, 256, 0) }, this._initialize = function () { for (this.ElementSize = u, this.ElementMask = p, this.ElementRadix = m, m = p + 1, l = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_=!@#$%^&*()[]{}|;:,.<>/?`~ \\'\"+-", u = 0; 1 << u < 1 << u + 1; u++); m = (p = (1 << (u >>= 1)) - 1) + 1, o = U(1, 1, 1), this.Add = v, this.AddInt = a, this.ToString = K, this.BitCount = d, this.Clone = j, this.Equals = G, this.EqualsInt = L, this.Expand = h, this.GetPrimes = c, this.GCD = x, this.MoreThan = F, this.MoreThanShitf = H, this.FromInt = U, this.InverseMod = C, this.InverseModInt = D, this.IsZero = W, this.IsProbPrime = i, this.IsPronPrimeInt = f, this.Mod = s, this.ModInt = O, this.Multiply = y, this.MultiplyMod = _, this.IsNegative = M, this.PowMod = S, this.NewBigInt = I, this.NewPrime = e, this.NewProbPrime = r, this.FromString = z, this.Subtract = g, this.Trim = ye, this.Negate = pe, this.Negate_ = me, this.Add_ = ie, this.AddInt_ = J, this.Clone_ = q, this.CloneInt_ = Q, this.GCD_ = b, this.InverseMod_ = E, this.Mod_ = oe, this.Multiply_ = ae, this.MultiplyMod_ = he, this.PowMod_ = ce, this.NewBigInt_ = A, this.NewPrime_ = B, this.Subtract_ = se, this.AddShift_ = re, this.Carry_ = P, this.Divide_ = N, this.DivideInt_ = Y, this.eGCD_ = R, this.Halve_ = V, this.LeftShift_ = Z, this.LinComb_ = ee, this.LinCombShift_ = te, this.MontMultiply_ = ue, this.MultiplyInt_ = $, this.RightShift_ = X, this.SquareMod_ = le, this.SubtractShift_ = ne }, this._initialize.apply(this, arguments) }, System.BigInt.Utils = new System.BigInt._Utils, System.BigInt.Add = function (e, t) { var r = new System.BigInt; return r.digits = System.BigInt.Utils.Add(e.digits, t.digits), r }, System.BigInt.Divide = function (e, t, r, n) { r.digits = new Array(e.digits.length), n.digits = new Array(e.digits.length), System.BigInt.Utils.Divide_(e.digits, t.digits, r.digits, n.digits) }, System.BigInt.Negate = function (e) { System.BigInt.Utils.Negate_(e.digits) }, System.BigInt.Multiply = function (e, t) { var r = new System.BigInt; return r.digits = System.BigInt.Utils.Multiply(e.digits, t.digits), r }, System.BigInt.Subtract = function (e, t) { var r = new System.BigInt; return r.digits = System.BigInt.Utils.Subtract(e.digits, t.digits), r }, System.Type.RegisterNamespace("System.Security.Cryptography"), System.Security.Cryptography.CryptographicException = function (e) { this.message = e, this.toString = function () { return this.name + ": " + this.message }; var t = Error.create(this.message, { name: this.GetType().FullName }); return t.popStackFrame(), t }, System.Type.RegisterClass("System.Security.Cryptography.CryptographicException"), System.Security.Cryptography.Rfc2898DeriveBytes = function (e, t, r) { var h; this.IterationCount = 1e3, this.Password, this.Salt, this.Hmac, this.HmacLength = 20; var l = 0, y = 0; this.F = function (e, t, r) { var n = new Array(e.length + 4); System.Buffer.BlockCopy(e, 0, n, 0, e.length); for (var s = 0; s < 4; s++)n[e.length + s] = 0; var i = System.BitConverter.GetBytes(r); System.Array.Reverse(i, 0, 4), System.Buffer.BlockCopy(i, 0, n, e.length, 4); var a = this.Hmac.ComputeHash(this.Password, n); n = a; for (var o = 1; o < t; o++) { for (var h = this.Hmac.ComputeHash(this.Password, n), l = 0; l < this.HmacLength; l++)a[l] = 255 & (a[l] ^ h[l]); n = h } return a }, this.GetBytes = function (e) { var t = Math.floor(e / this.HmacLength), r = Math.floor(e % this.HmacLength); 0 !== r && t++; var n = new Array(e), s = 0, i = 0; if (0 < l) { if (i = Math.min(this.HmacLength - l, e), System.Buffer.BlockCopy(h, l, n, 0, i), e <= i) return n; l = 0, r = e - (s = (s + i) % e) } for (var a = 1; a <= t; a++) { h = this.F(this.Salt, this.IterationCount, ++y), i = a === t ? r : this.HmacLength, System.Buffer.BlockCopy(h, l, n, s, i); var o = s; if (s = (s + l + i) % e, l = i === this.HmacLength ? 0 : i, e <= o + i) return n } return n }, this.Initialize = function () { var e = arguments[0], t = arguments[1], r = arguments[2]; "string" == typeof e && (e = System.Text.Encoding.UTF8.GetBytes(e)), "string" == typeof t && (t = System.Text.Encoding.UTF8.GetBytes(t)), this.Password = e, this.Salt = t, r && (this.IterationCount = r), this.Hmac = new System.Security.Cryptography.HMACSHA1 }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Security.Cryptography.Rfc2898DeriveBytes"), System.Security.Cryptography.ICryptoTransform = function (e, t, r) { var i, d = null, s = !1, S = 0, a = [], o = [], l = [], y = [], h = 0, c = 0, u = !1; function p(e, t) { var r; r = s ? d.Encrypt(d.Key, e, System.Security.Cryptography.CipherMode.ECB) : d.Decrypt(d.Key, e, System.Security.Cryptography.CipherMode.ECB), System.Buffer.BlockCopy(r, 0, t, 0, S) } function m(e, t, r) { if (!e) throw "inputBuffer is can't be null"; if (t < 0) throw "inputOffset is out of range"; if (r < 0) throw "inputCount is out of range"; if (t > e.length - r) throw "inputBuffer is out of range (overflow)" } function f() { return !s && d.Padding !== System.Security.Cryptography.PaddingMode.Zeros && d.Padding !== System.Security.Cryptography.PaddingMode.None } function g(e, t, r, n) { void 0 === i && (i = new System.Security.Cryptography.RNGCryptoServiceProvider); var s = new System.Byte(r); n ? i.GetBytes(s) : i.GetNonZeroBytes(s), System.Buffer.BlockCopy(s, 0, e, t, r) } this.InputBlockSize = 0, this.OutputBlockSize = 0, this.CanTransformMultipleBlocks = !0, this.CanReuseTransform = !1, this._Transform = function (e, t) { switch (d.Mode) { case System.Security.Cryptography.CipherMode.ECB: p(e, t); break; case System.Security.Cryptography.CipherMode.CBC: !function (e, t) { var r = 0; if (s) { for (r = 0; r < S; r++)a[r] ^= e[r]; p(a, t), System.Buffer.BlockCopy(t, 0, a, 0, S) } else { for (System.Buffer.BlockCopy(e, 0, o, 0, S), p(e, t), r = 0; r < S; r++)t[r] ^= a[r]; System.Buffer.BlockCopy(o, 0, a, 0, S) } }(e, t); break; case System.Security.Cryptography.CipherMode.CFB: !function (e, t) { var r = 0, n = 0; if (s) for (r = 0; r < c; r++) { for (p(a, o), n = 0; n < h; n++)t[n + r] = o[n] ^ e[n + r]; System.Buffer.BlockCopy(a, h, a, 0, S - h), System.Buffer.BlockCopy(t, r, a, S - h, h) } else for (r = 0; r < c; r++)for (s = !0, p(a, o), s = !1, System.Buffer.BlockCopy(a, h, a, 0, S - h), System.Buffer.BlockCopy(e, r, a, S - h, h), n = 0; n < h; n++)t[n + r] = o[n] ^ e[n + r] }(e, t); break; case System.Security.Cryptography.CipherMode.OFB: !function (e, t) { throw "OFB isn't supported" }(); break; case System.Security.Cryptography.CipherMode.CTS: !function (e, t) { throw "CTS  isn't supported" }(); break; default: throw "Unkown CipherMode" + d.Mode } }, this.TransformBlock = function (e, t, r, n, s) { if (m(e, t, r), null === n) throw new System.ArgumentNullException("outputBuffer"); if (s < 0) throw new System.ArgumentOutOfRangeException("outputOffset", "< 0"); if (s > n.length - r) throw new System.ArgumentException("outputBuffer", "Overflow"); return this._InternalTransformBlock(e, t, r, n, s) }, this._InternalTransformBlock = function (e, t, r, n, s) { var i = t, a = 0; if (r !== S) { if (r % S != 0) throw new System.Security.Cryptography.CryptographicException("Invalid input block size."); a = r / S } else a = 1; f() && a--; var o = 0; u && (this._Transform(l, y), System.Buffer.BlockCopy(y, 0, n, s, S), s += S, o += S, u = !1); for (var h = 0; h < a; h++)System.Buffer.BlockCopy(e, i, l, 0, S), this._Transform(l, y), System.Buffer.BlockCopy(y, 0, n, s, S), i += S, s += S, o += S; return f() && (System.Buffer.BlockCopy(e, i, l, 0, S), u = !0), o }, this._Padding = function (e, t, r) { var n = S - r, s = 0 < n ? n : S, i = new System.Byte(s), a = 1, o = [], h = 0; switch (d.Padding) { case System.Security.Cryptography.PaddingMode.None: if (0 !== n) throw new System.Security.Cryptography.CryptographicException("Invalid block length"); break; case System.Security.Cryptography.PaddingMode.Zeros: for (h = 0; h < i.length; h++)i[h] = 0; 0 === n && (a = 2); break; case System.Security.Cryptography.PaddingMode.ANSIX923: i[i.length - 1] = s, 0 === n && (a = 2); break; case System.Security.Cryptography.PaddingMode.ISO10126: g(i, 0, i.length - 1, !0), i[i.length - 1] = s, 0 === n && (a = 2); break; case System.Security.Cryptography.PaddingMode.PKCS7: for (h = 0; h < i.length; h++)i[h] = s; 0 === n && (a = 2); break; case System.Security.Cryptography.PaddingMode.RsaEsPkcs: g(i, 1, i.length - 2, !1), i[0] = 0, i[i.length - 2] = 2, (i[i.length - 1] = 0) === n && (a = 2); break; case System.Security.Cryptography.PaddingMode.RsaEsOaep: var l = new System.Security.Cryptography.PKCS1Padding, y = new System.Security.Cryptography.PKCS1MaskGenerationMethod, c = new System.Security.Cryptography.SHA1CryptoServiceProvider, u = new System.Security.Cryptography.RNGCryptoServiceProvider; o = l.RsaEsOaepEncrypt(d, c, y, u, e) }var p = new System.Byte(S * a), m = new System.Byte(S * a); 0 === o.length ? (System.Buffer.BlockCopy(e, t, p, 0, r), (0 < n || 0 === n && 2 === a) && System.Buffer.BlockCopy(i, 0, p, r, s)) : System.Buffer.BlockCopy(o, t, p, 0, r + s); var f = {}; return f.blocksCount = a, f.iBuffer = p, f.oBuffer = m, f }, this._PaddingRemove = function (e, t, r) { var n = e.length, s = 0, i = 0; switch (d.Padding) { case System.Security.Cryptography.PaddingMode.ANSIX923: for ((0 === (s = 0 < n ? e[n - 1] : 0) || S < s) && System.Security.Cryptography.ThrowBadPaddingException(d.Padding, s, -1), i = s; 0 < i; i--)0 !== e[n - 1 - i] && System.Security.Cryptography.ThrowBadPaddingException(d.Padding, -1, i); n -= s; break; case System.Security.Cryptography.PaddingMode.ISO10126: (0 === (s = 0 < n ? e[n - 1] : 0) || S < s) && System.Security.Cryptography.ThrowBadPaddingException(d.Padding, s, -1), n -= s; break; case System.Security.Cryptography.PaddingMode.PKCS7: for ((0 === (s = 0 < n ? e[n - 1] : 0) || S < s) && (Trace.Write(s + ", " + S), System.Security.Cryptography.ThrowBadPaddingException(d.Padding, s, -1)), i = s - 1; 0 < i; i--)e[n - 1 - i] !== s && System.Security.Cryptography.ThrowBadPaddingException(d.Padding, -1, i); n -= s; break; case System.Security.Cryptography.PaddingMode.RsaEsPkcs: for (0 !== e[n - 1] && System.Security.Cryptography.ThrowBadPaddingException(d.Padding, -1, n - 1), 2 !== e[n - 2] && System.Security.Cryptography.ThrowBadPaddingException(d.Padding, -1, n - 2), i = n - 1 - 2; 0 < i; i--)if (0 === e[i]) { n = i; break } break; case System.Security.Cryptography.PaddingMode.RsaEsOaep: var a = new System.Security.Cryptography.PKCS1Padding, o = new System.Security.Cryptography.PKCS1MaskGenerationMethod, h = new System.Security.Cryptography.SHA1CryptoServiceProvider; return a.RsaEsOaepDecrypt(d, h, o, e); case System.Security.Cryptography.PaddingMode.None: case System.Security.Cryptography.PaddingMode.Zeros: }if (0 < n) { var l = new System.Byte(n); return System.Buffer.BlockCopy(e, 0, l, 0, n), System.Array.Clear(e, 0, e.length), l } return new System.Byte(0) }, this._FinalEncrypt = function (e, t, r) { for (var n = this._Padding(e, t, r), s = n.blocksCount, i = n.iBuffer, a = n.oBuffer, o = 0; o < s; o++) { var h = o * S; this._InternalTransformBlock(i, h, S, a, h) } return a }, this._FinalDecrypt = function (e, t, r) { if (0 < r % S) throw new System.Security.Cryptography.CryptographicException("Invalid input block size."); var n = r; u && (n += S); for (var s = new System.Byte(n), i = 0; 0 < r;) { var a = this._InternalTransformBlock(e, t, S, s, i); t += S, i += a, r -= S } return u && (this._Transform(l, y), System.Buffer.BlockCopy(y, 0, s, i, S), i += S, u = !1), this._PaddingRemove(s, t, r) }, this.TransformFinalBlock = function (e, t, r) { return m(e, t, r), s ? this._FinalEncrypt(e, t, r) : this._FinalDecrypt(e, t, r) }, this.Initialize = function (e, t) { s = t, (d = e) && (S = d.BlockSize >> 3, this.InputBlockSize = S, this.OutputBlockSize = S, a = new System.Byte(S), System.Buffer.BlockCopy(d.IV, 0, a, 0, Math.min(S, d.IV.length)), o = new System.Byte(S), 0 !== (h = d.FeedbackSize >> 3) && (c = S / h), l = new System.Byte(S), y = new System.Byte(S)) }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Security.Cryptography.ICryptoTransform"), System.Security.Cryptography.RNGCryptoServiceProvider = function () { var n; this.GetBytes = function (e) { for (var t = e.length, r = 0; r < t; r++)e[r] = n.Next(0, 256) }, this.GetNonZeroBytes = function (e) { for (var t = e.length, r = 0; r < t; r++)e[r] = n.Next(1, 256) }, this.Dispose = function () { m_disposed = !0 }, this.Initialize = function () { n = new System.Random }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Security.Cryptography.RNGCryptoServiceProvider"), System.Security.Cryptography.CryptoStream = function (e, t, r) { var l, y, n, c = [], s = !1, i = !1, u = 0, o = !1, h = [], p = 0, m = [], f = 0, d = 0, S = [], g = 0; this.Read = function (e, t, r) { var n = 0; if (0 === r || f === d && o) return n; for (null === h && (m = new System.Byte(y.OutputBlockSize << 2), d = f = 0, h = new System.Byte(y.InputBlockSize), p = l.Read(h, 0, h.length)); 0 < r;) { var s = d - f; if (s < y.InputBlockSize) { var i = 0; if (g = l.Read(S, 0, S.length), o = g < y.InputBlockSize) { 0 < g && (i = y.TransformBlock(h, 0, h.length, m, d), System.Buffer.BlockCopy(S, 0, h, 0, g), p = g, s += i, d += i); var a = y.TransformFinalBlock(h, 0, p); i = a.length, System.Buffer.BlockCopy(a, 0, m, d, a.length), System.Array.Clear(a, 0, a.length) } else i = y.TransformBlock(h, 0, h.length, m, d), System.Buffer.BlockCopy(S, 0, h, 0, g), p = g; s += i, d += i } f > y.InputBlockSize && (System.Buffer.BlockCopy(m, f, m, 0, s), d -= f, f = 0), 0 < (s = r < s ? r : s) && (System.Buffer.BlockCopy(m, f, e, t, s), f += s, n += s, t += s, r -= s), (s !== y.InputBlockSize && p !== y.InputBlockSize || o) && (r = 0) } return n }, this.Write = function (e, t, r) { if (0 < u && u !== y.InputBlockSize) { var n = y.InputBlockSize - u; n = r < n ? r : n, System.Buffer.BlockCopy(e, t, S, u, n), u += n, t += n, r -= n } for (var s = t, i = 0; 0 < r;)if (u === y.InputBlockSize && (i = y.TransformBlock(S, 0, u, c, 0), l.Write(c, 0, i), u = 0), y.CanTransformMultipleBlocks) { var a = Math.floor((u + r) / y.InputBlockSize), o = a * y.InputBlockSize; if (0 < a) { var h = new System.Byte(o); i = y.TransformBlock(e, t, o, h, 0), l.Write(h, 0, i), u = r - o, System.Buffer.BlockCopy(e, t + o, S, 0, u) } else System.Buffer.BlockCopy(e, t, S, u, r), u += r; r = 0 } else i = Math.min(y.InputBlockSize - u, r), System.Buffer.BlockCopy(e, s, S, u, i), s += i, u += i, r -= i }, this.Flush = function () { null !== l && l.Flush() }, this.FlushFinalBlock = function () { i = !0; var e = y.TransformFinalBlock(S, 0, u); null !== l && (l.Write(e, 0, e.length), "System.Security.Cryptography.CryptoStream" === l.GetType().FullName && l.FlushFinalBlock(), l.Flush()), System.Array.Clear(e, 0, e.length) }, this.ToArray = function () { return e.ToArray() }, this.Close = function () { i || n !== System.Security.Cryptography.CryptoStreamMode.Write || this.FlushFinalBlock(), null !== l && l.Close() }, this.Dispose = function () { s || (s = !0, null !== S && System.Array.Clear(S, 0, S.length), null !== c && System.Array.Clear(c, 0, c.length), disposing && (c = S = l = null)) }, this.Initialize = function () { l = arguments[0], y = arguments[1], n = arguments[2], s = !1, y && (S = new System.Byte(y.InputBlockSize), n === System.Security.Cryptography.CryptoStreamMode.Read ? c = new System.Byte(y.InputBlockSize) : n === System.Security.Cryptography.CryptoStreamMode.Write && (c = new System.Byte(y.OutputBlockSize))) }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Security.Cryptography.CryptoStream"), System.Security.Cryptography.HashAlgorithm = function () { this.CanReuseTransform = !0, this.CanTransformMultipleBlocks = !0, this.InputBlockSize = 1, this.OutputBlockSize = 1, this.HashSizeValue = 0, this.HashValue = new System.Byte, this.State = 0, this.HashSize = this.HashSizeValue, this._ComputeHash1 = function (e) { return this._ComputeHash2(e, 0, e.length) }, this._ComputeHash2 = function (e, t, r) { this.HashCore(e, t, r), this.HashValue = this.HashFinal(); var n = this.Hash(); return this.Initialize(), n }, this.ComputeHash = function () { if (1 === arguments.length) { var e = arguments[0]; "string" == typeof e && (e = System.Text.Encoding.UTF8.GetBytes(e)); var t = new Array(0); return t[0] = e, this._ComputeHash1.apply(this, t) } if (3 === arguments.length) return this._ComputeHash2.apply(this, arguments) }, this.HashCore = function (e, t, r) { }, this.HashFinal = function () { }, this.Initialize = function () { }, this.TransformBlock = function (e, t, r, n, s) { return this.State = 1, this.HashCore(e, t, r), null === n || e === n && t === s || System.Buffer.BlockCopy(e, t, n, s, r), r }, this.TransformFinalBlock = function (e, t, r) { this.HashCore(e, t, r), this.HashValue = this.HashFinal(); var n = new System.Byte(r); return 0 !== r && System.Buffer.BlockCopy(e, t, n, 0, r), this.State = 0, n }, this.Hash = function () { return this.HashValue.Clone() } }, System.Type.RegisterClass("System.Security.Cryptography.HashAlgorithm"), System.Security.Cryptography.HashAlgorithm.Create = function (e) { return new System.Security.Cryptography[e] }, System.Security.Cryptography.PKCS1MaskGenerationMethod = function () { this.GenerateMask = function (e, t) { for (var r, n, s, i = new System.Security.Cryptography.SHA1CryptoServiceProvider, a = new System.Byte(4), o = new System.Byte(t), h = 0, l = 0; l < o.length; l += 20) { r = h++ , n = a, void 0, s = System.BitConverter.GetBytesFromInt32Be(r), System.Buffer.BlockCopy(s, 0, n, 0, s.length), i.TransformBlock(e, 0, e.length, e, 0), i.TransformFinalBlock(a, 0, 4); var y = i.HashValue; i.Initialize(), o.Length - l > y.length ? System.Buffer.BlockCopy(y, 0, o, l, y.length) : System.Buffer.BlockCopy(y, 0, o, l, o.length - l) } return o } }, System.Type.RegisterClass("System.Security.Cryptography.PKCS1MaskGenerationMethod"), System.Security.Cryptography.PKCS1Padding = function () { this.RsaEsOaepEncrypt = function (e, t, r, n, s) { var i = e.ExportParameters(!1), a = s.Clone(); System.Array.Reverse(a); var o = System.Text.Encoding.UTF8.GetBytes(""), h = t.HashSize / 8, l = a.length, y = i.Modulus.length, c = t.ComputeHash(o), u = new Array(y - l - 2 * h - 2), p = 0; for (p = 0; p < u.length; p++)u[p] = 0; var m = new Array(h + u.length + 1 + l); System.Buffer.BlockCopy(c, 0, m, 0, h), System.Buffer.BlockCopy(u, 0, m, h, u.length), m[h + u.length] = 1, System.Buffer.BlockCopy(a, 0, m, h + u.length + 1, l); var f = new Array(h); n.GetBytes(f); var d = r.GenerateMask(f, y - h - 1), S = new Array(m.length); for (p = 0; p < m.length; p++)S[p] = m[p] ^ d[p]; var g = r.GenerateMask(S, h), v = new Array(f.length); for (p = 0; p < f.length; p++)v[p] = f[p] ^ g[p]; var C = new Array(1 + v.length + S.length); return C[0] = 0, System.Buffer.BlockCopy(v, 0, C, 1, v.length), System.Buffer.BlockCopy(S, 0, C, 1 + v.length, S.length), System.Array.Reverse(C), C }, this.RsaEsOaepDecrypt = function (e, t, r, n) { var s = e.ExportParameters(!0), i = n, a = new Array(i.length); System.Buffer.BlockCopy(i, 0, a, 0, i.length), System.Array.Reverse(a); var o = t.HashSize / 8, h = s.Modulus.length, l = a.slice(1, o + 1), y = a.slice(o + 1, h), c = r.GenerateMask(y, o), u = new Array(o), p = 0; for (p = 0; p < o; p++)u[p] = l[p] ^ c[p]; var m = r.GenerateMask(u, h - o - 1), f = new Array(m.length); for (p = 0; p < f.length; p++)f[p] = y[p] ^ m[p]; var d = []; for (p = o; p < h; p++)if (1 === f[p]) { d = f.slice(p + 1, f.length); break } return System.Array.Reverse(d), d } }, System.Type.RegisterClass("System.Security.Cryptography.PKCS1Padding"), System.Security.Cryptography.Utils = function () { }, System.Type.RegisterClass("System.Security.Cryptography.Utils"), System.Security.Cryptography.Utils.RsaOaepDecrypt = function (e, t, r, n) { }, System.Security.Cryptography.Utils.PKCS1Padding = System.Security.Cryptography.PKCS1Padding.prototype.RsaPkcs1Padding, System.Security.Cryptography.Utils.RotateLeft = function (e, t) { return e << t | e >>> 32 - t }, System.Security.Cryptography.Utils.RotateRight = function (e, t) { return e >>> t | e << 32 - t }, System.Security.Cryptography.Utils.DWORDToBigEndian = function (e, t, r) { for (var n = 0, s = 0; n < r; s += 4)e[s] = t[n] >> 24 & 255, e[s + 1] = t[n] >> 16 & 255, e[s + 2] = t[n] >> 8 & 255, e[s + 3] = 255 & t[n], n++ }, System.Security.Cryptography.Utils.DWORDFromBigEndian = function (e, t, r) { for (var n = 0, s = 0; n < t; s += 4) { var i = r[s] << 24 | r[s + 1] << 16 | r[s + 2] << 8 | r[s + 3]; e[n] = i >>> 0, n++ } }, System.Security.Cryptography.Utils.OidToHashAlgorithmName = function (e) { if ("1.3.14.3.2.26" === e) return "SHA1"; if ("2.16.840.1.101.3.4.2.1" === e) return "SHA256"; if ("2.16.840.1.101.3.4.2.2" === e) return "SHA384"; if ("2.16.840.1.101.3.4.2.3" !== e) throw "Not supported"; return "SHA512" }, System.Security.Cryptography.CipherMode = function () { }, System.Security.Cryptography.CipherMode.prototype = { CBC: 1, ECB: 2, OFB: 3, CFB: 4, CTS: 5 }, System.Type.RegisterEnum("System.Security.Cryptography.CipherMode"), System.Security.Cryptography.PaddingMode = function () { }, System.Security.Cryptography.PaddingMode.prototype = { None: 1, PKCS7: 2, Zeros: 3, ANSIX923: 4, ISO10126: 5, RsaEsPkcs: 6, RsaEsOaep: 7 }, System.Type.RegisterEnum("System.Security.Cryptography.PaddingMode"), System.Security.Cryptography.CryptoStreamMode = function () { }, System.Security.Cryptography.CryptoStreamMode.prototype = { Read: 0, Write: 1 }, System.Type.RegisterEnum("System.Security.Cryptography.CryptoStreamMode"), System.Type.RegisterNamespace("System.Security.Cryptography"), System.Security.Cryptography.SHA1 = function () { function d(e, t) { return System.Security.Cryptography.Utils.RotateLeft(e, t) } function S(e, t) { var r = (65535 & e) + (65535 & t); return (e >> 16) + (t >> 16) + (r >> 16) << 16 | 65535 & r } this.Name = "SHA1", this.chrsz = 8, this._buffer = new System.Byte, this._count = 0, this._expandedBuffer = [], this._stateSHA1 = [], this.ComputeHashAsHex = function (e) { var t = this.ComputeHash(e); return System.BitConverter.ToString(t, "") }, this.ComputeHashAsBase64 = function (e) { var t = this.ComputeHash(e); return System.Convert.ToBase64String(t, !1) }, this._HashData = function (e, t, r) { var n = r, s = t, i = 63 & this._count; for (this._count += n, 0 < i && 64 <= i + n && (System.Buffer.BlockCopy(e, s, this._buffer, i, 64 - i), s += 64 - i, n -= 64 - i, this.SHATransform(this._expandedBuffer, this._stateSHA1, this._buffer), i = 0); 64 <= n;)System.Buffer.BlockCopy(e, s, this._buffer, 0, 64), s += 64, n -= 64, this.SHATransform(this._expandedBuffer, this._stateSHA1, this._buffer); 0 < n && System.Buffer.BlockCopy(e, s, this._buffer, i, n) }, this.HashCore = function (e, t, r) { this._HashData(e, t, r) }, this._EndHash = function () { var e = new System.Byte(20), t = 64 - this._count & 63; t <= 8 && (t += 64); var r = new System.Byte(t); r[0] = 128; for (var n, s, i, a = 8 * this._count, o = 1; o <= 8; o++)r[t - o] = 255 & a, a >>= 8; return this._HashData(r, 0, r.length), n = e, s = this._stateSHA1, i = 5, System.Security.Cryptography.Utils.DWORDToBigEndian(n, s, i), this.HashValue = e }, this.HashFinal = function () { return this._EndHash() }, this.SHATransform = function (e, t, r) { var n, s, i; n = e, s = 16, i = r, System.Security.Cryptography.Utils.DWORDFromBigEndian(n, s, i), this.SHAExpand(e); var a, o, h, l, y, c = new Array(5), u = 0; for (u = 0; u < 5; u++)c[4 - u] = t[u]; for (u = 0; u < 80; u += 5)for (var p = 0; p < 5; p++) { var m = (o = u, h = c[(p + 3) % 5], l = c[(p + 2) % 5], y = c[(p + 1) % 5], o < 20 ? y ^ h & (l ^ y) : o < 40 ? h ^ l ^ y : o < 60 ? h & l | y & (h | l) : h ^ l ^ y), f = S(S(S(S(d(c[(p + 4) % 5], 5), m), e[u + (p + 0) % 5]), (a = u) < 20 ? 1518500249 : a < 40 ? 1859775393 : a < 60 ? 2400959708 : 3395469782), c[(p + 0) % 5]); c[(p + 0) % 5] = f, c[(p + 3) % 5] = d(c[(p + 3) % 5], 30) } for (u = 0; u < 5; u++)t[u] = S(t[u], c[4 - u]) }, this.SHAExpand = function (e) { for (var t = 16; t < 80; t++)e[t] = d(e[t - 3] ^ e[t - 8] ^ e[t - 14] ^ e[t - 16], 1) }, this.DWORDFromBigEndian = function (e, t, r) { for (var n = 0, s = 0; n < t; s += 4) { var i = r[s] << 24 | r[s + 1] << 16 | r[s + 2] << 8 | r[s + 3]; e[n] = i >>> 0, n++ } }, this.Initialize = function () { this.InitializeState(), System.Array.Clear(this._buffer, 0, this._buffer.length), System.Array.Clear(this._expandedBuffer, 0, this._expandedBuffer.length) }, this.InitializeState = function () { this._count = 0, this._stateSHA1[0] = 1732584193, this._stateSHA1[1] = 4023233417, this._stateSHA1[2] = 2562383102, this._stateSHA1[3] = 271733878, this._stateSHA1[4] = 3285377520 }, this._initialize = function () { var e = new System.Security.Cryptography.HashAlgorithm; for (var t in e) void 0 === this[t] && (this[t] = e[t]); this.HashSizeValue = 160, this.HashSize = 160, this._stateSHA1 = new System.Byte(5), this._buffer = new System.Byte(64), this._expandedBuffer = new System.Byte(80), this.InitializeState() }, this._initialize.apply(this, arguments) }, System.Security.Cryptography.SHA1CryptoServiceProvider = System.Security.Cryptography.SHA1, System.Type.RegisterNamespace("System.Security.Cryptography"), System.Security.Cryptography.HMACSHA1 = function (e) { this.Name = "HMACSHA1", this.Algorithm, this.Key, this.HashSize = 160, this.HashName = "SHA1", this.ComputeHash = function (e, t) { return t || (t = e, e = this.Key), "string" == typeof e && (e = System.Text.Encoding.UTF8.GetBytes(e)), "string" == typeof t && (t = System.Text.Encoding.UTF8.GetBytes(t)), this._ComputeHash(e, t) }, this.ComputeHashAsHex = function (e, t) { var r = this.ComputeHash(e, t); return System.BitConverter.ToString(r, "") }, this.ComputeHashAsBase64 = function (e, t) { var r = this.ComputeHash(e, t); return System.Convert.ToBase64String(r, !1) }, this._ComputeHash = function (e, t) { t || (t = e, e = this.Key), 64 < e.length && (e = this.Algorithm.ComputeHash(e)); for (var r = new Array(64), n = new Array(64), s = 0; s < 64; s++)r[s] = 54 ^ e[s], n[s] = 92 ^ e[s]; var i = this.Algorithm.ComputeHash(r.concat(t)); return this.Algorithm.ComputeHash(n.concat(i)) }, this.Initialize = function () { this.Algorithm = new System.Security.Cryptography.SHA1, this.Key = arguments[0] }, this.Initialize.apply(this, arguments) }, System.Type.RegisterNamespace("System.Security.Cryptography"), System.Security.Cryptography.RSAManaged = function () { }, System.Type.RegisterClass("System.Security.Cryptography.RSAManaged"), System.Security.Cryptography.RSAParameters = function () { this.Exponent = [], this.Modulus = [], this.D = [], this.DP = [], this.DQ = [], this.InverseQ = [], this.P = [], this.Q = [], this.Clone = function (e) { var t = new System.Security.Cryptography.RSAParameters; return System.Array.Copy(this.Exponent, t.Exponent, this.Exponent.length), System.Array.Copy(this.Modulus, t.Modulus, this.Modulus.length), e && (this.D && System.Array.Copy(this.D, t.D, this.D.length), this.DP && System.Array.Copy(this.DP, t.DP, this.DP.length), this.DQ && System.Array.Copy(this.DQ, t.DQ, this.DQ.length), this.InverseQ && System.Array.Copy(this.InverseQ, t.InverseQ, this.InverseQ.length), this.P && System.Array.Copy(this.P, t.P, this.P.length), this.Q && System.Array.Copy(this.Q, t.Q, this.Q.length)), t }, this.Initialize = function () { }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Security.Cryptography.RSAParameters"), System.Security.Cryptography.RSACryptoServiceProvider = function () { this.KeySize = 512, this.BlockSize = 512, this.FeedbackSize = 512, this.IV = [], this.HashSize = 160; var t = null, g = System.BigInt.Utils; function u() { return null === t && (t = function (e) { var t, r, n, s, i; s = g.FromString("10001", 16, 0); for (var a = this.KeySize + 1 >> 1, o = this.KeySize - a; t = e ? g.NewPrime(a) : g.NewProbPrime(a), g.EqualsInt(g.Mod(t, s), 1);); for (; ;) { for (; r = e ? g.NewPrime(o) : g.NewProbPrime(o), g.Equals(t, r) || g.EqualsInt(g.Mod(r, s), 1);); if (n = g.Multiply(t, r), g.BitCount(n) === this.KeySize) break; g.MoreThan(r, t) && (t = r) } if (g.MoreThan(r, t)) { var h = t; t = r, r = h } var l = g.AddInt(t, -1), y = g.AddInt(r, -1), c = g.Multiply(l, y); (i = g.InverseMod(s, c)) || Trace.Write("ERROR: e isn't invertible. Try a different prime e. ****"); var u = g.InverseMod(r, t), p = g.InverseMod(s, l), m = g.InverseMod(s, y), f = new System.Security.Cryptography.RSAParameters; return f.Exponent = g.ToBytes(s), f.Modulus = g.ToBytes(n), f.D = g.ToBytes(i), f.P = g.ToBytes(t), f.Q = g.ToBytes(r), f.DP = g.ToBytes(p), f.DQ = g.ToBytes(m), f.InverseQ = g.ToBytes(u), System.Array.Reverse(f.Exponent), System.Array.Reverse(f.Modulus), System.Array.Reverse(f.D), System.Array.Reverse(f.P), System.Array.Reverse(f.Q), System.Array.Reverse(f.DP), System.Array.Reverse(f.DQ), System.Array.Reverse(f.InverseQ), f }.call(this, !0)), t } function n(e, t) { var r = new RegExp("<" + t + ">(.*?)</" + t + ">", "gi"), n = e.match(r); if (!n) return null; var s = n[0].replace(r, "$1"); return System.Convert.FromBase64String(s) } function p(e, t, r) { System.Array.Reverse(t), System.Array.Resize(t, r), e.Write(t, 0, t.length) } function y(e, t, r, n) { this.Padding = n ? System.Security.Cryptography.PaddingMode.PKCS7 : t ? System.Security.Cryptography.PaddingMode.RsaEsOaep : System.Security.Cryptography.PaddingMode.RsaEsPkcs, this.Mode = System.Security.Cryptography.CipherMode.ECB; var s = new System.Security.Cryptography.ICryptoTransform(this, !0); return r ? s._Padding(e, 0, e.length).iBuffer : s._PaddingRemove(e, 0, e.length) } function c(e, t, r) { var n = e.Clone(); System.Array.Reverse(n); for (var s = g.FromBytes(t.Modulus), i = g.FromBytes(n), a = r ? g.FromBytes(t.D) : g.FromBytes(t.Exponent), o = g.PowMod(i, a, s), h = g.ToBytes(o), l = this.KeySize / 8, y = h.length; y < l; y++)h.push(0); return System.Array.Reverse(h), h } function l(e, t, r) { var n, s = g.FromBytes(t.Modulus), i = g.FromBytes(e), a = r ? g.FromBytes(t.Exponent) : g.FromBytes(t.D); if (!r) { var o = g.FromBytes(t.DP), h = g.FromBytes(t.DQ), l = g.FromBytes(t.InverseQ), y = g.FromBytes(t.P), c = g.FromBytes(t.Q), u = g.PowMod(i, o, y), p = g.PowMod(i, h, c), m = g.MultiplyMod(l, g.Subtract(g.Add(u, y), p), y); n = g.Add(p, g.Multiply(m, c)) } else n = g.PowMod(i, a, s); g.MoreThan(s, n) || Trace.Write("ERROR: The message m must be less than p*q"); for (var f = g.ToBytes(n), d = this.KeySize / 8, S = f.length; S < d; S++)f.push(0); return f } this.ImportParameters = function (e) { t = e.Clone(!0), null, this.KeySize = 8 * t.Modulus.length, this.BlockSize = this.KeySize, this.FeedbackSize = this.KeySize }, this.ExportParameters = function (e) { return u.call(this).Clone(e) }, this.FromXmlString = function (e) { var t = new System.Security.Cryptography.RSAParameters, r = new RegExp("\\s", "gi"); e = e.replace(r, ""), t.Exponent = n(e, "Exponent"), t.Modulus = n(e, "Modulus"), t.D = n(e, "D"), t.DP = n(e, "DP"), t.DQ = n(e, "DQ"), t.InverseQ = n(e, "InverseQ"), t.P = n(e, "P"), t.Q = n(e, "Q"), this.ImportParameters(t) }, this.ToXmlString = function (e) { var t = this.ExportParameters(e), r = new System.Text.StringBuilder; return r.Append("<RSAKeyValue>"), r.Append("<Modulus>" + System.Convert.ToBase64String(t.Modulus) + "</Modulus>"), r.Append("<Exponent>" + System.Convert.ToBase64String(t.Exponent) + "</Exponent>"), e && (r.Append("<P>" + System.Convert.ToBase64String(t.P) + "</P>"), r.Append("<Q>" + System.Convert.ToBase64String(t.Q) + "</Q>"), r.Append("<DP>" + System.Convert.ToBase64String(t.DP) + "</DP>"), r.Append("<DQ>" + System.Convert.ToBase64String(t.DQ) + "</DQ>"), r.Append("<InverseQ>" + System.Convert.ToBase64String(t.InverseQ) + "</InverseQ>"), r.Append("<D>" + System.Convert.ToBase64String(t.D) + "</D>")), r.Append("</RSAKeyValue>"), r.ToString() }, this.ImportCspBlob = function (e) { var t = new System.IO.MemoryStream(e), r = new System.IO.BinaryReader(t), n = r.ReadByte(), s = (r.ReadByte(), r.ReadUInt16(), r.ReadUInt32(), r.ReadUInt32(), r.ReadUInt32()), i = 16; if (i += 4 + s / 8, i += 7 === n ? 5 * s / 16 + s / 8 : 0, e.length !== i) throw new System.Exception("Error: RSA Key BLOB wrong size!"); var a = r.ReadBytes(4), o = r.ReadBytes(s / 8), h = null, l = null, y = null, c = null, u = null, p = null; p = 7 === n ? (h = r.ReadBytes(s / 16), l = r.ReadBytes(s / 16), y = r.ReadBytes(s / 16), c = r.ReadBytes(s / 16), u = r.ReadBytes(s / 16), r.ReadBytes(s / 8)) : (h = [], l = [], y = [], c = [], u = [], []), System.Array.Reverse(a), System.Array.Reverse(o), System.Array.Reverse(p), System.Array.Reverse(y), System.Array.Reverse(c), System.Array.Reverse(u), System.Array.Reverse(h), System.Array.Reverse(l); var m = new System.Security.Cryptography.RSAParameters; m.Exponent = a, m.Modulus = o, m.D = p, m.DP = y, m.DQ = c, m.InverseQ = u, m.P = h, m.Q = l, this.ImportParameters(m) }, this.ExportCspBlob = function (e) { var t = e ? 7 : 6, r = e ? 843141970 : 826364754, n = this.KeySize; var s = new System.IO.MemoryStream, i = u.call(this).Clone(e), a = [t], o = [2], h = System.BitConverter.GetBytes(0, System.TypeCode.UInt16), l = System.BitConverter.GetBytes(41984, System.TypeCode.UInt32), y = System.BitConverter.GetBytes(r, System.TypeCode.UInt32), c = System.BitConverter.GetBytes(n, System.TypeCode.UInt32); return s.Write(a, 0, a.length), s.Write(o, 0, o.length), s.Write(h, 0, h.length), s.Write(l, 0, l.length), s.Write(y, 0, y.length), s.Write(c, 0, c.length), p(s, i.Exponent, 4), p(s, i.Modulus, n / 8), e && (p(s, i.P, n / 16), p(s, i.Q, n / 16), p(s, i.DP, n / 16), p(s, i.DQ, n / 16), p(s, i.InverseQ, n / 16), p(s, i.D, n / 8)), s.ToArray() }, this.Encrypt = function (e, t, r) { var n, s = u.call(this); r = void 0 !== r; var i = s.Modulus.length; if (!t && e.length > i - 11) throw n = "The data to be encrypted exceeds the maximum for this modulus of " + i + " bytes. Maximum data size is " + (i - 11) + " bytes.", Trace.Write(n), new System.Security.Cryptography.CryptographicException(n); if (t && e.length > i - 42) throw n = "The data to be encrypted exceeds the maximum for this modulus of " + i + " bytes. Maximum data size is " + (i - 42) + " bytes.", Trace.Write(n), new System.Security.Cryptography.CryptographicException(n); return function (e, t, r, n) { for (var s, i = this.KeySize / 8 - (r ? 41 : 11), a = [], o = 0; o < t.length / i; o++) { s = t.slice(o * i, (o + 1) * i), System.Array.Reverse(s); var h = y.call(this, s, r, !0, n), l = c.call(this, h, e, n); a = a.concat(l) } return a }.call(this, s, e, t, r) }, this.Decrypt = function (e, t, r) { var n = u.call(this); return function (e, t, r, n) { for (var s, i = this.KeySize / 8, a = [], o = 0; o < t.length / i; o++) { s = t.slice(o * i, (o + 1) * i), s = l.call(this, s, e, n); var h = y.call(this, s, r, !1, n); System.Array.Reverse(h), a = a.concat(h) } return a }.call(this, n, e, t, r = void 0 !== r) }, this.SignHash = function (e, t, r) { return this.Encrypt(e, r, !0) }, this.VerifyHash = function (e, t, r, n) { var s; try { s = this.Decrypt(r, n, !0) } catch (e) { return !1 } if (e.length !== s.length) return !1; for (var i = 0; i < e.length; i++)if (e[i] !== s[i]) return !1; return !0 }, this.SignData = function (e, t, r) { var n = ("SHA256" === t ? new System.Security.Cryptography.SHA256 : new System.Security.Cryptography.SHA1).ComputeHash(e); return this.SignHash(n, t, r) }, this.VerifyData = function (e, t, r, n) { ha = "SHA256" === t ? new System.Security.Cryptography.SHA256 : new System.Security.Cryptography.SHA1; var s = ha.ComputeHash(e); return this.VerifyHash(s, t, r, n) }, this.Initialize = function () { 1 === arguments.length && "number" == typeof arguments[0] && (this.KeySize = arguments[0], this.BlockSize = this.KeySize, this.FeedbackSize = this.KeySize) }, this.Initialize.apply(this, arguments) }, System.Type.RegisterClass("System.Security.Cryptography.RSACryptoServiceProvider"), System.Security.Cryptography.RsaCreateEventArgs = function () { this.UserState = null, this.PublicKey = null, this.PrivateKey = null, this.Error = null }, System.Type.RegisterClass("System.Security.Cryptography.RsaCreateEventArgs"), System.Security.Cryptography.RSA = function () { }, System.Type.RegisterClass("System.Security.Cryptography.RSA"), System.Security.Cryptography.RSA.CreateKeyCompleted = function (e, t) { }, System.Security.Cryptography.RSA.CreateKeyAsync = function (e, s) { function t(e) { var t = new System.Security.Cryptography.RsaCreateEventArgs; t.UserState = s, t.Error = new System.Exception(e); var r = System.Security.Cryptography.RSA.CreateKeyCompleted; "function" == typeof r && r(this, t) } function r(e, t, r) { window.crypto ? e.then(t).catch(r) : window.msCrypto && (e.oncomplete = t, e.onerror = r) } var n = null; if (window.msCrypto) n = window.msCrypto.subtle; else { if (!window.crypto) return void t("Web Cryptography API not found."); n = window.crypto.subtle || window.crypto.webkitSubtle } if (null !== n) { var i = { name: "RSA-OAEP", modulusLength: e, publicExponent: new Uint8Array([1, 0, 1]), hash: { name: "SHA-1" } }; r(n.generateKey(i, !0, ["encrypt", "decrypt"]), function (e) { window.crypto ? (e.privateKey, o = e.privateKey) : window.msCrypto && (e.target.result.publicKey, o = e.target.result.privateKey); t = o, r(n.exportKey("jwk", t), l, h); var t }, function (e) { t("generateKey error:" + e) }); var a, o = null } else t("Web Cryptography API Subtle not found."); function h(e) { t("exportKey error (private):" + e) } function l(e) { var t; if (window.crypto) t = e; else if (window.msCrypto) { var r = new Uint8Array(e.target.result), n = System.Text.Encoding.ASCII.GetString(r); t = JSON.parse(n) } a = function (e, t) { var r = new System.Security.Cryptography.RSAParameters, n = System.Convert.FromBase64UrlString(e.e), s = System.Convert.FromBase64UrlString(e.n); if (r.Exponent = n, r.Modulus = s, t) { var i = System.Convert.FromBase64UrlString(e.d), a = System.Convert.FromBase64UrlString(e.dp), o = System.Convert.FromBase64UrlString(e.dq), h = System.Convert.FromBase64UrlString(e.qi), l = System.Convert.FromBase64UrlString(e.p), y = System.Convert.FromBase64UrlString(e.q); r.D = i, r.DP = a, r.DQ = o, r.InverseQ = h, r.P = l, r.Q = y } return r }(t, !0), _publicKey = a, function () { var e = new System.Security.Cryptography.RsaCreateEventArgs; e.UserState = s, e.PublicKey = _publicKey, e.PrivateKey = a; var t = System.Security.Cryptography.RSA.CreateKeyCompleted; "function" == typeof t && t(this, e) }() } }, function () { var e = angular.module("Secure", []); function t(S) { var e = location.hostname, g = ""; "localhost" != e && (g = "/" + location.pathname.split("/")[1]); return t = { token_encrypt_post: function (e, t, r, a, n, o, s, h) { if (h = void 0 === h || h, "" != e && null != e && null != e) if ("" != t && null != t && null != t) if ("" != r && null != r && null != r) if ("" != a && null != a && null != a) if ("" != n && null != n && null != n) { var i = JSON.stringify(t), l = random_key_generator(16), y = random_key_generator(16), c = Encrypt_Data(i, l, y), u = { KEY: l, IV: y }, p = r, m = System.Text.Encoding.UTF8.GetBytes(JSON.stringify(u)); rsa = new System.Security.Cryptography.RSACryptoServiceProvider, rsa.FromXmlString(p); var f = rsa.Encrypt(m, !0), d = n + "." + System.Convert.ToBase64String(f) + "." + c; S({ method: "POST", url: g + e, contentType: "application/json; charset=utf-8", data: JSON.stringify(d) }).then(function (e) { if (h) { var t = e.data.split("."), r = a; f = System.Convert.FromBase64String(t[0]), rsa = new System.Security.Cryptography.RSACryptoServiceProvider, rsa.FromXmlString(r), m = rsa.Decrypt(f, !0); var n = System.Text.Encoding.UTF8.GetString(m), s = JSON.parse(n), i = Decrypt_Data(t[1], s.KEY, s.IV); o(e.status, JSON.parse(i), e.statusText, e.xhrStatus) } else o(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { s(e.status, e.statusText, e.data, e.xhrStatus) }) } else console.log("Token should not be empty !!!"); else console.log("Private KEY should not be empty !!!"); else console.log("Public KEY should not be empty !!!"); else console.log("Data should not be empty !!!"); else console.log("URL should not be empty !!!") }, token_encrypt_get: function (e, t, r, a, n, o, s, h) { if (h = void 0 === h || h, "" != e && null != e && null != e) if ("" != t && null != t && null != t) if ("" != r && null != r && null != r) if ("" != a && null != a && null != a) if ("" != n && null != n && null != n) { var i = random_key_generator(16), l = random_key_generator(16), y = Encrypt_Data(JSON.stringify(t), i, l), c = { KEY: i, IV: l }, u = r, p = System.Text.Encoding.UTF8.GetBytes(JSON.stringify(c)); rsa = new System.Security.Cryptography.RSACryptoServiceProvider, rsa.FromXmlString(u); var m = rsa.Encrypt(p, !0), f = System.Convert.ToBase64String(m); S({ method: "GET", url: g + e + "?data=" + n + "." + f + "." + y }).then(function (e) { if (h) { var t = e.data.split("."), r = a; m = System.Convert.FromBase64String(t[0]), rsa = new System.Security.Cryptography.RSACryptoServiceProvider, rsa.FromXmlString(r), p = rsa.Decrypt(m, !0); var n = System.Text.Encoding.UTF8.GetString(p), s = JSON.parse(n), i = Decrypt_Data(t[1], s.KEY, s.IV); o(e.status, JSON.parse(i), e.statusText, e.xhrStatus) } else o(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { s(e.status, e.statusText, e.data, e.xhrStatus) }) } else console.log("Token should not be empty !!!"); else console.log("Private KEY should not be empty !!!"); else console.log("Public KEY should not be empty !!!"); else console.log("Data should not be empty !!!"); else console.log("URL should not be empty !!!") }, end_encrypt_get: function (e, t, r, a, o, n, h) { if (h = void 0 === h || h, "" != e && null != e && null != e) if ("" != t && null != t && null != t) if ("" != r && null != r && null != r) if ("" != a && null != a && null != a) { var s = random_key_generator(16), i = random_key_generator(16), l = Encrypt_Data(JSON.stringify(t), s, i), y = { KEY: s, IV: i }, c = r, u = System.Text.Encoding.UTF8.GetBytes(JSON.stringify(y)); rsa = new System.Security.Cryptography.RSACryptoServiceProvider, rsa.FromXmlString(c); var p = rsa.Encrypt(u, !0), m = System.Convert.ToBase64String(p); S({ method: "GET", url: g + e + "?data=" + m + "." + l }).then(function (e) { if (h) { var t = e.data.split("."), r = a; p = System.Convert.FromBase64String(t[0]), rsa = new System.Security.Cryptography.RSACryptoServiceProvider, rsa.FromXmlString(r), u = rsa.Decrypt(p, !0); var n = System.Text.Encoding.UTF8.GetString(u), s = JSON.parse(n), i = Decrypt_Data(t[1], s.KEY, s.IV); o(e.status, JSON.parse(i), e.statusText, e.xhrStatus) } else o(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { n(e.status, e.statusText, e.data, e.xhrStatus) }) } else console.log("Private KEY should not be empty !!!"); else console.log("Public KEY should not be empty !!!"); else console.log("Data should not be empty !!!"); else console.log("URL should not be empty !!!") }, end_encrypt_post: function (e, t, r, a, o, n, h) { if (h = void 0 === h || h, "" != e && null != e && null != e) if ("" != t && null != t && null != t) if ("" != r && null != r && null != r) if ("" != a && null != a && null != a) { var s = JSON.stringify(t), i = random_key_generator(16), l = random_key_generator(16), y = Encrypt_Data(s, i, l), c = { KEY: i, IV: l }, u = r, p = System.Text.Encoding.UTF8.GetBytes(JSON.stringify(c)); rsa = new System.Security.Cryptography.RSACryptoServiceProvider, rsa.FromXmlString(u); var m = rsa.Encrypt(p, !0), f = System.Convert.ToBase64String(m) + "." + y; S({ method: "POST", url: g + e, contentType: "application/json; charset=utf-8", data: JSON.stringify(f) }).then(function (e) { if (h) { var t = e.data.split("."), r = a; m = System.Convert.FromBase64String(t[0]), rsa = new System.Security.Cryptography.RSACryptoServiceProvider, rsa.FromXmlString(r), p = rsa.Decrypt(m, !0); var n = System.Text.Encoding.UTF8.GetString(p), s = JSON.parse(n), i = Decrypt_Data(t[1], s.KEY, s.IV); o(e.status, JSON.parse(i), e.statusText, e.xhrStatus) } else o(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { n(e.status, e.statusText, e.data, e.xhrStatus) }) } else console.log("Private KEY should not be empty !!!"); else console.log("Public KEY should not be empty !!!"); else console.log("Data should not be empty !!!"); else console.log("URL should not be empty !!!") }, encrypt_get: function (e, t, r, n, s) { if ("" != e && null != e && null != e) if ("" != t && null != t && null != t) if ("" != r && null != r && null != r) { var i = JSON.stringify(t), a = CryptoJS.enc.Utf8.parse(r), o = CryptoJS.enc.Utf8.parse(i), h = CryptoJS.HmacSHA256(o, a), l = CryptoJS.enc.Base64.stringify(h), y = CryptoJS.enc.Utf8.parse(l), c = base64url(a) + "." + base64url(o) + "." + base64url(y); S({ method: "GET", url: g + e + "?data=" + c }).then(function (e) { n(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { s(e.status, e.statusText, e.data, e.xhrStatus) }) } else console.log("Token should not be empty !!!"); else console.log("Data should not be empty !!!"); else console.log("URL should not be empty !!!") }, encrypt_post: function (e, t, r, n, s) { if ("" != e && null != e && null != e) if ("" != t && null != t && null != t) if ("" != r && null != r && null != r) { var i = JSON.stringify(t), a = CryptoJS.enc.Utf8.parse(r), o = CryptoJS.enc.Utf8.parse(i), h = CryptoJS.HmacSHA256(o, a), l = CryptoJS.enc.Base64.stringify(h), y = CryptoJS.enc.Utf8.parse(l), c = base64url(a) + "." + base64url(o) + "." + base64url(y); S({ method: "POST", url: g + e, contentType: "application/json; charset=utf-8", data: JSON.stringify(c) }).then(function (e) { n(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { s(e.status, e.statusText, e.data, e.xhrStatus) }) } else console.log("Token should not be empty !!!"); else console.log("Data should not be empty !!!"); else console.log("URL should not be empty !!!") }, post: function (e, t, r, n) { "" != e && null != e && null != e ? "" != t && null != t && null != t ? S({ method: "POST", url: g + e, contentType: "application/json; charset=utf-8", data: JSON.stringify(t) }).then(function (e) { r(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { n(e.status, e.statusText, e.data, e.xhrStatus) }) : console.log("Data should not be empty !!!") : console.log("URL should not be empty !!!") }, get: function (e, t, r) { "" != e && null != e && null != e ? S({ method: "GET", url: g + e }).then(function (e) { t(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { r(e.status, e.statusText, e.data, e.xhrStatus) }) : console.log("URL should not be empty !!!") }, token_post: function (e, t, r, n) { "" != e && null != e && null != e ? "" != t && null != t && null != t ? S({ method: "POST", url: g + e, contentType: "application/json; charset=utf-8", dataType: "json", data: t, headers: { "Content-Type": "application/x-www-form-urlencoded" } }).then(function (e) { r(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { n(e.status, e.statusText, e.data, e.xhrStatus) }) : console.log("Data should not be empty !!!") : console.log("URL should not be empty !!!") }, token_get: function (e, t, r) { "" != e && null != e && null != e ? S({ method: "GET", url: g + e, headers: { "Content-Type": "application/x-www-form-urlencoded" } }).then(function (e) { t(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { r(e.status, e.statusText, e.data, e.xhrStatus) }) : console.log("URL should not be empty !!!") }, access_post: function (e, t, r, n, s) { "" != e && null != e && null != e ? "" == t && null != t && null != t ? "" == r && null != r && null != r ? S({ method: "POST", url: g + e, contentType: "application/json; charset=utf-8", dataType: "json", data: JSON.stringify(t), headers: { Authorization: "Bearer " + r, contentType: "application/json" } }).then(function (e) { n(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { s(e.status, e.statusText, e.data, e.xhrStatus) }) : console.log("Token should not be empty !!!") : console.log("Data should not be empty !!!") : console.log("URL should not be empty !!!") }, access_get: function (e, t, r, n) { "" != e && null != e && null != e ? "" != t && null != t && null != t ? S({ method: "GET", url: g + e, headers: { Authorization: "Bearer " + t, contentType: "application/json" } }).then(function (e) { r(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { n(e.status, e.statusText, e.data, e.xhrStatus) }) : console.log("Token should not be empty !!!") : console.log("URL should not be empty !!!") }, custom_post: function (e, t, r, n, s) { "" != e && null != e && null != e ? "" != t && null != t && null != t ? "" != r && null != r && null != r ? S({ method: "POST", url: g + e, contentType: "application/json; charset=utf-8", dataType: "json", data: JSON.stringify(t), headers: r }).then(function (e) { n(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { s(e.status, e.statusText, e.data, e.xhrStatus) }) : console.log("Header should not be empty !!!") : console.log("Data should not be empty !!!") : console.log("URL should not be empty !!!") }, custom_get: function (e, t, r, n) { "" != e && null != e && null != e ? "" != t && null != t && null != t ? S({ method: "GET", url: g + e, headers: t }).then(function (e) { r(e.status, e.data, e.statusText, e.xhrStatus) }, function (e) { n(e.status, e.statusText, e.data, e.xhrStatus) }) : console.log("Header should not be empty !!!") : console.log("URL should not be empty !!!") } } } e.service("secure_space", ["$http", t]), e.service("session_service", [function () { return { set: function (e, t) { if ("" != e && null != e && null != e && "" != t && null != t && null != t) { var r, n, s, i = CryptoJS.SHA1(e).toString(CryptoJS.enc.Base64), a = (r = t, n = CryptoJS.enc.Utf8.parse(o), s = CryptoJS.enc.Utf8.parse(h), CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(r), n, { keySize: 16, iv: s, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }).toString()); sessionStorage.setItem(i, a) } }, get: function (e) { if ("" != e && null != e && null != e) { var t, r, n, s = CryptoJS.SHA1(e).toString(CryptoJS.enc.Base64), i = sessionStorage.getItem(s); if ("" != i && null != i && null != i) return t = i, r = CryptoJS.enc.Utf8.parse(o), n = CryptoJS.enc.Utf8.parse(h), CryptoJS.AES.decrypt(t, r, { keySize: 16, iv: n, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }).toString(CryptoJS.enc.Utf8) } }, remove: function (e) { if ("" != e && null != e && null != e) { var t = CryptoJS.SHA1(e).toString(CryptoJS.enc.Base64); sessionStorage.removeItem(t) } }, clear: function () { sessionStorage.clear() }, set_key: function (e) { r = e } } }]); var r = "", o = r, h = r }();