/*
 Author  : Venkatesh Nelli
 Version : 1.0.0
 License : GNU General Public License v3.0
 Description : Used for store data in session with encryption
 */

!function () { "use strict"; angular.module("Session", []).service("session_service", [function () { return { set: function (e, t) { if ("" == e || null == e || null == e || "" == t || null == t || null == t) return; var r = CryptoJS.SHA1(e).toString(CryptoJS.enc.Base64), n = (o = t, S = CryptoJS.enc.Utf8.parse(i), s = CryptoJS.enc.Utf8.parse(p), CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(o), S, { keySize: 16, iv: s, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }).toString()); var o, S, s; sessionStorage.setItem(r, n) }, get: function (e) { if ("" == e || null == e || null == e) return; var t = CryptoJS.SHA1(e).toString(CryptoJS.enc.Base64), r = sessionStorage.getItem(t); if ("" == r || null == r || null == r) return; return n = r, o = CryptoJS.enc.Utf8.parse(i), S = CryptoJS.enc.Utf8.parse(p), CryptoJS.AES.decrypt(n, o, { keySize: 16, iv: S, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 }).toString(CryptoJS.enc.Utf8); var n, o, S }, remove: function (e) { if ("" == e || null == e || null == e) return; var t = CryptoJS.SHA1(e).toString(CryptoJS.enc.Base64); sessionStorage.removeItem(t) }, clear: function () { sessionStorage.clear() }, set_key: function (e) { t = e } } }]); var t = ""; var i = t, p = t }();