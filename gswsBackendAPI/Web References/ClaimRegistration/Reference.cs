//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace gswsBackendAPI.ClaimRegistration {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClaimRegistrationSoap", Namespace="http://bima.ap.gov.in/")]
    public partial class ClaimRegistration : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertclaimdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistrictsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMandalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVillagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClaimtypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCauseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncidentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPanchayatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntryByOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClaimRegistration() {
            this.Url = global::gswsBackendAPI.Properties.Settings.Default.gswsBackendAPI_ClaimRegistration_ClaimRegistration;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertclaimdataCompletedEventHandler InsertclaimdataCompleted;
        
        /// <remarks/>
        public event GetDistrictsCompletedEventHandler GetDistrictsCompleted;
        
        /// <remarks/>
        public event GetMandalsCompletedEventHandler GetMandalsCompleted;
        
        /// <remarks/>
        public event GetVillagesCompletedEventHandler GetVillagesCompleted;
        
        /// <remarks/>
        public event GetClaimtypeCompletedEventHandler GetClaimtypeCompleted;
        
        /// <remarks/>
        public event GetCauseCompletedEventHandler GetCauseCompleted;
        
        /// <remarks/>
        public event GetIncidentTypeCompletedEventHandler GetIncidentTypeCompleted;
        
        /// <remarks/>
        public event GetPanchayatsCompletedEventHandler GetPanchayatsCompleted;
        
        /// <remarks/>
        public event GetEntryByCompletedEventHandler GetEntryByCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bima.ap.gov.in/Insertclaimdata", RequestNamespace="http://bima.ap.gov.in/", ResponseNamespace="http://bima.ap.gov.in/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insertclaimdata(
                    string Security, 
                    string Uid, 
                    string Did, 
                    string Incident_Date, 
                    string Incident_Time, 
                    string Accident_Date, 
                    string Accident_Time, 
                    string Claimtype, 
                    string Cause, 
                    string CauseSubReason, 
                    string Nominee_Phone, 
                    string Nominee_Name, 
                    string Nom_Uid, 
                    string Incident_Type, 
                    string incident_Place, 
                    string Accident_Place, 
                    string Informer_Phone, 
                    string Informed_By, 
                    string Reg_User, 
                    string Remarks, 
                    string Street, 
                    string Door_Num, 
                    string Ward, 
                    string Village_Name, 
                    string Gram_Panchayat, 
                    string Mandal_Name, 
                    string EID, 
                    string Pol_Pincode, 
                    string Nom_EID, 
                    string Nom_Pincode, 
                    string VV_Name, 
                    string VV_Phone, 
                    string VS_id, 
                    string VS_Location, 
                    string VS_Panchayat, 
                    string EntryBy, 
                    string GSWS_ID) {
            object[] results = this.Invoke("Insertclaimdata", new object[] {
                        Security,
                        Uid,
                        Did,
                        Incident_Date,
                        Incident_Time,
                        Accident_Date,
                        Accident_Time,
                        Claimtype,
                        Cause,
                        CauseSubReason,
                        Nominee_Phone,
                        Nominee_Name,
                        Nom_Uid,
                        Incident_Type,
                        incident_Place,
                        Accident_Place,
                        Informer_Phone,
                        Informed_By,
                        Reg_User,
                        Remarks,
                        Street,
                        Door_Num,
                        Ward,
                        Village_Name,
                        Gram_Panchayat,
                        Mandal_Name,
                        EID,
                        Pol_Pincode,
                        Nom_EID,
                        Nom_Pincode,
                        VV_Name,
                        VV_Phone,
                        VS_id,
                        VS_Location,
                        VS_Panchayat,
                        EntryBy,
                        GSWS_ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertclaimdataAsync(
                    string Security, 
                    string Uid, 
                    string Did, 
                    string Incident_Date, 
                    string Incident_Time, 
                    string Accident_Date, 
                    string Accident_Time, 
                    string Claimtype, 
                    string Cause, 
                    string CauseSubReason, 
                    string Nominee_Phone, 
                    string Nominee_Name, 
                    string Nom_Uid, 
                    string Incident_Type, 
                    string incident_Place, 
                    string Accident_Place, 
                    string Informer_Phone, 
                    string Informed_By, 
                    string Reg_User, 
                    string Remarks, 
                    string Street, 
                    string Door_Num, 
                    string Ward, 
                    string Village_Name, 
                    string Gram_Panchayat, 
                    string Mandal_Name, 
                    string EID, 
                    string Pol_Pincode, 
                    string Nom_EID, 
                    string Nom_Pincode, 
                    string VV_Name, 
                    string VV_Phone, 
                    string VS_id, 
                    string VS_Location, 
                    string VS_Panchayat, 
                    string EntryBy, 
                    string GSWS_ID) {
            this.InsertclaimdataAsync(Security, Uid, Did, Incident_Date, Incident_Time, Accident_Date, Accident_Time, Claimtype, Cause, CauseSubReason, Nominee_Phone, Nominee_Name, Nom_Uid, Incident_Type, incident_Place, Accident_Place, Informer_Phone, Informed_By, Reg_User, Remarks, Street, Door_Num, Ward, Village_Name, Gram_Panchayat, Mandal_Name, EID, Pol_Pincode, Nom_EID, Nom_Pincode, VV_Name, VV_Phone, VS_id, VS_Location, VS_Panchayat, EntryBy, GSWS_ID, null);
        }
        
        /// <remarks/>
        public void InsertclaimdataAsync(
                    string Security, 
                    string Uid, 
                    string Did, 
                    string Incident_Date, 
                    string Incident_Time, 
                    string Accident_Date, 
                    string Accident_Time, 
                    string Claimtype, 
                    string Cause, 
                    string CauseSubReason, 
                    string Nominee_Phone, 
                    string Nominee_Name, 
                    string Nom_Uid, 
                    string Incident_Type, 
                    string incident_Place, 
                    string Accident_Place, 
                    string Informer_Phone, 
                    string Informed_By, 
                    string Reg_User, 
                    string Remarks, 
                    string Street, 
                    string Door_Num, 
                    string Ward, 
                    string Village_Name, 
                    string Gram_Panchayat, 
                    string Mandal_Name, 
                    string EID, 
                    string Pol_Pincode, 
                    string Nom_EID, 
                    string Nom_Pincode, 
                    string VV_Name, 
                    string VV_Phone, 
                    string VS_id, 
                    string VS_Location, 
                    string VS_Panchayat, 
                    string EntryBy, 
                    string GSWS_ID, 
                    object userState) {
            if ((this.InsertclaimdataOperationCompleted == null)) {
                this.InsertclaimdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertclaimdataOperationCompleted);
            }
            this.InvokeAsync("Insertclaimdata", new object[] {
                        Security,
                        Uid,
                        Did,
                        Incident_Date,
                        Incident_Time,
                        Accident_Date,
                        Accident_Time,
                        Claimtype,
                        Cause,
                        CauseSubReason,
                        Nominee_Phone,
                        Nominee_Name,
                        Nom_Uid,
                        Incident_Type,
                        incident_Place,
                        Accident_Place,
                        Informer_Phone,
                        Informed_By,
                        Reg_User,
                        Remarks,
                        Street,
                        Door_Num,
                        Ward,
                        Village_Name,
                        Gram_Panchayat,
                        Mandal_Name,
                        EID,
                        Pol_Pincode,
                        Nom_EID,
                        Nom_Pincode,
                        VV_Name,
                        VV_Phone,
                        VS_id,
                        VS_Location,
                        VS_Panchayat,
                        EntryBy,
                        GSWS_ID}, this.InsertclaimdataOperationCompleted, userState);
        }
        
        private void OnInsertclaimdataOperationCompleted(object arg) {
            if ((this.InsertclaimdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertclaimdataCompleted(this, new InsertclaimdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bima.ap.gov.in/GetDistricts", RequestNamespace="http://bima.ap.gov.in/", ResponseNamespace="http://bima.ap.gov.in/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDistricts(string key) {
            object[] results = this.Invoke("GetDistricts", new object[] {
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistrictsAsync(string key) {
            this.GetDistrictsAsync(key, null);
        }
        
        /// <remarks/>
        public void GetDistrictsAsync(string key, object userState) {
            if ((this.GetDistrictsOperationCompleted == null)) {
                this.GetDistrictsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistrictsOperationCompleted);
            }
            this.InvokeAsync("GetDistricts", new object[] {
                        key}, this.GetDistrictsOperationCompleted, userState);
        }
        
        private void OnGetDistrictsOperationCompleted(object arg) {
            if ((this.GetDistrictsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistrictsCompleted(this, new GetDistrictsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bima.ap.gov.in/GetMandals", RequestNamespace="http://bima.ap.gov.in/", ResponseNamespace="http://bima.ap.gov.in/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMandals(string key, string did) {
            object[] results = this.Invoke("GetMandals", new object[] {
                        key,
                        did});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMandalsAsync(string key, string did) {
            this.GetMandalsAsync(key, did, null);
        }
        
        /// <remarks/>
        public void GetMandalsAsync(string key, string did, object userState) {
            if ((this.GetMandalsOperationCompleted == null)) {
                this.GetMandalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMandalsOperationCompleted);
            }
            this.InvokeAsync("GetMandals", new object[] {
                        key,
                        did}, this.GetMandalsOperationCompleted, userState);
        }
        
        private void OnGetMandalsOperationCompleted(object arg) {
            if ((this.GetMandalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMandalsCompleted(this, new GetMandalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bima.ap.gov.in/GetVillages", RequestNamespace="http://bima.ap.gov.in/", ResponseNamespace="http://bima.ap.gov.in/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVillages(string key, string did, string mid) {
            object[] results = this.Invoke("GetVillages", new object[] {
                        key,
                        did,
                        mid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVillagesAsync(string key, string did, string mid) {
            this.GetVillagesAsync(key, did, mid, null);
        }
        
        /// <remarks/>
        public void GetVillagesAsync(string key, string did, string mid, object userState) {
            if ((this.GetVillagesOperationCompleted == null)) {
                this.GetVillagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVillagesOperationCompleted);
            }
            this.InvokeAsync("GetVillages", new object[] {
                        key,
                        did,
                        mid}, this.GetVillagesOperationCompleted, userState);
        }
        
        private void OnGetVillagesOperationCompleted(object arg) {
            if ((this.GetVillagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVillagesCompleted(this, new GetVillagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bima.ap.gov.in/GetClaimtype", RequestNamespace="http://bima.ap.gov.in/", ResponseNamespace="http://bima.ap.gov.in/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClaimtype(string key) {
            object[] results = this.Invoke("GetClaimtype", new object[] {
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClaimtypeAsync(string key) {
            this.GetClaimtypeAsync(key, null);
        }
        
        /// <remarks/>
        public void GetClaimtypeAsync(string key, object userState) {
            if ((this.GetClaimtypeOperationCompleted == null)) {
                this.GetClaimtypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClaimtypeOperationCompleted);
            }
            this.InvokeAsync("GetClaimtype", new object[] {
                        key}, this.GetClaimtypeOperationCompleted, userState);
        }
        
        private void OnGetClaimtypeOperationCompleted(object arg) {
            if ((this.GetClaimtypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClaimtypeCompleted(this, new GetClaimtypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bima.ap.gov.in/GetCause", RequestNamespace="http://bima.ap.gov.in/", ResponseNamespace="http://bima.ap.gov.in/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCause(string key, string claimtype) {
            object[] results = this.Invoke("GetCause", new object[] {
                        key,
                        claimtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCauseAsync(string key, string claimtype) {
            this.GetCauseAsync(key, claimtype, null);
        }
        
        /// <remarks/>
        public void GetCauseAsync(string key, string claimtype, object userState) {
            if ((this.GetCauseOperationCompleted == null)) {
                this.GetCauseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCauseOperationCompleted);
            }
            this.InvokeAsync("GetCause", new object[] {
                        key,
                        claimtype}, this.GetCauseOperationCompleted, userState);
        }
        
        private void OnGetCauseOperationCompleted(object arg) {
            if ((this.GetCauseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCauseCompleted(this, new GetCauseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bima.ap.gov.in/GetIncidentType", RequestNamespace="http://bima.ap.gov.in/", ResponseNamespace="http://bima.ap.gov.in/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIncidentType(string key) {
            object[] results = this.Invoke("GetIncidentType", new object[] {
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncidentTypeAsync(string key) {
            this.GetIncidentTypeAsync(key, null);
        }
        
        /// <remarks/>
        public void GetIncidentTypeAsync(string key, object userState) {
            if ((this.GetIncidentTypeOperationCompleted == null)) {
                this.GetIncidentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncidentTypeOperationCompleted);
            }
            this.InvokeAsync("GetIncidentType", new object[] {
                        key}, this.GetIncidentTypeOperationCompleted, userState);
        }
        
        private void OnGetIncidentTypeOperationCompleted(object arg) {
            if ((this.GetIncidentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncidentTypeCompleted(this, new GetIncidentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bima.ap.gov.in/GetPanchayats", RequestNamespace="http://bima.ap.gov.in/", ResponseNamespace="http://bima.ap.gov.in/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPanchayats(string key, string did, string mid) {
            object[] results = this.Invoke("GetPanchayats", new object[] {
                        key,
                        did,
                        mid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPanchayatsAsync(string key, string did, string mid) {
            this.GetPanchayatsAsync(key, did, mid, null);
        }
        
        /// <remarks/>
        public void GetPanchayatsAsync(string key, string did, string mid, object userState) {
            if ((this.GetPanchayatsOperationCompleted == null)) {
                this.GetPanchayatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPanchayatsOperationCompleted);
            }
            this.InvokeAsync("GetPanchayats", new object[] {
                        key,
                        did,
                        mid}, this.GetPanchayatsOperationCompleted, userState);
        }
        
        private void OnGetPanchayatsOperationCompleted(object arg) {
            if ((this.GetPanchayatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPanchayatsCompleted(this, new GetPanchayatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bima.ap.gov.in/GetEntryBy", RequestNamespace="http://bima.ap.gov.in/", ResponseNamespace="http://bima.ap.gov.in/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEntryBy(string key) {
            object[] results = this.Invoke("GetEntryBy", new object[] {
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntryByAsync(string key) {
            this.GetEntryByAsync(key, null);
        }
        
        /// <remarks/>
        public void GetEntryByAsync(string key, object userState) {
            if ((this.GetEntryByOperationCompleted == null)) {
                this.GetEntryByOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntryByOperationCompleted);
            }
            this.InvokeAsync("GetEntryBy", new object[] {
                        key}, this.GetEntryByOperationCompleted, userState);
        }
        
        private void OnGetEntryByOperationCompleted(object arg) {
            if ((this.GetEntryByCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntryByCompleted(this, new GetEntryByCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertclaimdataCompletedEventHandler(object sender, InsertclaimdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertclaimdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertclaimdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDistrictsCompletedEventHandler(object sender, GetDistrictsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistrictsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistrictsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMandalsCompletedEventHandler(object sender, GetMandalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMandalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMandalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetVillagesCompletedEventHandler(object sender, GetVillagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVillagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVillagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetClaimtypeCompletedEventHandler(object sender, GetClaimtypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClaimtypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClaimtypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCauseCompletedEventHandler(object sender, GetCauseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCauseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCauseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetIncidentTypeCompletedEventHandler(object sender, GetIncidentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncidentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncidentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPanchayatsCompletedEventHandler(object sender, GetPanchayatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPanchayatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPanchayatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEntryByCompletedEventHandler(object sender, GetEntryByCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntryByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntryByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591