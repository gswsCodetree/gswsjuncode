//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace gswsBackendAPI.MeesevaProductionService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MeeSevaWebServiceSoap", Namespace="http://AP.org/")]
    public partial class MeeSevaWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback insertbarcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GETAPPROVEDAPPLICATIONSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationDetails_1100OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationDetails_1100_hugeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeesevaUsers_1100OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacsimileSignatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEPICApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFM201718DetailsByDMVOperationCompleted;
        
        private System.Threading.SendOrPostCallback TRANSACTIONDETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SERVICETWISETRANSACTIONSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SPDCL_UPDATECONSUMERCOMPLAINTSTATUSOperationCompleted;
        
        private System.Threading.SendOrPostCallback MEESEVAABSTRACT_CATAOperationCompleted;
        
        private System.Threading.SendOrPostCallback MEESEVAABSTRACT_CATBOperationCompleted;
        
        private System.Threading.SendOrPostCallback DEPARTMENTWISEDETAILS_CATAOperationCompleted;
        
        private System.Threading.SendOrPostCallback DEPARTMENTWISEDETAILS_CATBOperationCompleted;
        
        private System.Threading.SendOrPostCallback SERVICEWISEDETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback DISTRICTWISEDETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GETMEESEVACENTERDETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GETMEESEVACENTERPHOTOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ONLINE_DEPARTMENTWISEABSTRACTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ONLINE_DEPARTMENTWISEDETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ONLINE_NEWDEPARTMENTWISEABSTRACTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ONLINE_NEWDEPARTMENTWISEDETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback DEPARTMENTWISEDETAILS_LEVEL2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DEPARTMENTWISEDETAILS_LEVEL3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SERVICEWISEDETAILS_LEVEL2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DISTRICTWISEDETAILS_LEVEL2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DISTRICTWISEDETAILS_LEVEL3OperationCompleted;
        
        private System.Threading.SendOrPostCallback OFFICERWISEDETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCatAandCatBdataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GETMINERALCONCESSIONAPPLICATIONSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRejectionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CasteCodeByApplicationNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CORE_DETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_FMTRACTORS_DISTRICTWISECOUNTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_FMTRACTORS_MANDALWISECOUNTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GET_FMTRACTORS_VILLAGEWISECOUNTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GETMEESEVACOUNTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceWise_ApplicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CPK_UPDATEAPPNOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GETAPPROVEDAPPLICATIONPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback SadaBainama_StatusUpdateDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SadaBainama_Get_SLAMonitoringDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VCDetails_ServiceList22AOperationCompleted;
        
        private System.Threading.SendOrPostCallback VCDetails_DottedLandsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceList22A_ApprovedListDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PattaSubDivision_Get_SLAMonitoringDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FlineserviceNewDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GETAPPROVEDAPPLICATIONPDF_TESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDDRApplicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDDRApplicationDetailsJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback GVS_CITIZENSERVICESCOUNTOperationCompleted;
        
        private System.Threading.SendOrPostCallback SADAREMTransactionIDDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VSWS_GETTOKENOperationCompleted;
        
        private System.Threading.SendOrPostCallback VSWS_GETAPPDETAILSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTDPDetailsByAadharOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationDetails_PrajavaniOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationDetails_UnifiedBirthDeathOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationDetails_PattadarPassbookOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationDetails_TitleDeedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationDetails_OldAdangalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRevocationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationDetails_TSLROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionDetailsByServiceIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCDMAParvadaTransactionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCCPageCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionDetailsByServiceIDDistWiseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAadharApplicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationDetails_VillageMapCopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectApprovedMUTPPBDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMUTPPBDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectApplicationNoWiseOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCourrierDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEPDCLStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEPDCLCategoryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEPDCLLoadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEPDCLNameStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCPDCLStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCPDCLCategoryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCPDCLLoadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCPDCLNameStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNPDCLDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSPDCLNameStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSPDCLCategoryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSPDCLLoadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSPDCLCategoryLoadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserCreationInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserCreationInsertFinalOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcivateCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChannelActiveInactiveDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ePDSAP_CheckTransactionExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ePDSAP_UpdateRationCardApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ISES_GetTransactionDetailsByServiceIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ISES_UpdateApplicationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ISES_UpdateTransferDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ISES_RevokeApplicationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ISES_GetTransactionDetailsByServiceID_DataTableTestingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Mutation_StatusUpdateDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRC_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CheckRationCardExistsornotOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushUnableToPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemarksUnableToPrintPPBOperationCompleted;
        
        private System.Threading.SendOrPostCallback RePushProblemsDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMUTPPBapprovedRejectedDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectStatusforPPBOperationCompleted;
        
        private System.Threading.SendOrPostCallback ePDSAP_ApplicationStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CMDASHBOARD_CDMAReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ePDSAP_UpdRCardAppStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateChannelDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCaste_SubCasteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectRectifiedPPBsbyMRODetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectDepartmentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EPICAadhaarSeedingDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransaportDriversCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectApprovedApplicantPPBDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistrictWiseDriversCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCircleWiseDriversCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMandalWiseDriversCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMutationDetails_TESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationDetails_AdditionofSurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback RECONCILATION_APONLINETRANSACTIONSOperationCompleted;
        
        private System.Threading.SendOrPostCallback RECONCILATION_APONLINEDETAILS_SSDGOperationCompleted;
        
        private System.Threading.SendOrPostCallback RECONCILATION_EFMS_MIS_MEESEVAOperationCompleted;
        
        private System.Threading.SendOrPostCallback RECONCILATION_EFMS_MIS_SSDGOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationDetails_PattadarPassbook_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback APOnlineReconcilationTransCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback APOnlineReconcilationTransCount_SSDGOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectMUTPPBApproveRejDistDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintingOfTittleDeedApprovedRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApproved_PPBSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFM201617DetailsByDMVOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFM201617DetailsByAadharOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MeeSevaWebService() {
            this.Url = global::gswsBackendAPI.Properties.Settings.Default.gswsBackendAPI_MeesevaProductionService_MeeSevaWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event insertbarcodeCompletedEventHandler insertbarcodeCompleted;
        
        /// <remarks/>
        public event GETAPPROVEDAPPLICATIONSCompletedEventHandler GETAPPROVEDAPPLICATIONSCompleted;
        
        /// <remarks/>
        public event GetApplicationDetails_1100CompletedEventHandler GetApplicationDetails_1100Completed;
        
        /// <remarks/>
        public event GetApplicationDetails_1100_hugeCompletedEventHandler GetApplicationDetails_1100_hugeCompleted;
        
        /// <remarks/>
        public event GetMeesevaUsers_1100CompletedEventHandler GetMeesevaUsers_1100Completed;
        
        /// <remarks/>
        public event GetFacsimileSignatureCompletedEventHandler GetFacsimileSignatureCompleted;
        
        /// <remarks/>
        public event UpdateEPICApplicationStatusCompletedEventHandler UpdateEPICApplicationStatusCompleted;
        
        /// <remarks/>
        public event GetFM201718DetailsByDMVCompletedEventHandler GetFM201718DetailsByDMVCompleted;
        
        /// <remarks/>
        public event TRANSACTIONDETAILSCompletedEventHandler TRANSACTIONDETAILSCompleted;
        
        /// <remarks/>
        public event SERVICETWISETRANSACTIONSCompletedEventHandler SERVICETWISETRANSACTIONSCompleted;
        
        /// <remarks/>
        public event SPDCL_UPDATECONSUMERCOMPLAINTSTATUSCompletedEventHandler SPDCL_UPDATECONSUMERCOMPLAINTSTATUSCompleted;
        
        /// <remarks/>
        public event MEESEVAABSTRACT_CATACompletedEventHandler MEESEVAABSTRACT_CATACompleted;
        
        /// <remarks/>
        public event MEESEVAABSTRACT_CATBCompletedEventHandler MEESEVAABSTRACT_CATBCompleted;
        
        /// <remarks/>
        public event DEPARTMENTWISEDETAILS_CATACompletedEventHandler DEPARTMENTWISEDETAILS_CATACompleted;
        
        /// <remarks/>
        public event DEPARTMENTWISEDETAILS_CATBCompletedEventHandler DEPARTMENTWISEDETAILS_CATBCompleted;
        
        /// <remarks/>
        public event SERVICEWISEDETAILSCompletedEventHandler SERVICEWISEDETAILSCompleted;
        
        /// <remarks/>
        public event DISTRICTWISEDETAILSCompletedEventHandler DISTRICTWISEDETAILSCompleted;
        
        /// <remarks/>
        public event GETMEESEVACENTERDETAILSCompletedEventHandler GETMEESEVACENTERDETAILSCompleted;
        
        /// <remarks/>
        public event GETMEESEVACENTERPHOTOSCompletedEventHandler GETMEESEVACENTERPHOTOSCompleted;
        
        /// <remarks/>
        public event ONLINE_DEPARTMENTWISEABSTRACTCompletedEventHandler ONLINE_DEPARTMENTWISEABSTRACTCompleted;
        
        /// <remarks/>
        public event ONLINE_DEPARTMENTWISEDETAILSCompletedEventHandler ONLINE_DEPARTMENTWISEDETAILSCompleted;
        
        /// <remarks/>
        public event ONLINE_NEWDEPARTMENTWISEABSTRACTCompletedEventHandler ONLINE_NEWDEPARTMENTWISEABSTRACTCompleted;
        
        /// <remarks/>
        public event ONLINE_NEWDEPARTMENTWISEDETAILSCompletedEventHandler ONLINE_NEWDEPARTMENTWISEDETAILSCompleted;
        
        /// <remarks/>
        public event DEPARTMENTWISEDETAILS_LEVEL2CompletedEventHandler DEPARTMENTWISEDETAILS_LEVEL2Completed;
        
        /// <remarks/>
        public event DEPARTMENTWISEDETAILS_LEVEL3CompletedEventHandler DEPARTMENTWISEDETAILS_LEVEL3Completed;
        
        /// <remarks/>
        public event SERVICEWISEDETAILS_LEVEL2CompletedEventHandler SERVICEWISEDETAILS_LEVEL2Completed;
        
        /// <remarks/>
        public event DISTRICTWISEDETAILS_LEVEL2CompletedEventHandler DISTRICTWISEDETAILS_LEVEL2Completed;
        
        /// <remarks/>
        public event DISTRICTWISEDETAILS_LEVEL3CompletedEventHandler DISTRICTWISEDETAILS_LEVEL3Completed;
        
        /// <remarks/>
        public event OFFICERWISEDETAILSCompletedEventHandler OFFICERWISEDETAILSCompleted;
        
        /// <remarks/>
        public event GetCatAandCatBdataCompletedEventHandler GetCatAandCatBdataCompleted;
        
        /// <remarks/>
        public event GETMINERALCONCESSIONAPPLICATIONSCompletedEventHandler GETMINERALCONCESSIONAPPLICATIONSCompleted;
        
        /// <remarks/>
        public event GetRejectionStatusCompletedEventHandler GetRejectionStatusCompleted;
        
        /// <remarks/>
        public event Get_CasteCodeByApplicationNumberCompletedEventHandler Get_CasteCodeByApplicationNumberCompleted;
        
        /// <remarks/>
        public event CORE_DETAILSCompletedEventHandler CORE_DETAILSCompleted;
        
        /// <remarks/>
        public event GET_FMTRACTORS_DISTRICTWISECOUNTCompletedEventHandler GET_FMTRACTORS_DISTRICTWISECOUNTCompleted;
        
        /// <remarks/>
        public event GET_FMTRACTORS_MANDALWISECOUNTCompletedEventHandler GET_FMTRACTORS_MANDALWISECOUNTCompleted;
        
        /// <remarks/>
        public event GET_FMTRACTORS_VILLAGEWISECOUNTCompletedEventHandler GET_FMTRACTORS_VILLAGEWISECOUNTCompleted;
        
        /// <remarks/>
        public event GETMEESEVACOUNTCompletedEventHandler GETMEESEVACOUNTCompleted;
        
        /// <remarks/>
        public event GetServiceWise_ApplicationDetailsCompletedEventHandler GetServiceWise_ApplicationDetailsCompleted;
        
        /// <remarks/>
        public event CPK_UPDATEAPPNOCompletedEventHandler CPK_UPDATEAPPNOCompleted;
        
        /// <remarks/>
        public event GETAPPROVEDAPPLICATIONPDFCompletedEventHandler GETAPPROVEDAPPLICATIONPDFCompleted;
        
        /// <remarks/>
        public event SadaBainama_StatusUpdateDetailsCompletedEventHandler SadaBainama_StatusUpdateDetailsCompleted;
        
        /// <remarks/>
        public event SadaBainama_Get_SLAMonitoringDetailsCompletedEventHandler SadaBainama_Get_SLAMonitoringDetailsCompleted;
        
        /// <remarks/>
        public event VCDetails_ServiceList22ACompletedEventHandler VCDetails_ServiceList22ACompleted;
        
        /// <remarks/>
        public event VCDetails_DottedLandsCompletedEventHandler VCDetails_DottedLandsCompleted;
        
        /// <remarks/>
        public event ServiceList22A_ApprovedListDetailsCompletedEventHandler ServiceList22A_ApprovedListDetailsCompleted;
        
        /// <remarks/>
        public event PattaSubDivision_Get_SLAMonitoringDetailsCompletedEventHandler PattaSubDivision_Get_SLAMonitoringDetailsCompleted;
        
        /// <remarks/>
        public event FlineserviceNewDetailsCompletedEventHandler FlineserviceNewDetailsCompleted;
        
        /// <remarks/>
        public event GETAPPROVEDAPPLICATIONPDF_TESTCompletedEventHandler GETAPPROVEDAPPLICATIONPDF_TESTCompleted;
        
        /// <remarks/>
        public event GetDDRApplicationDetailsCompletedEventHandler GetDDRApplicationDetailsCompleted;
        
        /// <remarks/>
        public event GetDDRApplicationDetailsJSONCompletedEventHandler GetDDRApplicationDetailsJSONCompleted;
        
        /// <remarks/>
        public event GVS_CITIZENSERVICESCOUNTCompletedEventHandler GVS_CITIZENSERVICESCOUNTCompleted;
        
        /// <remarks/>
        public event SADAREMTransactionIDDetailsCompletedEventHandler SADAREMTransactionIDDetailsCompleted;
        
        /// <remarks/>
        public event VSWS_GETTOKENCompletedEventHandler VSWS_GETTOKENCompleted;
        
        /// <remarks/>
        public event VSWS_GETAPPDETAILSCompletedEventHandler VSWS_GETAPPDETAILSCompleted;
        
        /// <remarks/>
        public event GetTDPDetailsByAadharCompletedEventHandler GetTDPDetailsByAadharCompleted;
        
        /// <remarks/>
        public event UpdateApplicationDetails_PrajavaniCompletedEventHandler UpdateApplicationDetails_PrajavaniCompleted;
        
        /// <remarks/>
        public event UpdateApplicationDetails_UnifiedBirthDeathCompletedEventHandler UpdateApplicationDetails_UnifiedBirthDeathCompleted;
        
        /// <remarks/>
        public event UpdateApplicationDetails_PattadarPassbookCompletedEventHandler UpdateApplicationDetails_PattadarPassbookCompleted;
        
        /// <remarks/>
        public event UpdateApplicationDetails_TitleDeedCompletedEventHandler UpdateApplicationDetails_TitleDeedCompleted;
        
        /// <remarks/>
        public event UpdateApplicationDetails_OldAdangalCompletedEventHandler UpdateApplicationDetails_OldAdangalCompleted;
        
        /// <remarks/>
        public event SendRevocationDetailsCompletedEventHandler SendRevocationDetailsCompleted;
        
        /// <remarks/>
        public event UpdateApplicationDetails_TSLRCompletedEventHandler UpdateApplicationDetails_TSLRCompleted;
        
        /// <remarks/>
        public event GetTransactionDetailsByServiceIDCompletedEventHandler GetTransactionDetailsByServiceIDCompleted;
        
        /// <remarks/>
        public event GetCDMAParvadaTransactionDetailsCompletedEventHandler GetCDMAParvadaTransactionDetailsCompleted;
        
        /// <remarks/>
        public event GetCCPageCountCompletedEventHandler GetCCPageCountCompleted;
        
        /// <remarks/>
        public event GetTransactionDetailsByServiceIDDistWiseCompletedEventHandler GetTransactionDetailsByServiceIDDistWiseCompleted;
        
        /// <remarks/>
        public event SelectAadharApplicationDetailsCompletedEventHandler SelectAadharApplicationDetailsCompleted;
        
        /// <remarks/>
        public event UpdateApplicationDetails_VillageMapCopyCompletedEventHandler UpdateApplicationDetails_VillageMapCopyCompleted;
        
        /// <remarks/>
        public event SelectApprovedMUTPPBDetailsCompletedEventHandler SelectApprovedMUTPPBDetailsCompleted;
        
        /// <remarks/>
        public event SelectMUTPPBDetailsCompletedEventHandler SelectMUTPPBDetailsCompleted;
        
        /// <remarks/>
        public event SelectApplicationNoWiseCompletedEventHandler SelectApplicationNoWiseCompleted;
        
        /// <remarks/>
        public event UpdateCourrierDetailsCompletedEventHandler UpdateCourrierDetailsCompleted;
        
        /// <remarks/>
        public event UpdateEPDCLStatusCompletedEventHandler UpdateEPDCLStatusCompleted;
        
        /// <remarks/>
        public event UpdateEPDCLCategoryStatusCompletedEventHandler UpdateEPDCLCategoryStatusCompleted;
        
        /// <remarks/>
        public event UpdateEPDCLLoadStatusCompletedEventHandler UpdateEPDCLLoadStatusCompleted;
        
        /// <remarks/>
        public event UpdateEPDCLNameStatusCompletedEventHandler UpdateEPDCLNameStatusCompleted;
        
        /// <remarks/>
        public event UpdateCPDCLStatusCompletedEventHandler UpdateCPDCLStatusCompleted;
        
        /// <remarks/>
        public event UpdateCPDCLCategoryStatusCompletedEventHandler UpdateCPDCLCategoryStatusCompleted;
        
        /// <remarks/>
        public event UpdateCPDCLLoadStatusCompletedEventHandler UpdateCPDCLLoadStatusCompleted;
        
        /// <remarks/>
        public event UpdateCPDCLNameStatusCompletedEventHandler UpdateCPDCLNameStatusCompleted;
        
        /// <remarks/>
        public event UpdateNPDCLDetailsCompletedEventHandler UpdateNPDCLDetailsCompleted;
        
        /// <remarks/>
        public event UpdateSPDCLNameStatusCompletedEventHandler UpdateSPDCLNameStatusCompleted;
        
        /// <remarks/>
        public event UpdateSPDCLCategoryStatusCompletedEventHandler UpdateSPDCLCategoryStatusCompleted;
        
        /// <remarks/>
        public event UpdateSPDCLLoadStatusCompletedEventHandler UpdateSPDCLLoadStatusCompleted;
        
        /// <remarks/>
        public event UpdateSPDCLCategoryLoadStatusCompletedEventHandler UpdateSPDCLCategoryLoadStatusCompleted;
        
        /// <remarks/>
        public event UserCreationInsertCompletedEventHandler UserCreationInsertCompleted;
        
        /// <remarks/>
        public event UserCreationInsertFinalCompletedEventHandler UserCreationInsertFinalCompleted;
        
        /// <remarks/>
        public event AcivateCenterCompletedEventHandler AcivateCenterCompleted;
        
        /// <remarks/>
        public event UpdateChannelActiveInactiveDetailsCompletedEventHandler UpdateChannelActiveInactiveDetailsCompleted;
        
        /// <remarks/>
        public event ePDSAP_CheckTransactionExistsCompletedEventHandler ePDSAP_CheckTransactionExistsCompleted;
        
        /// <remarks/>
        public event ePDSAP_UpdateRationCardApplicationStatusCompletedEventHandler ePDSAP_UpdateRationCardApplicationStatusCompleted;
        
        /// <remarks/>
        public event ISES_GetTransactionDetailsByServiceIDCompletedEventHandler ISES_GetTransactionDetailsByServiceIDCompleted;
        
        /// <remarks/>
        public event ISES_UpdateApplicationDetailsCompletedEventHandler ISES_UpdateApplicationDetailsCompleted;
        
        /// <remarks/>
        public event ISES_UpdateTransferDetailsCompletedEventHandler ISES_UpdateTransferDetailsCompleted;
        
        /// <remarks/>
        public event ISES_RevokeApplicationsCompletedEventHandler ISES_RevokeApplicationsCompleted;
        
        /// <remarks/>
        public event ISES_GetTransactionDetailsByServiceID_DataTableTestingCompletedEventHandler ISES_GetTransactionDetailsByServiceID_DataTableTestingCompleted;
        
        /// <remarks/>
        public event Mutation_StatusUpdateDetailsCompletedEventHandler Mutation_StatusUpdateDetailsCompleted;
        
        /// <remarks/>
        public event GetRC_DetailsCompletedEventHandler GetRC_DetailsCompleted;
        
        /// <remarks/>
        public event Get_CheckRationCardExistsornotCompletedEventHandler Get_CheckRationCardExistsornotCompleted;
        
        /// <remarks/>
        public event PushUnableToPrintCompletedEventHandler PushUnableToPrintCompleted;
        
        /// <remarks/>
        public event RemarksUnableToPrintPPBCompletedEventHandler RemarksUnableToPrintPPBCompleted;
        
        /// <remarks/>
        public event RePushProblemsDataCompletedEventHandler RePushProblemsDataCompleted;
        
        /// <remarks/>
        public event SelectMUTPPBapprovedRejectedDetailsCompletedEventHandler SelectMUTPPBapprovedRejectedDetailsCompleted;
        
        /// <remarks/>
        public event SelectStatusforPPBCompletedEventHandler SelectStatusforPPBCompleted;
        
        /// <remarks/>
        public event ePDSAP_ApplicationStatusCompletedEventHandler ePDSAP_ApplicationStatusCompleted;
        
        /// <remarks/>
        public event CMDASHBOARD_CDMAReportCompletedEventHandler CMDASHBOARD_CDMAReportCompleted;
        
        /// <remarks/>
        public event ePDSAP_UpdRCardAppStatusCompletedEventHandler ePDSAP_UpdRCardAppStatusCompleted;
        
        /// <remarks/>
        public event UpdateChannelDetailsCompletedEventHandler UpdateChannelDetailsCompleted;
        
        /// <remarks/>
        public event GetCaste_SubCasteCompletedEventHandler GetCaste_SubCasteCompleted;
        
        /// <remarks/>
        public event SelectRectifiedPPBsbyMRODetailsCompletedEventHandler SelectRectifiedPPBsbyMRODetailsCompleted;
        
        /// <remarks/>
        public event SelectDepartmentDetailsCompletedEventHandler SelectDepartmentDetailsCompleted;
        
        /// <remarks/>
        public event EPICAadhaarSeedingDetailsCompletedEventHandler EPICAadhaarSeedingDetailsCompleted;
        
        /// <remarks/>
        public event GetTransaportDriversCountCompletedEventHandler GetTransaportDriversCountCompleted;
        
        /// <remarks/>
        public event SelectApprovedApplicantPPBDetailsCompletedEventHandler SelectApprovedApplicantPPBDetailsCompleted;
        
        /// <remarks/>
        public event GetDistrictWiseDriversCountCompletedEventHandler GetDistrictWiseDriversCountCompleted;
        
        /// <remarks/>
        public event GetCircleWiseDriversCountCompletedEventHandler GetCircleWiseDriversCountCompleted;
        
        /// <remarks/>
        public event GetMandalWiseDriversCountCompletedEventHandler GetMandalWiseDriversCountCompleted;
        
        /// <remarks/>
        public event UpdateMutationDetails_TESTCompletedEventHandler UpdateMutationDetails_TESTCompleted;
        
        /// <remarks/>
        public event UpdateApplicationDetails_AdditionofSurveyCompletedEventHandler UpdateApplicationDetails_AdditionofSurveyCompleted;
        
        /// <remarks/>
        public event SendEmailNewCompletedEventHandler SendEmailNewCompleted;
        
        /// <remarks/>
        public event RECONCILATION_APONLINETRANSACTIONSCompletedEventHandler RECONCILATION_APONLINETRANSACTIONSCompleted;
        
        /// <remarks/>
        public event RECONCILATION_APONLINEDETAILS_SSDGCompletedEventHandler RECONCILATION_APONLINEDETAILS_SSDGCompleted;
        
        /// <remarks/>
        public event RECONCILATION_EFMS_MIS_MEESEVACompletedEventHandler RECONCILATION_EFMS_MIS_MEESEVACompleted;
        
        /// <remarks/>
        public event RECONCILATION_EFMS_MIS_SSDGCompletedEventHandler RECONCILATION_EFMS_MIS_SSDGCompleted;
        
        /// <remarks/>
        public event UpdateApplicationDetails_PattadarPassbook_NewCompletedEventHandler UpdateApplicationDetails_PattadarPassbook_NewCompleted;
        
        /// <remarks/>
        public event APOnlineReconcilationTransCountCompletedEventHandler APOnlineReconcilationTransCountCompleted;
        
        /// <remarks/>
        public event APOnlineReconcilationTransCount_SSDGCompletedEventHandler APOnlineReconcilationTransCount_SSDGCompleted;
        
        /// <remarks/>
        public event SelectMUTPPBApproveRejDistDetailsCompletedEventHandler SelectMUTPPBApproveRejDistDetailsCompleted;
        
        /// <remarks/>
        public event GetPrintingOfTittleDeedApprovedRequestsCompletedEventHandler GetPrintingOfTittleDeedApprovedRequestsCompleted;
        
        /// <remarks/>
        public event GetApproved_PPBSCompletedEventHandler GetApproved_PPBSCompleted;
        
        /// <remarks/>
        public event GetFM201617DetailsByDMVCompletedEventHandler GetFM201617DetailsByDMVCompleted;
        
        /// <remarks/>
        public event GetFM201617DetailsByAadharCompletedEventHandler GetFM201617DetailsByAadharCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/insertbarcode", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable insertbarcode(string ApplicationNo, string userid, string password) {
            object[] results = this.Invoke("insertbarcode", new object[] {
                        ApplicationNo,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void insertbarcodeAsync(string ApplicationNo, string userid, string password) {
            this.insertbarcodeAsync(ApplicationNo, userid, password, null);
        }
        
        /// <remarks/>
        public void insertbarcodeAsync(string ApplicationNo, string userid, string password, object userState) {
            if ((this.insertbarcodeOperationCompleted == null)) {
                this.insertbarcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertbarcodeOperationCompleted);
            }
            this.InvokeAsync("insertbarcode", new object[] {
                        ApplicationNo,
                        userid,
                        password}, this.insertbarcodeOperationCompleted, userState);
        }
        
        private void OninsertbarcodeOperationCompleted(object arg) {
            if ((this.insertbarcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertbarcodeCompleted(this, new insertbarcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GETAPPROVEDAPPLICATIONS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GETAPPROVEDAPPLICATIONS(string serviceID, string FromDate, string ToDate, string userid, string password) {
            object[] results = this.Invoke("GETAPPROVEDAPPLICATIONS", new object[] {
                        serviceID,
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GETAPPROVEDAPPLICATIONSAsync(string serviceID, string FromDate, string ToDate, string userid, string password) {
            this.GETAPPROVEDAPPLICATIONSAsync(serviceID, FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void GETAPPROVEDAPPLICATIONSAsync(string serviceID, string FromDate, string ToDate, string userid, string password, object userState) {
            if ((this.GETAPPROVEDAPPLICATIONSOperationCompleted == null)) {
                this.GETAPPROVEDAPPLICATIONSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETAPPROVEDAPPLICATIONSOperationCompleted);
            }
            this.InvokeAsync("GETAPPROVEDAPPLICATIONS", new object[] {
                        serviceID,
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.GETAPPROVEDAPPLICATIONSOperationCompleted, userState);
        }
        
        private void OnGETAPPROVEDAPPLICATIONSOperationCompleted(object arg) {
            if ((this.GETAPPROVEDAPPLICATIONSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETAPPROVEDAPPLICATIONSCompleted(this, new GETAPPROVEDAPPLICATIONSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetApplicationDetails_1100", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApplicationDetails_1100(string USERID, string PASSWORD) {
            object[] results = this.Invoke("GetApplicationDetails_1100", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationDetails_1100Async(string USERID, string PASSWORD) {
            this.GetApplicationDetails_1100Async(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GetApplicationDetails_1100Async(string USERID, string PASSWORD, object userState) {
            if ((this.GetApplicationDetails_1100OperationCompleted == null)) {
                this.GetApplicationDetails_1100OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationDetails_1100OperationCompleted);
            }
            this.InvokeAsync("GetApplicationDetails_1100", new object[] {
                        USERID,
                        PASSWORD}, this.GetApplicationDetails_1100OperationCompleted, userState);
        }
        
        private void OnGetApplicationDetails_1100OperationCompleted(object arg) {
            if ((this.GetApplicationDetails_1100Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationDetails_1100Completed(this, new GetApplicationDetails_1100CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetApplicationDetails_1100_huge", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetApplicationDetails_1100_huge(string USERID, string PASSWORD) {
            object[] results = this.Invoke("GetApplicationDetails_1100_huge", new object[] {
                        USERID,
                        PASSWORD});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationDetails_1100_hugeAsync(string USERID, string PASSWORD) {
            this.GetApplicationDetails_1100_hugeAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GetApplicationDetails_1100_hugeAsync(string USERID, string PASSWORD, object userState) {
            if ((this.GetApplicationDetails_1100_hugeOperationCompleted == null)) {
                this.GetApplicationDetails_1100_hugeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationDetails_1100_hugeOperationCompleted);
            }
            this.InvokeAsync("GetApplicationDetails_1100_huge", new object[] {
                        USERID,
                        PASSWORD}, this.GetApplicationDetails_1100_hugeOperationCompleted, userState);
        }
        
        private void OnGetApplicationDetails_1100_hugeOperationCompleted(object arg) {
            if ((this.GetApplicationDetails_1100_hugeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationDetails_1100_hugeCompleted(this, new GetApplicationDetails_1100_hugeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetMeesevaUsers_1100", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMeesevaUsers_1100(string USERID, string PASSWORD) {
            object[] results = this.Invoke("GetMeesevaUsers_1100", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeesevaUsers_1100Async(string USERID, string PASSWORD) {
            this.GetMeesevaUsers_1100Async(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GetMeesevaUsers_1100Async(string USERID, string PASSWORD, object userState) {
            if ((this.GetMeesevaUsers_1100OperationCompleted == null)) {
                this.GetMeesevaUsers_1100OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeesevaUsers_1100OperationCompleted);
            }
            this.InvokeAsync("GetMeesevaUsers_1100", new object[] {
                        USERID,
                        PASSWORD}, this.GetMeesevaUsers_1100OperationCompleted, userState);
        }
        
        private void OnGetMeesevaUsers_1100OperationCompleted(object arg) {
            if ((this.GetMeesevaUsers_1100Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeesevaUsers_1100Completed(this, new GetMeesevaUsers_1100CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetFacsimileSignature", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFacsimileSignature(string DistrictId, string MandalId, string userid, string password) {
            object[] results = this.Invoke("GetFacsimileSignature", new object[] {
                        DistrictId,
                        MandalId,
                        userid,
                        password});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFacsimileSignatureAsync(string DistrictId, string MandalId, string userid, string password) {
            this.GetFacsimileSignatureAsync(DistrictId, MandalId, userid, password, null);
        }
        
        /// <remarks/>
        public void GetFacsimileSignatureAsync(string DistrictId, string MandalId, string userid, string password, object userState) {
            if ((this.GetFacsimileSignatureOperationCompleted == null)) {
                this.GetFacsimileSignatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacsimileSignatureOperationCompleted);
            }
            this.InvokeAsync("GetFacsimileSignature", new object[] {
                        DistrictId,
                        MandalId,
                        userid,
                        password}, this.GetFacsimileSignatureOperationCompleted, userState);
        }
        
        private void OnGetFacsimileSignatureOperationCompleted(object arg) {
            if ((this.GetFacsimileSignatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacsimileSignatureCompleted(this, new GetFacsimileSignatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateEPICApplicationStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateEPICApplicationStatus(string ServiceNo, string appno, string status, string remarks, string updatedby, string userid, string password) {
            object[] results = this.Invoke("UpdateEPICApplicationStatus", new object[] {
                        ServiceNo,
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEPICApplicationStatusAsync(string ServiceNo, string appno, string status, string remarks, string updatedby, string userid, string password) {
            this.UpdateEPICApplicationStatusAsync(ServiceNo, appno, status, remarks, updatedby, userid, password, null);
        }
        
        /// <remarks/>
        public void UpdateEPICApplicationStatusAsync(string ServiceNo, string appno, string status, string remarks, string updatedby, string userid, string password, object userState) {
            if ((this.UpdateEPICApplicationStatusOperationCompleted == null)) {
                this.UpdateEPICApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEPICApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateEPICApplicationStatus", new object[] {
                        ServiceNo,
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password}, this.UpdateEPICApplicationStatusOperationCompleted, userState);
        }
        
        private void OnUpdateEPICApplicationStatusOperationCompleted(object arg) {
            if ((this.UpdateEPICApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEPICApplicationStatusCompleted(this, new UpdateEPICApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetFM201718DetailsByDMV", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFM201718DetailsByDMV(string UserId, string Password, string District, string Mandal, string Village) {
            object[] results = this.Invoke("GetFM201718DetailsByDMV", new object[] {
                        UserId,
                        Password,
                        District,
                        Mandal,
                        Village});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFM201718DetailsByDMVAsync(string UserId, string Password, string District, string Mandal, string Village) {
            this.GetFM201718DetailsByDMVAsync(UserId, Password, District, Mandal, Village, null);
        }
        
        /// <remarks/>
        public void GetFM201718DetailsByDMVAsync(string UserId, string Password, string District, string Mandal, string Village, object userState) {
            if ((this.GetFM201718DetailsByDMVOperationCompleted == null)) {
                this.GetFM201718DetailsByDMVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFM201718DetailsByDMVOperationCompleted);
            }
            this.InvokeAsync("GetFM201718DetailsByDMV", new object[] {
                        UserId,
                        Password,
                        District,
                        Mandal,
                        Village}, this.GetFM201718DetailsByDMVOperationCompleted, userState);
        }
        
        private void OnGetFM201718DetailsByDMVOperationCompleted(object arg) {
            if ((this.GetFM201718DetailsByDMVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFM201718DetailsByDMVCompleted(this, new GetFM201718DetailsByDMVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/TRANSACTIONDETAILS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TRANSACTIONDETAILS(int TYPE, string FROMDATE, string TODATE, string USERID, string PASSWORD) {
            object[] results = this.Invoke("TRANSACTIONDETAILS", new object[] {
                        TYPE,
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TRANSACTIONDETAILSAsync(int TYPE, string FROMDATE, string TODATE, string USERID, string PASSWORD) {
            this.TRANSACTIONDETAILSAsync(TYPE, FROMDATE, TODATE, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void TRANSACTIONDETAILSAsync(int TYPE, string FROMDATE, string TODATE, string USERID, string PASSWORD, object userState) {
            if ((this.TRANSACTIONDETAILSOperationCompleted == null)) {
                this.TRANSACTIONDETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTRANSACTIONDETAILSOperationCompleted);
            }
            this.InvokeAsync("TRANSACTIONDETAILS", new object[] {
                        TYPE,
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD}, this.TRANSACTIONDETAILSOperationCompleted, userState);
        }
        
        private void OnTRANSACTIONDETAILSOperationCompleted(object arg) {
            if ((this.TRANSACTIONDETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TRANSACTIONDETAILSCompleted(this, new TRANSACTIONDETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SERVICETWISETRANSACTIONS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SERVICETWISETRANSACTIONS(string DEPTID, string FROMDATE, string TODATE, string USERID, string PASSWORD) {
            object[] results = this.Invoke("SERVICETWISETRANSACTIONS", new object[] {
                        DEPTID,
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SERVICETWISETRANSACTIONSAsync(string DEPTID, string FROMDATE, string TODATE, string USERID, string PASSWORD) {
            this.SERVICETWISETRANSACTIONSAsync(DEPTID, FROMDATE, TODATE, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void SERVICETWISETRANSACTIONSAsync(string DEPTID, string FROMDATE, string TODATE, string USERID, string PASSWORD, object userState) {
            if ((this.SERVICETWISETRANSACTIONSOperationCompleted == null)) {
                this.SERVICETWISETRANSACTIONSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSERVICETWISETRANSACTIONSOperationCompleted);
            }
            this.InvokeAsync("SERVICETWISETRANSACTIONS", new object[] {
                        DEPTID,
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD}, this.SERVICETWISETRANSACTIONSOperationCompleted, userState);
        }
        
        private void OnSERVICETWISETRANSACTIONSOperationCompleted(object arg) {
            if ((this.SERVICETWISETRANSACTIONSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SERVICETWISETRANSACTIONSCompleted(this, new SERVICETWISETRANSACTIONSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SPDCL_UPDATECONSUMERCOMPLAINTSTATUS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SPDCL_UPDATECONSUMERCOMPLAINTSTATUS(string APPLICATIONNUMBER, string SERVICEID, string STATUS, string REMARKS, string SECTIONCODE, string UPDATEDBY, string SLA, string SLAENDDATE, string SPDCLRegno, string Isservice_chg, string EstimateFlag, string serviceno, string USERID, string PASSWORD, string NewCategory) {
            object[] results = this.Invoke("SPDCL_UPDATECONSUMERCOMPLAINTSTATUS", new object[] {
                        APPLICATIONNUMBER,
                        SERVICEID,
                        STATUS,
                        REMARKS,
                        SECTIONCODE,
                        UPDATEDBY,
                        SLA,
                        SLAENDDATE,
                        SPDCLRegno,
                        Isservice_chg,
                        EstimateFlag,
                        serviceno,
                        USERID,
                        PASSWORD,
                        NewCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SPDCL_UPDATECONSUMERCOMPLAINTSTATUSAsync(string APPLICATIONNUMBER, string SERVICEID, string STATUS, string REMARKS, string SECTIONCODE, string UPDATEDBY, string SLA, string SLAENDDATE, string SPDCLRegno, string Isservice_chg, string EstimateFlag, string serviceno, string USERID, string PASSWORD, string NewCategory) {
            this.SPDCL_UPDATECONSUMERCOMPLAINTSTATUSAsync(APPLICATIONNUMBER, SERVICEID, STATUS, REMARKS, SECTIONCODE, UPDATEDBY, SLA, SLAENDDATE, SPDCLRegno, Isservice_chg, EstimateFlag, serviceno, USERID, PASSWORD, NewCategory, null);
        }
        
        /// <remarks/>
        public void SPDCL_UPDATECONSUMERCOMPLAINTSTATUSAsync(
                    string APPLICATIONNUMBER, 
                    string SERVICEID, 
                    string STATUS, 
                    string REMARKS, 
                    string SECTIONCODE, 
                    string UPDATEDBY, 
                    string SLA, 
                    string SLAENDDATE, 
                    string SPDCLRegno, 
                    string Isservice_chg, 
                    string EstimateFlag, 
                    string serviceno, 
                    string USERID, 
                    string PASSWORD, 
                    string NewCategory, 
                    object userState) {
            if ((this.SPDCL_UPDATECONSUMERCOMPLAINTSTATUSOperationCompleted == null)) {
                this.SPDCL_UPDATECONSUMERCOMPLAINTSTATUSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSPDCL_UPDATECONSUMERCOMPLAINTSTATUSOperationCompleted);
            }
            this.InvokeAsync("SPDCL_UPDATECONSUMERCOMPLAINTSTATUS", new object[] {
                        APPLICATIONNUMBER,
                        SERVICEID,
                        STATUS,
                        REMARKS,
                        SECTIONCODE,
                        UPDATEDBY,
                        SLA,
                        SLAENDDATE,
                        SPDCLRegno,
                        Isservice_chg,
                        EstimateFlag,
                        serviceno,
                        USERID,
                        PASSWORD,
                        NewCategory}, this.SPDCL_UPDATECONSUMERCOMPLAINTSTATUSOperationCompleted, userState);
        }
        
        private void OnSPDCL_UPDATECONSUMERCOMPLAINTSTATUSOperationCompleted(object arg) {
            if ((this.SPDCL_UPDATECONSUMERCOMPLAINTSTATUSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SPDCL_UPDATECONSUMERCOMPLAINTSTATUSCompleted(this, new SPDCL_UPDATECONSUMERCOMPLAINTSTATUSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/MEESEVAABSTRACT_CATA", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MEESEVAABSTRACT_CATA(string USERID, string PASSWORD) {
            object[] results = this.Invoke("MEESEVAABSTRACT_CATA", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MEESEVAABSTRACT_CATAAsync(string USERID, string PASSWORD) {
            this.MEESEVAABSTRACT_CATAAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void MEESEVAABSTRACT_CATAAsync(string USERID, string PASSWORD, object userState) {
            if ((this.MEESEVAABSTRACT_CATAOperationCompleted == null)) {
                this.MEESEVAABSTRACT_CATAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMEESEVAABSTRACT_CATAOperationCompleted);
            }
            this.InvokeAsync("MEESEVAABSTRACT_CATA", new object[] {
                        USERID,
                        PASSWORD}, this.MEESEVAABSTRACT_CATAOperationCompleted, userState);
        }
        
        private void OnMEESEVAABSTRACT_CATAOperationCompleted(object arg) {
            if ((this.MEESEVAABSTRACT_CATACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MEESEVAABSTRACT_CATACompleted(this, new MEESEVAABSTRACT_CATACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/MEESEVAABSTRACT_CATB", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MEESEVAABSTRACT_CATB(string USERID, string PASSWORD) {
            object[] results = this.Invoke("MEESEVAABSTRACT_CATB", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MEESEVAABSTRACT_CATBAsync(string USERID, string PASSWORD) {
            this.MEESEVAABSTRACT_CATBAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void MEESEVAABSTRACT_CATBAsync(string USERID, string PASSWORD, object userState) {
            if ((this.MEESEVAABSTRACT_CATBOperationCompleted == null)) {
                this.MEESEVAABSTRACT_CATBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMEESEVAABSTRACT_CATBOperationCompleted);
            }
            this.InvokeAsync("MEESEVAABSTRACT_CATB", new object[] {
                        USERID,
                        PASSWORD}, this.MEESEVAABSTRACT_CATBOperationCompleted, userState);
        }
        
        private void OnMEESEVAABSTRACT_CATBOperationCompleted(object arg) {
            if ((this.MEESEVAABSTRACT_CATBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MEESEVAABSTRACT_CATBCompleted(this, new MEESEVAABSTRACT_CATBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/DEPARTMENTWISEDETAILS_CATA", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DEPARTMENTWISEDETAILS_CATA(string USERID, string PASSWORD) {
            object[] results = this.Invoke("DEPARTMENTWISEDETAILS_CATA", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DEPARTMENTWISEDETAILS_CATAAsync(string USERID, string PASSWORD) {
            this.DEPARTMENTWISEDETAILS_CATAAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void DEPARTMENTWISEDETAILS_CATAAsync(string USERID, string PASSWORD, object userState) {
            if ((this.DEPARTMENTWISEDETAILS_CATAOperationCompleted == null)) {
                this.DEPARTMENTWISEDETAILS_CATAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDEPARTMENTWISEDETAILS_CATAOperationCompleted);
            }
            this.InvokeAsync("DEPARTMENTWISEDETAILS_CATA", new object[] {
                        USERID,
                        PASSWORD}, this.DEPARTMENTWISEDETAILS_CATAOperationCompleted, userState);
        }
        
        private void OnDEPARTMENTWISEDETAILS_CATAOperationCompleted(object arg) {
            if ((this.DEPARTMENTWISEDETAILS_CATACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DEPARTMENTWISEDETAILS_CATACompleted(this, new DEPARTMENTWISEDETAILS_CATACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/DEPARTMENTWISEDETAILS_CATB", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DEPARTMENTWISEDETAILS_CATB(string USERID, string PASSWORD) {
            object[] results = this.Invoke("DEPARTMENTWISEDETAILS_CATB", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DEPARTMENTWISEDETAILS_CATBAsync(string USERID, string PASSWORD) {
            this.DEPARTMENTWISEDETAILS_CATBAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void DEPARTMENTWISEDETAILS_CATBAsync(string USERID, string PASSWORD, object userState) {
            if ((this.DEPARTMENTWISEDETAILS_CATBOperationCompleted == null)) {
                this.DEPARTMENTWISEDETAILS_CATBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDEPARTMENTWISEDETAILS_CATBOperationCompleted);
            }
            this.InvokeAsync("DEPARTMENTWISEDETAILS_CATB", new object[] {
                        USERID,
                        PASSWORD}, this.DEPARTMENTWISEDETAILS_CATBOperationCompleted, userState);
        }
        
        private void OnDEPARTMENTWISEDETAILS_CATBOperationCompleted(object arg) {
            if ((this.DEPARTMENTWISEDETAILS_CATBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DEPARTMENTWISEDETAILS_CATBCompleted(this, new DEPARTMENTWISEDETAILS_CATBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SERVICEWISEDETAILS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SERVICEWISEDETAILS(string USERID, string PASSWORD) {
            object[] results = this.Invoke("SERVICEWISEDETAILS", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SERVICEWISEDETAILSAsync(string USERID, string PASSWORD) {
            this.SERVICEWISEDETAILSAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void SERVICEWISEDETAILSAsync(string USERID, string PASSWORD, object userState) {
            if ((this.SERVICEWISEDETAILSOperationCompleted == null)) {
                this.SERVICEWISEDETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSERVICEWISEDETAILSOperationCompleted);
            }
            this.InvokeAsync("SERVICEWISEDETAILS", new object[] {
                        USERID,
                        PASSWORD}, this.SERVICEWISEDETAILSOperationCompleted, userState);
        }
        
        private void OnSERVICEWISEDETAILSOperationCompleted(object arg) {
            if ((this.SERVICEWISEDETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SERVICEWISEDETAILSCompleted(this, new SERVICEWISEDETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/DISTRICTWISEDETAILS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DISTRICTWISEDETAILS(string USERID, string PASSWORD) {
            object[] results = this.Invoke("DISTRICTWISEDETAILS", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DISTRICTWISEDETAILSAsync(string USERID, string PASSWORD) {
            this.DISTRICTWISEDETAILSAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void DISTRICTWISEDETAILSAsync(string USERID, string PASSWORD, object userState) {
            if ((this.DISTRICTWISEDETAILSOperationCompleted == null)) {
                this.DISTRICTWISEDETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDISTRICTWISEDETAILSOperationCompleted);
            }
            this.InvokeAsync("DISTRICTWISEDETAILS", new object[] {
                        USERID,
                        PASSWORD}, this.DISTRICTWISEDETAILSOperationCompleted, userState);
        }
        
        private void OnDISTRICTWISEDETAILSOperationCompleted(object arg) {
            if ((this.DISTRICTWISEDETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DISTRICTWISEDETAILSCompleted(this, new DISTRICTWISEDETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GETMEESEVACENTERDETAILS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GETMEESEVACENTERDETAILS(string DISTRICTID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("GETMEESEVACENTERDETAILS", new object[] {
                        DISTRICTID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GETMEESEVACENTERDETAILSAsync(string DISTRICTID, string USERID, string PASSWORD) {
            this.GETMEESEVACENTERDETAILSAsync(DISTRICTID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GETMEESEVACENTERDETAILSAsync(string DISTRICTID, string USERID, string PASSWORD, object userState) {
            if ((this.GETMEESEVACENTERDETAILSOperationCompleted == null)) {
                this.GETMEESEVACENTERDETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETMEESEVACENTERDETAILSOperationCompleted);
            }
            this.InvokeAsync("GETMEESEVACENTERDETAILS", new object[] {
                        DISTRICTID,
                        USERID,
                        PASSWORD}, this.GETMEESEVACENTERDETAILSOperationCompleted, userState);
        }
        
        private void OnGETMEESEVACENTERDETAILSOperationCompleted(object arg) {
            if ((this.GETMEESEVACENTERDETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETMEESEVACENTERDETAILSCompleted(this, new GETMEESEVACENTERDETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GETMEESEVACENTERPHOTOS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GETMEESEVACENTERPHOTOS(string CENTERID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("GETMEESEVACENTERPHOTOS", new object[] {
                        CENTERID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GETMEESEVACENTERPHOTOSAsync(string CENTERID, string USERID, string PASSWORD) {
            this.GETMEESEVACENTERPHOTOSAsync(CENTERID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GETMEESEVACENTERPHOTOSAsync(string CENTERID, string USERID, string PASSWORD, object userState) {
            if ((this.GETMEESEVACENTERPHOTOSOperationCompleted == null)) {
                this.GETMEESEVACENTERPHOTOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETMEESEVACENTERPHOTOSOperationCompleted);
            }
            this.InvokeAsync("GETMEESEVACENTERPHOTOS", new object[] {
                        CENTERID,
                        USERID,
                        PASSWORD}, this.GETMEESEVACENTERPHOTOSOperationCompleted, userState);
        }
        
        private void OnGETMEESEVACENTERPHOTOSOperationCompleted(object arg) {
            if ((this.GETMEESEVACENTERPHOTOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETMEESEVACENTERPHOTOSCompleted(this, new GETMEESEVACENTERPHOTOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ONLINE_DEPARTMENTWISEABSTRACT", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ONLINE_DEPARTMENTWISEABSTRACT(int YEAR, string USERID, string PASSWORD) {
            object[] results = this.Invoke("ONLINE_DEPARTMENTWISEABSTRACT", new object[] {
                        YEAR,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ONLINE_DEPARTMENTWISEABSTRACTAsync(int YEAR, string USERID, string PASSWORD) {
            this.ONLINE_DEPARTMENTWISEABSTRACTAsync(YEAR, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void ONLINE_DEPARTMENTWISEABSTRACTAsync(int YEAR, string USERID, string PASSWORD, object userState) {
            if ((this.ONLINE_DEPARTMENTWISEABSTRACTOperationCompleted == null)) {
                this.ONLINE_DEPARTMENTWISEABSTRACTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnONLINE_DEPARTMENTWISEABSTRACTOperationCompleted);
            }
            this.InvokeAsync("ONLINE_DEPARTMENTWISEABSTRACT", new object[] {
                        YEAR,
                        USERID,
                        PASSWORD}, this.ONLINE_DEPARTMENTWISEABSTRACTOperationCompleted, userState);
        }
        
        private void OnONLINE_DEPARTMENTWISEABSTRACTOperationCompleted(object arg) {
            if ((this.ONLINE_DEPARTMENTWISEABSTRACTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ONLINE_DEPARTMENTWISEABSTRACTCompleted(this, new ONLINE_DEPARTMENTWISEABSTRACTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ONLINE_DEPARTMENTWISEDETAILS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ONLINE_DEPARTMENTWISEDETAILS(int YEAR, int DEPTID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("ONLINE_DEPARTMENTWISEDETAILS", new object[] {
                        YEAR,
                        DEPTID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ONLINE_DEPARTMENTWISEDETAILSAsync(int YEAR, int DEPTID, string USERID, string PASSWORD) {
            this.ONLINE_DEPARTMENTWISEDETAILSAsync(YEAR, DEPTID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void ONLINE_DEPARTMENTWISEDETAILSAsync(int YEAR, int DEPTID, string USERID, string PASSWORD, object userState) {
            if ((this.ONLINE_DEPARTMENTWISEDETAILSOperationCompleted == null)) {
                this.ONLINE_DEPARTMENTWISEDETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnONLINE_DEPARTMENTWISEDETAILSOperationCompleted);
            }
            this.InvokeAsync("ONLINE_DEPARTMENTWISEDETAILS", new object[] {
                        YEAR,
                        DEPTID,
                        USERID,
                        PASSWORD}, this.ONLINE_DEPARTMENTWISEDETAILSOperationCompleted, userState);
        }
        
        private void OnONLINE_DEPARTMENTWISEDETAILSOperationCompleted(object arg) {
            if ((this.ONLINE_DEPARTMENTWISEDETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ONLINE_DEPARTMENTWISEDETAILSCompleted(this, new ONLINE_DEPARTMENTWISEDETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ONLINE_NEWDEPARTMENTWISEABSTRACT", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ONLINE_NEWDEPARTMENTWISEABSTRACT(int YEAR, string USERID, string PASSWORD) {
            object[] results = this.Invoke("ONLINE_NEWDEPARTMENTWISEABSTRACT", new object[] {
                        YEAR,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ONLINE_NEWDEPARTMENTWISEABSTRACTAsync(int YEAR, string USERID, string PASSWORD) {
            this.ONLINE_NEWDEPARTMENTWISEABSTRACTAsync(YEAR, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void ONLINE_NEWDEPARTMENTWISEABSTRACTAsync(int YEAR, string USERID, string PASSWORD, object userState) {
            if ((this.ONLINE_NEWDEPARTMENTWISEABSTRACTOperationCompleted == null)) {
                this.ONLINE_NEWDEPARTMENTWISEABSTRACTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnONLINE_NEWDEPARTMENTWISEABSTRACTOperationCompleted);
            }
            this.InvokeAsync("ONLINE_NEWDEPARTMENTWISEABSTRACT", new object[] {
                        YEAR,
                        USERID,
                        PASSWORD}, this.ONLINE_NEWDEPARTMENTWISEABSTRACTOperationCompleted, userState);
        }
        
        private void OnONLINE_NEWDEPARTMENTWISEABSTRACTOperationCompleted(object arg) {
            if ((this.ONLINE_NEWDEPARTMENTWISEABSTRACTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ONLINE_NEWDEPARTMENTWISEABSTRACTCompleted(this, new ONLINE_NEWDEPARTMENTWISEABSTRACTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ONLINE_NEWDEPARTMENTWISEDETAILS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ONLINE_NEWDEPARTMENTWISEDETAILS(int YEAR, int DEPTID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("ONLINE_NEWDEPARTMENTWISEDETAILS", new object[] {
                        YEAR,
                        DEPTID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ONLINE_NEWDEPARTMENTWISEDETAILSAsync(int YEAR, int DEPTID, string USERID, string PASSWORD) {
            this.ONLINE_NEWDEPARTMENTWISEDETAILSAsync(YEAR, DEPTID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void ONLINE_NEWDEPARTMENTWISEDETAILSAsync(int YEAR, int DEPTID, string USERID, string PASSWORD, object userState) {
            if ((this.ONLINE_NEWDEPARTMENTWISEDETAILSOperationCompleted == null)) {
                this.ONLINE_NEWDEPARTMENTWISEDETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnONLINE_NEWDEPARTMENTWISEDETAILSOperationCompleted);
            }
            this.InvokeAsync("ONLINE_NEWDEPARTMENTWISEDETAILS", new object[] {
                        YEAR,
                        DEPTID,
                        USERID,
                        PASSWORD}, this.ONLINE_NEWDEPARTMENTWISEDETAILSOperationCompleted, userState);
        }
        
        private void OnONLINE_NEWDEPARTMENTWISEDETAILSOperationCompleted(object arg) {
            if ((this.ONLINE_NEWDEPARTMENTWISEDETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ONLINE_NEWDEPARTMENTWISEDETAILSCompleted(this, new ONLINE_NEWDEPARTMENTWISEDETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/DEPARTMENTWISEDETAILS_LEVEL2", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DEPARTMENTWISEDETAILS_LEVEL2(string DEPTID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("DEPARTMENTWISEDETAILS_LEVEL2", new object[] {
                        DEPTID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DEPARTMENTWISEDETAILS_LEVEL2Async(string DEPTID, string USERID, string PASSWORD) {
            this.DEPARTMENTWISEDETAILS_LEVEL2Async(DEPTID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void DEPARTMENTWISEDETAILS_LEVEL2Async(string DEPTID, string USERID, string PASSWORD, object userState) {
            if ((this.DEPARTMENTWISEDETAILS_LEVEL2OperationCompleted == null)) {
                this.DEPARTMENTWISEDETAILS_LEVEL2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDEPARTMENTWISEDETAILS_LEVEL2OperationCompleted);
            }
            this.InvokeAsync("DEPARTMENTWISEDETAILS_LEVEL2", new object[] {
                        DEPTID,
                        USERID,
                        PASSWORD}, this.DEPARTMENTWISEDETAILS_LEVEL2OperationCompleted, userState);
        }
        
        private void OnDEPARTMENTWISEDETAILS_LEVEL2OperationCompleted(object arg) {
            if ((this.DEPARTMENTWISEDETAILS_LEVEL2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DEPARTMENTWISEDETAILS_LEVEL2Completed(this, new DEPARTMENTWISEDETAILS_LEVEL2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/DEPARTMENTWISEDETAILS_LEVEL3", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DEPARTMENTWISEDETAILS_LEVEL3(string DISTID, string DEPTID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("DEPARTMENTWISEDETAILS_LEVEL3", new object[] {
                        DISTID,
                        DEPTID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DEPARTMENTWISEDETAILS_LEVEL3Async(string DISTID, string DEPTID, string USERID, string PASSWORD) {
            this.DEPARTMENTWISEDETAILS_LEVEL3Async(DISTID, DEPTID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void DEPARTMENTWISEDETAILS_LEVEL3Async(string DISTID, string DEPTID, string USERID, string PASSWORD, object userState) {
            if ((this.DEPARTMENTWISEDETAILS_LEVEL3OperationCompleted == null)) {
                this.DEPARTMENTWISEDETAILS_LEVEL3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDEPARTMENTWISEDETAILS_LEVEL3OperationCompleted);
            }
            this.InvokeAsync("DEPARTMENTWISEDETAILS_LEVEL3", new object[] {
                        DISTID,
                        DEPTID,
                        USERID,
                        PASSWORD}, this.DEPARTMENTWISEDETAILS_LEVEL3OperationCompleted, userState);
        }
        
        private void OnDEPARTMENTWISEDETAILS_LEVEL3OperationCompleted(object arg) {
            if ((this.DEPARTMENTWISEDETAILS_LEVEL3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DEPARTMENTWISEDETAILS_LEVEL3Completed(this, new DEPARTMENTWISEDETAILS_LEVEL3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SERVICEWISEDETAILS_LEVEL2", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SERVICEWISEDETAILS_LEVEL2(string DEPTID, string SERVICEID, string SERVICETYPEID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("SERVICEWISEDETAILS_LEVEL2", new object[] {
                        DEPTID,
                        SERVICEID,
                        SERVICETYPEID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SERVICEWISEDETAILS_LEVEL2Async(string DEPTID, string SERVICEID, string SERVICETYPEID, string USERID, string PASSWORD) {
            this.SERVICEWISEDETAILS_LEVEL2Async(DEPTID, SERVICEID, SERVICETYPEID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void SERVICEWISEDETAILS_LEVEL2Async(string DEPTID, string SERVICEID, string SERVICETYPEID, string USERID, string PASSWORD, object userState) {
            if ((this.SERVICEWISEDETAILS_LEVEL2OperationCompleted == null)) {
                this.SERVICEWISEDETAILS_LEVEL2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSERVICEWISEDETAILS_LEVEL2OperationCompleted);
            }
            this.InvokeAsync("SERVICEWISEDETAILS_LEVEL2", new object[] {
                        DEPTID,
                        SERVICEID,
                        SERVICETYPEID,
                        USERID,
                        PASSWORD}, this.SERVICEWISEDETAILS_LEVEL2OperationCompleted, userState);
        }
        
        private void OnSERVICEWISEDETAILS_LEVEL2OperationCompleted(object arg) {
            if ((this.SERVICEWISEDETAILS_LEVEL2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SERVICEWISEDETAILS_LEVEL2Completed(this, new SERVICEWISEDETAILS_LEVEL2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/DISTRICTWISEDETAILS_LEVEL2", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DISTRICTWISEDETAILS_LEVEL2(string DISTID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("DISTRICTWISEDETAILS_LEVEL2", new object[] {
                        DISTID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DISTRICTWISEDETAILS_LEVEL2Async(string DISTID, string USERID, string PASSWORD) {
            this.DISTRICTWISEDETAILS_LEVEL2Async(DISTID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void DISTRICTWISEDETAILS_LEVEL2Async(string DISTID, string USERID, string PASSWORD, object userState) {
            if ((this.DISTRICTWISEDETAILS_LEVEL2OperationCompleted == null)) {
                this.DISTRICTWISEDETAILS_LEVEL2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDISTRICTWISEDETAILS_LEVEL2OperationCompleted);
            }
            this.InvokeAsync("DISTRICTWISEDETAILS_LEVEL2", new object[] {
                        DISTID,
                        USERID,
                        PASSWORD}, this.DISTRICTWISEDETAILS_LEVEL2OperationCompleted, userState);
        }
        
        private void OnDISTRICTWISEDETAILS_LEVEL2OperationCompleted(object arg) {
            if ((this.DISTRICTWISEDETAILS_LEVEL2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DISTRICTWISEDETAILS_LEVEL2Completed(this, new DISTRICTWISEDETAILS_LEVEL2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/DISTRICTWISEDETAILS_LEVEL3", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DISTRICTWISEDETAILS_LEVEL3(string DISTID, string DEPTID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("DISTRICTWISEDETAILS_LEVEL3", new object[] {
                        DISTID,
                        DEPTID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DISTRICTWISEDETAILS_LEVEL3Async(string DISTID, string DEPTID, string USERID, string PASSWORD) {
            this.DISTRICTWISEDETAILS_LEVEL3Async(DISTID, DEPTID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void DISTRICTWISEDETAILS_LEVEL3Async(string DISTID, string DEPTID, string USERID, string PASSWORD, object userState) {
            if ((this.DISTRICTWISEDETAILS_LEVEL3OperationCompleted == null)) {
                this.DISTRICTWISEDETAILS_LEVEL3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDISTRICTWISEDETAILS_LEVEL3OperationCompleted);
            }
            this.InvokeAsync("DISTRICTWISEDETAILS_LEVEL3", new object[] {
                        DISTID,
                        DEPTID,
                        USERID,
                        PASSWORD}, this.DISTRICTWISEDETAILS_LEVEL3OperationCompleted, userState);
        }
        
        private void OnDISTRICTWISEDETAILS_LEVEL3OperationCompleted(object arg) {
            if ((this.DISTRICTWISEDETAILS_LEVEL3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DISTRICTWISEDETAILS_LEVEL3Completed(this, new DISTRICTWISEDETAILS_LEVEL3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/OFFICERWISEDETAILS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OFFICERWISEDETAILS(string DISTID, string DEPTID, string SERVICEID, string SERVICETYPEID, string USERID, string PASSWORD) {
            object[] results = this.Invoke("OFFICERWISEDETAILS", new object[] {
                        DISTID,
                        DEPTID,
                        SERVICEID,
                        SERVICETYPEID,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OFFICERWISEDETAILSAsync(string DISTID, string DEPTID, string SERVICEID, string SERVICETYPEID, string USERID, string PASSWORD) {
            this.OFFICERWISEDETAILSAsync(DISTID, DEPTID, SERVICEID, SERVICETYPEID, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void OFFICERWISEDETAILSAsync(string DISTID, string DEPTID, string SERVICEID, string SERVICETYPEID, string USERID, string PASSWORD, object userState) {
            if ((this.OFFICERWISEDETAILSOperationCompleted == null)) {
                this.OFFICERWISEDETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOFFICERWISEDETAILSOperationCompleted);
            }
            this.InvokeAsync("OFFICERWISEDETAILS", new object[] {
                        DISTID,
                        DEPTID,
                        SERVICEID,
                        SERVICETYPEID,
                        USERID,
                        PASSWORD}, this.OFFICERWISEDETAILSOperationCompleted, userState);
        }
        
        private void OnOFFICERWISEDETAILSOperationCompleted(object arg) {
            if ((this.OFFICERWISEDETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OFFICERWISEDETAILSCompleted(this, new OFFICERWISEDETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetCatAandCatBdata", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCatAandCatBdata(string USERID, string PASSWORD) {
            object[] results = this.Invoke("GetCatAandCatBdata", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCatAandCatBdataAsync(string USERID, string PASSWORD) {
            this.GetCatAandCatBdataAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GetCatAandCatBdataAsync(string USERID, string PASSWORD, object userState) {
            if ((this.GetCatAandCatBdataOperationCompleted == null)) {
                this.GetCatAandCatBdataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatAandCatBdataOperationCompleted);
            }
            this.InvokeAsync("GetCatAandCatBdata", new object[] {
                        USERID,
                        PASSWORD}, this.GetCatAandCatBdataOperationCompleted, userState);
        }
        
        private void OnGetCatAandCatBdataOperationCompleted(object arg) {
            if ((this.GetCatAandCatBdataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatAandCatBdataCompleted(this, new GetCatAandCatBdataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GETMINERALCONCESSIONAPPLICATIONS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GETMINERALCONCESSIONAPPLICATIONS(string FROMDATE, string TODATE, string USERID, string PASSWORD) {
            object[] results = this.Invoke("GETMINERALCONCESSIONAPPLICATIONS", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GETMINERALCONCESSIONAPPLICATIONSAsync(string FROMDATE, string TODATE, string USERID, string PASSWORD) {
            this.GETMINERALCONCESSIONAPPLICATIONSAsync(FROMDATE, TODATE, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GETMINERALCONCESSIONAPPLICATIONSAsync(string FROMDATE, string TODATE, string USERID, string PASSWORD, object userState) {
            if ((this.GETMINERALCONCESSIONAPPLICATIONSOperationCompleted == null)) {
                this.GETMINERALCONCESSIONAPPLICATIONSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETMINERALCONCESSIONAPPLICATIONSOperationCompleted);
            }
            this.InvokeAsync("GETMINERALCONCESSIONAPPLICATIONS", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD}, this.GETMINERALCONCESSIONAPPLICATIONSOperationCompleted, userState);
        }
        
        private void OnGETMINERALCONCESSIONAPPLICATIONSOperationCompleted(object arg) {
            if ((this.GETMINERALCONCESSIONAPPLICATIONSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETMINERALCONCESSIONAPPLICATIONSCompleted(this, new GETMINERALCONCESSIONAPPLICATIONSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetRejectionStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRejectionStatus(string DATE, string USERID, string PASSWORD) {
            object[] results = this.Invoke("GetRejectionStatus", new object[] {
                        DATE,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRejectionStatusAsync(string DATE, string USERID, string PASSWORD) {
            this.GetRejectionStatusAsync(DATE, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GetRejectionStatusAsync(string DATE, string USERID, string PASSWORD, object userState) {
            if ((this.GetRejectionStatusOperationCompleted == null)) {
                this.GetRejectionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRejectionStatusOperationCompleted);
            }
            this.InvokeAsync("GetRejectionStatus", new object[] {
                        DATE,
                        USERID,
                        PASSWORD}, this.GetRejectionStatusOperationCompleted, userState);
        }
        
        private void OnGetRejectionStatusOperationCompleted(object arg) {
            if ((this.GetRejectionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRejectionStatusCompleted(this, new GetRejectionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/Get_CasteCodeByApplicationNumber", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Get_CasteCodeByApplicationNumber(string ApplicationNo, string UserId, string Password) {
            object[] results = this.Invoke("Get_CasteCodeByApplicationNumber", new object[] {
                        ApplicationNo,
                        UserId,
                        Password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CasteCodeByApplicationNumberAsync(string ApplicationNo, string UserId, string Password) {
            this.Get_CasteCodeByApplicationNumberAsync(ApplicationNo, UserId, Password, null);
        }
        
        /// <remarks/>
        public void Get_CasteCodeByApplicationNumberAsync(string ApplicationNo, string UserId, string Password, object userState) {
            if ((this.Get_CasteCodeByApplicationNumberOperationCompleted == null)) {
                this.Get_CasteCodeByApplicationNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CasteCodeByApplicationNumberOperationCompleted);
            }
            this.InvokeAsync("Get_CasteCodeByApplicationNumber", new object[] {
                        ApplicationNo,
                        UserId,
                        Password}, this.Get_CasteCodeByApplicationNumberOperationCompleted, userState);
        }
        
        private void OnGet_CasteCodeByApplicationNumberOperationCompleted(object arg) {
            if ((this.Get_CasteCodeByApplicationNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CasteCodeByApplicationNumberCompleted(this, new Get_CasteCodeByApplicationNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/CORE_DETAILS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CORE_DETAILS(int TYPE, string USERID, string PASSWORD) {
            object[] results = this.Invoke("CORE_DETAILS", new object[] {
                        TYPE,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CORE_DETAILSAsync(int TYPE, string USERID, string PASSWORD) {
            this.CORE_DETAILSAsync(TYPE, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void CORE_DETAILSAsync(int TYPE, string USERID, string PASSWORD, object userState) {
            if ((this.CORE_DETAILSOperationCompleted == null)) {
                this.CORE_DETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCORE_DETAILSOperationCompleted);
            }
            this.InvokeAsync("CORE_DETAILS", new object[] {
                        TYPE,
                        USERID,
                        PASSWORD}, this.CORE_DETAILSOperationCompleted, userState);
        }
        
        private void OnCORE_DETAILSOperationCompleted(object arg) {
            if ((this.CORE_DETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CORE_DETAILSCompleted(this, new CORE_DETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GET_FMTRACTORS_DISTRICTWISECOUNT", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GET_FMTRACTORS_DISTRICTWISECOUNT(string USERID, string PASSWORD) {
            object[] results = this.Invoke("GET_FMTRACTORS_DISTRICTWISECOUNT", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GET_FMTRACTORS_DISTRICTWISECOUNTAsync(string USERID, string PASSWORD) {
            this.GET_FMTRACTORS_DISTRICTWISECOUNTAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GET_FMTRACTORS_DISTRICTWISECOUNTAsync(string USERID, string PASSWORD, object userState) {
            if ((this.GET_FMTRACTORS_DISTRICTWISECOUNTOperationCompleted == null)) {
                this.GET_FMTRACTORS_DISTRICTWISECOUNTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_FMTRACTORS_DISTRICTWISECOUNTOperationCompleted);
            }
            this.InvokeAsync("GET_FMTRACTORS_DISTRICTWISECOUNT", new object[] {
                        USERID,
                        PASSWORD}, this.GET_FMTRACTORS_DISTRICTWISECOUNTOperationCompleted, userState);
        }
        
        private void OnGET_FMTRACTORS_DISTRICTWISECOUNTOperationCompleted(object arg) {
            if ((this.GET_FMTRACTORS_DISTRICTWISECOUNTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_FMTRACTORS_DISTRICTWISECOUNTCompleted(this, new GET_FMTRACTORS_DISTRICTWISECOUNTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GET_FMTRACTORS_MANDALWISECOUNT", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GET_FMTRACTORS_MANDALWISECOUNT(string USERID, string PASSWORD, string DistID) {
            object[] results = this.Invoke("GET_FMTRACTORS_MANDALWISECOUNT", new object[] {
                        USERID,
                        PASSWORD,
                        DistID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GET_FMTRACTORS_MANDALWISECOUNTAsync(string USERID, string PASSWORD, string DistID) {
            this.GET_FMTRACTORS_MANDALWISECOUNTAsync(USERID, PASSWORD, DistID, null);
        }
        
        /// <remarks/>
        public void GET_FMTRACTORS_MANDALWISECOUNTAsync(string USERID, string PASSWORD, string DistID, object userState) {
            if ((this.GET_FMTRACTORS_MANDALWISECOUNTOperationCompleted == null)) {
                this.GET_FMTRACTORS_MANDALWISECOUNTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_FMTRACTORS_MANDALWISECOUNTOperationCompleted);
            }
            this.InvokeAsync("GET_FMTRACTORS_MANDALWISECOUNT", new object[] {
                        USERID,
                        PASSWORD,
                        DistID}, this.GET_FMTRACTORS_MANDALWISECOUNTOperationCompleted, userState);
        }
        
        private void OnGET_FMTRACTORS_MANDALWISECOUNTOperationCompleted(object arg) {
            if ((this.GET_FMTRACTORS_MANDALWISECOUNTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_FMTRACTORS_MANDALWISECOUNTCompleted(this, new GET_FMTRACTORS_MANDALWISECOUNTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GET_FMTRACTORS_VILLAGEWISECOUNT", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GET_FMTRACTORS_VILLAGEWISECOUNT(string USERID, string PASSWORD, string DistID, string MandalID) {
            object[] results = this.Invoke("GET_FMTRACTORS_VILLAGEWISECOUNT", new object[] {
                        USERID,
                        PASSWORD,
                        DistID,
                        MandalID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GET_FMTRACTORS_VILLAGEWISECOUNTAsync(string USERID, string PASSWORD, string DistID, string MandalID) {
            this.GET_FMTRACTORS_VILLAGEWISECOUNTAsync(USERID, PASSWORD, DistID, MandalID, null);
        }
        
        /// <remarks/>
        public void GET_FMTRACTORS_VILLAGEWISECOUNTAsync(string USERID, string PASSWORD, string DistID, string MandalID, object userState) {
            if ((this.GET_FMTRACTORS_VILLAGEWISECOUNTOperationCompleted == null)) {
                this.GET_FMTRACTORS_VILLAGEWISECOUNTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGET_FMTRACTORS_VILLAGEWISECOUNTOperationCompleted);
            }
            this.InvokeAsync("GET_FMTRACTORS_VILLAGEWISECOUNT", new object[] {
                        USERID,
                        PASSWORD,
                        DistID,
                        MandalID}, this.GET_FMTRACTORS_VILLAGEWISECOUNTOperationCompleted, userState);
        }
        
        private void OnGET_FMTRACTORS_VILLAGEWISECOUNTOperationCompleted(object arg) {
            if ((this.GET_FMTRACTORS_VILLAGEWISECOUNTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GET_FMTRACTORS_VILLAGEWISECOUNTCompleted(this, new GET_FMTRACTORS_VILLAGEWISECOUNTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GETMEESEVACOUNT", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GETMEESEVACOUNT(string USERID, string PASSWORD) {
            object[] results = this.Invoke("GETMEESEVACOUNT", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GETMEESEVACOUNTAsync(string USERID, string PASSWORD) {
            this.GETMEESEVACOUNTAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void GETMEESEVACOUNTAsync(string USERID, string PASSWORD, object userState) {
            if ((this.GETMEESEVACOUNTOperationCompleted == null)) {
                this.GETMEESEVACOUNTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETMEESEVACOUNTOperationCompleted);
            }
            this.InvokeAsync("GETMEESEVACOUNT", new object[] {
                        USERID,
                        PASSWORD}, this.GETMEESEVACOUNTOperationCompleted, userState);
        }
        
        private void OnGETMEESEVACOUNTOperationCompleted(object arg) {
            if ((this.GETMEESEVACOUNTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETMEESEVACOUNTCompleted(this, new GETMEESEVACOUNTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetServiceWise_ApplicationDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceWise_ApplicationDetails(string ApplicationNo, string ServiceId, string UserId, string Password) {
            object[] results = this.Invoke("GetServiceWise_ApplicationDetails", new object[] {
                        ApplicationNo,
                        ServiceId,
                        UserId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceWise_ApplicationDetailsAsync(string ApplicationNo, string ServiceId, string UserId, string Password) {
            this.GetServiceWise_ApplicationDetailsAsync(ApplicationNo, ServiceId, UserId, Password, null);
        }
        
        /// <remarks/>
        public void GetServiceWise_ApplicationDetailsAsync(string ApplicationNo, string ServiceId, string UserId, string Password, object userState) {
            if ((this.GetServiceWise_ApplicationDetailsOperationCompleted == null)) {
                this.GetServiceWise_ApplicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceWise_ApplicationDetailsOperationCompleted);
            }
            this.InvokeAsync("GetServiceWise_ApplicationDetails", new object[] {
                        ApplicationNo,
                        ServiceId,
                        UserId,
                        Password}, this.GetServiceWise_ApplicationDetailsOperationCompleted, userState);
        }
        
        private void OnGetServiceWise_ApplicationDetailsOperationCompleted(object arg) {
            if ((this.GetServiceWise_ApplicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceWise_ApplicationDetailsCompleted(this, new GetServiceWise_ApplicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/CPK_UPDATEAPPNO", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CPK_UPDATEAPPNO(string CPKAPPNO, string MEEAPPNO, string USERID, string PASSWORD) {
            object[] results = this.Invoke("CPK_UPDATEAPPNO", new object[] {
                        CPKAPPNO,
                        MEEAPPNO,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CPK_UPDATEAPPNOAsync(string CPKAPPNO, string MEEAPPNO, string USERID, string PASSWORD) {
            this.CPK_UPDATEAPPNOAsync(CPKAPPNO, MEEAPPNO, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void CPK_UPDATEAPPNOAsync(string CPKAPPNO, string MEEAPPNO, string USERID, string PASSWORD, object userState) {
            if ((this.CPK_UPDATEAPPNOOperationCompleted == null)) {
                this.CPK_UPDATEAPPNOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCPK_UPDATEAPPNOOperationCompleted);
            }
            this.InvokeAsync("CPK_UPDATEAPPNO", new object[] {
                        CPKAPPNO,
                        MEEAPPNO,
                        USERID,
                        PASSWORD}, this.CPK_UPDATEAPPNOOperationCompleted, userState);
        }
        
        private void OnCPK_UPDATEAPPNOOperationCompleted(object arg) {
            if ((this.CPK_UPDATEAPPNOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CPK_UPDATEAPPNOCompleted(this, new CPK_UPDATEAPPNOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GETAPPROVEDAPPLICATIONPDF", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GETAPPROVEDAPPLICATIONPDF(string ApplicationNo, string userid, string password) {
            object[] results = this.Invoke("GETAPPROVEDAPPLICATIONPDF", new object[] {
                        ApplicationNo,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GETAPPROVEDAPPLICATIONPDFAsync(string ApplicationNo, string userid, string password) {
            this.GETAPPROVEDAPPLICATIONPDFAsync(ApplicationNo, userid, password, null);
        }
        
        /// <remarks/>
        public void GETAPPROVEDAPPLICATIONPDFAsync(string ApplicationNo, string userid, string password, object userState) {
            if ((this.GETAPPROVEDAPPLICATIONPDFOperationCompleted == null)) {
                this.GETAPPROVEDAPPLICATIONPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETAPPROVEDAPPLICATIONPDFOperationCompleted);
            }
            this.InvokeAsync("GETAPPROVEDAPPLICATIONPDF", new object[] {
                        ApplicationNo,
                        userid,
                        password}, this.GETAPPROVEDAPPLICATIONPDFOperationCompleted, userState);
        }
        
        private void OnGETAPPROVEDAPPLICATIONPDFOperationCompleted(object arg) {
            if ((this.GETAPPROVEDAPPLICATIONPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETAPPROVEDAPPLICATIONPDFCompleted(this, new GETAPPROVEDAPPLICATIONPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SadaBainama_StatusUpdateDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SadaBainama_StatusUpdateDetails(string ApplicationNo, string Status, string Remarks, string UserId, string Password) {
            object[] results = this.Invoke("SadaBainama_StatusUpdateDetails", new object[] {
                        ApplicationNo,
                        Status,
                        Remarks,
                        UserId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SadaBainama_StatusUpdateDetailsAsync(string ApplicationNo, string Status, string Remarks, string UserId, string Password) {
            this.SadaBainama_StatusUpdateDetailsAsync(ApplicationNo, Status, Remarks, UserId, Password, null);
        }
        
        /// <remarks/>
        public void SadaBainama_StatusUpdateDetailsAsync(string ApplicationNo, string Status, string Remarks, string UserId, string Password, object userState) {
            if ((this.SadaBainama_StatusUpdateDetailsOperationCompleted == null)) {
                this.SadaBainama_StatusUpdateDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSadaBainama_StatusUpdateDetailsOperationCompleted);
            }
            this.InvokeAsync("SadaBainama_StatusUpdateDetails", new object[] {
                        ApplicationNo,
                        Status,
                        Remarks,
                        UserId,
                        Password}, this.SadaBainama_StatusUpdateDetailsOperationCompleted, userState);
        }
        
        private void OnSadaBainama_StatusUpdateDetailsOperationCompleted(object arg) {
            if ((this.SadaBainama_StatusUpdateDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SadaBainama_StatusUpdateDetailsCompleted(this, new SadaBainama_StatusUpdateDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SadaBainama_Get_SLAMonitoringDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SadaBainama_Get_SLAMonitoringDetails(string FromDate, string ToDate, string UserId, string Password) {
            object[] results = this.Invoke("SadaBainama_Get_SLAMonitoringDetails", new object[] {
                        FromDate,
                        ToDate,
                        UserId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SadaBainama_Get_SLAMonitoringDetailsAsync(string FromDate, string ToDate, string UserId, string Password) {
            this.SadaBainama_Get_SLAMonitoringDetailsAsync(FromDate, ToDate, UserId, Password, null);
        }
        
        /// <remarks/>
        public void SadaBainama_Get_SLAMonitoringDetailsAsync(string FromDate, string ToDate, string UserId, string Password, object userState) {
            if ((this.SadaBainama_Get_SLAMonitoringDetailsOperationCompleted == null)) {
                this.SadaBainama_Get_SLAMonitoringDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSadaBainama_Get_SLAMonitoringDetailsOperationCompleted);
            }
            this.InvokeAsync("SadaBainama_Get_SLAMonitoringDetails", new object[] {
                        FromDate,
                        ToDate,
                        UserId,
                        Password}, this.SadaBainama_Get_SLAMonitoringDetailsOperationCompleted, userState);
        }
        
        private void OnSadaBainama_Get_SLAMonitoringDetailsOperationCompleted(object arg) {
            if ((this.SadaBainama_Get_SLAMonitoringDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SadaBainama_Get_SLAMonitoringDetailsCompleted(this, new SadaBainama_Get_SLAMonitoringDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/VCDetails_ServiceList22A", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VCDetails_ServiceList22A(string VCDate, string UserId, string Password) {
            object[] results = this.Invoke("VCDetails_ServiceList22A", new object[] {
                        VCDate,
                        UserId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VCDetails_ServiceList22AAsync(string VCDate, string UserId, string Password) {
            this.VCDetails_ServiceList22AAsync(VCDate, UserId, Password, null);
        }
        
        /// <remarks/>
        public void VCDetails_ServiceList22AAsync(string VCDate, string UserId, string Password, object userState) {
            if ((this.VCDetails_ServiceList22AOperationCompleted == null)) {
                this.VCDetails_ServiceList22AOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVCDetails_ServiceList22AOperationCompleted);
            }
            this.InvokeAsync("VCDetails_ServiceList22A", new object[] {
                        VCDate,
                        UserId,
                        Password}, this.VCDetails_ServiceList22AOperationCompleted, userState);
        }
        
        private void OnVCDetails_ServiceList22AOperationCompleted(object arg) {
            if ((this.VCDetails_ServiceList22ACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VCDetails_ServiceList22ACompleted(this, new VCDetails_ServiceList22ACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/VCDetails_DottedLands", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VCDetails_DottedLands(string VCDate, string UserId, string Password) {
            object[] results = this.Invoke("VCDetails_DottedLands", new object[] {
                        VCDate,
                        UserId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VCDetails_DottedLandsAsync(string VCDate, string UserId, string Password) {
            this.VCDetails_DottedLandsAsync(VCDate, UserId, Password, null);
        }
        
        /// <remarks/>
        public void VCDetails_DottedLandsAsync(string VCDate, string UserId, string Password, object userState) {
            if ((this.VCDetails_DottedLandsOperationCompleted == null)) {
                this.VCDetails_DottedLandsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVCDetails_DottedLandsOperationCompleted);
            }
            this.InvokeAsync("VCDetails_DottedLands", new object[] {
                        VCDate,
                        UserId,
                        Password}, this.VCDetails_DottedLandsOperationCompleted, userState);
        }
        
        private void OnVCDetails_DottedLandsOperationCompleted(object arg) {
            if ((this.VCDetails_DottedLandsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VCDetails_DottedLandsCompleted(this, new VCDetails_DottedLandsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ServiceList22A_ApprovedListDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ServiceList22A_ApprovedListDetails(string District, string UserId, string Password) {
            object[] results = this.Invoke("ServiceList22A_ApprovedListDetails", new object[] {
                        District,
                        UserId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceList22A_ApprovedListDetailsAsync(string District, string UserId, string Password) {
            this.ServiceList22A_ApprovedListDetailsAsync(District, UserId, Password, null);
        }
        
        /// <remarks/>
        public void ServiceList22A_ApprovedListDetailsAsync(string District, string UserId, string Password, object userState) {
            if ((this.ServiceList22A_ApprovedListDetailsOperationCompleted == null)) {
                this.ServiceList22A_ApprovedListDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceList22A_ApprovedListDetailsOperationCompleted);
            }
            this.InvokeAsync("ServiceList22A_ApprovedListDetails", new object[] {
                        District,
                        UserId,
                        Password}, this.ServiceList22A_ApprovedListDetailsOperationCompleted, userState);
        }
        
        private void OnServiceList22A_ApprovedListDetailsOperationCompleted(object arg) {
            if ((this.ServiceList22A_ApprovedListDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceList22A_ApprovedListDetailsCompleted(this, new ServiceList22A_ApprovedListDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/PattaSubDivision_Get_SLAMonitoringDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PattaSubDivision_Get_SLAMonitoringDetails(string FromDate, string ToDate, string DistID, string UserId, string Password) {
            object[] results = this.Invoke("PattaSubDivision_Get_SLAMonitoringDetails", new object[] {
                        FromDate,
                        ToDate,
                        DistID,
                        UserId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PattaSubDivision_Get_SLAMonitoringDetailsAsync(string FromDate, string ToDate, string DistID, string UserId, string Password) {
            this.PattaSubDivision_Get_SLAMonitoringDetailsAsync(FromDate, ToDate, DistID, UserId, Password, null);
        }
        
        /// <remarks/>
        public void PattaSubDivision_Get_SLAMonitoringDetailsAsync(string FromDate, string ToDate, string DistID, string UserId, string Password, object userState) {
            if ((this.PattaSubDivision_Get_SLAMonitoringDetailsOperationCompleted == null)) {
                this.PattaSubDivision_Get_SLAMonitoringDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPattaSubDivision_Get_SLAMonitoringDetailsOperationCompleted);
            }
            this.InvokeAsync("PattaSubDivision_Get_SLAMonitoringDetails", new object[] {
                        FromDate,
                        ToDate,
                        DistID,
                        UserId,
                        Password}, this.PattaSubDivision_Get_SLAMonitoringDetailsOperationCompleted, userState);
        }
        
        private void OnPattaSubDivision_Get_SLAMonitoringDetailsOperationCompleted(object arg) {
            if ((this.PattaSubDivision_Get_SLAMonitoringDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PattaSubDivision_Get_SLAMonitoringDetailsCompleted(this, new PattaSubDivision_Get_SLAMonitoringDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/FlineserviceNewDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FlineserviceNewDetails(string FromDate, string ToDate, string vcdate, string UserId, string Password) {
            object[] results = this.Invoke("FlineserviceNewDetails", new object[] {
                        FromDate,
                        ToDate,
                        vcdate,
                        UserId,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FlineserviceNewDetailsAsync(string FromDate, string ToDate, string vcdate, string UserId, string Password) {
            this.FlineserviceNewDetailsAsync(FromDate, ToDate, vcdate, UserId, Password, null);
        }
        
        /// <remarks/>
        public void FlineserviceNewDetailsAsync(string FromDate, string ToDate, string vcdate, string UserId, string Password, object userState) {
            if ((this.FlineserviceNewDetailsOperationCompleted == null)) {
                this.FlineserviceNewDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFlineserviceNewDetailsOperationCompleted);
            }
            this.InvokeAsync("FlineserviceNewDetails", new object[] {
                        FromDate,
                        ToDate,
                        vcdate,
                        UserId,
                        Password}, this.FlineserviceNewDetailsOperationCompleted, userState);
        }
        
        private void OnFlineserviceNewDetailsOperationCompleted(object arg) {
            if ((this.FlineserviceNewDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FlineserviceNewDetailsCompleted(this, new FlineserviceNewDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GETAPPROVEDAPPLICATIONPDF_TEST", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GETAPPROVEDAPPLICATIONPDF_TEST(string ApplicationNo, string userid, string password) {
            object[] results = this.Invoke("GETAPPROVEDAPPLICATIONPDF_TEST", new object[] {
                        ApplicationNo,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GETAPPROVEDAPPLICATIONPDF_TESTAsync(string ApplicationNo, string userid, string password) {
            this.GETAPPROVEDAPPLICATIONPDF_TESTAsync(ApplicationNo, userid, password, null);
        }
        
        /// <remarks/>
        public void GETAPPROVEDAPPLICATIONPDF_TESTAsync(string ApplicationNo, string userid, string password, object userState) {
            if ((this.GETAPPROVEDAPPLICATIONPDF_TESTOperationCompleted == null)) {
                this.GETAPPROVEDAPPLICATIONPDF_TESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGETAPPROVEDAPPLICATIONPDF_TESTOperationCompleted);
            }
            this.InvokeAsync("GETAPPROVEDAPPLICATIONPDF_TEST", new object[] {
                        ApplicationNo,
                        userid,
                        password}, this.GETAPPROVEDAPPLICATIONPDF_TESTOperationCompleted, userState);
        }
        
        private void OnGETAPPROVEDAPPLICATIONPDF_TESTOperationCompleted(object arg) {
            if ((this.GETAPPROVEDAPPLICATIONPDF_TESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GETAPPROVEDAPPLICATIONPDF_TESTCompleted(this, new GETAPPROVEDAPPLICATIONPDF_TESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetDDRApplicationDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDDRApplicationDetails(string fromdate, string todate, string userid, string password) {
            object[] results = this.Invoke("GetDDRApplicationDetails", new object[] {
                        fromdate,
                        todate,
                        userid,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDDRApplicationDetailsAsync(string fromdate, string todate, string userid, string password) {
            this.GetDDRApplicationDetailsAsync(fromdate, todate, userid, password, null);
        }
        
        /// <remarks/>
        public void GetDDRApplicationDetailsAsync(string fromdate, string todate, string userid, string password, object userState) {
            if ((this.GetDDRApplicationDetailsOperationCompleted == null)) {
                this.GetDDRApplicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDDRApplicationDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDDRApplicationDetails", new object[] {
                        fromdate,
                        todate,
                        userid,
                        password}, this.GetDDRApplicationDetailsOperationCompleted, userState);
        }
        
        private void OnGetDDRApplicationDetailsOperationCompleted(object arg) {
            if ((this.GetDDRApplicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDDRApplicationDetailsCompleted(this, new GetDDRApplicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetDDRApplicationDetailsJSON", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDDRApplicationDetailsJSON(string fromdate, string todate, string userid, string password) {
            object[] results = this.Invoke("GetDDRApplicationDetailsJSON", new object[] {
                        fromdate,
                        todate,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDDRApplicationDetailsJSONAsync(string fromdate, string todate, string userid, string password) {
            this.GetDDRApplicationDetailsJSONAsync(fromdate, todate, userid, password, null);
        }
        
        /// <remarks/>
        public void GetDDRApplicationDetailsJSONAsync(string fromdate, string todate, string userid, string password, object userState) {
            if ((this.GetDDRApplicationDetailsJSONOperationCompleted == null)) {
                this.GetDDRApplicationDetailsJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDDRApplicationDetailsJSONOperationCompleted);
            }
            this.InvokeAsync("GetDDRApplicationDetailsJSON", new object[] {
                        fromdate,
                        todate,
                        userid,
                        password}, this.GetDDRApplicationDetailsJSONOperationCompleted, userState);
        }
        
        private void OnGetDDRApplicationDetailsJSONOperationCompleted(object arg) {
            if ((this.GetDDRApplicationDetailsJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDDRApplicationDetailsJSONCompleted(this, new GetDDRApplicationDetailsJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GVS_CITIZENSERVICESCOUNT", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GVS_CITIZENSERVICESCOUNT(System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            object[] results = this.Invoke("GVS_CITIZENSERVICESCOUNT", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GVS_CITIZENSERVICESCOUNTAsync(System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            this.GVS_CITIZENSERVICESCOUNTAsync(FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void GVS_CITIZENSERVICESCOUNTAsync(System.DateTime FromDate, System.DateTime ToDate, string userid, string password, object userState) {
            if ((this.GVS_CITIZENSERVICESCOUNTOperationCompleted == null)) {
                this.GVS_CITIZENSERVICESCOUNTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGVS_CITIZENSERVICESCOUNTOperationCompleted);
            }
            this.InvokeAsync("GVS_CITIZENSERVICESCOUNT", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.GVS_CITIZENSERVICESCOUNTOperationCompleted, userState);
        }
        
        private void OnGVS_CITIZENSERVICESCOUNTOperationCompleted(object arg) {
            if ((this.GVS_CITIZENSERVICESCOUNTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GVS_CITIZENSERVICESCOUNTCompleted(this, new GVS_CITIZENSERVICESCOUNTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SADAREMTransactionIDDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SADAREMTransactionIDDetails(string ApplicationNo, string userid, string password) {
            object[] results = this.Invoke("SADAREMTransactionIDDetails", new object[] {
                        ApplicationNo,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SADAREMTransactionIDDetailsAsync(string ApplicationNo, string userid, string password) {
            this.SADAREMTransactionIDDetailsAsync(ApplicationNo, userid, password, null);
        }
        
        /// <remarks/>
        public void SADAREMTransactionIDDetailsAsync(string ApplicationNo, string userid, string password, object userState) {
            if ((this.SADAREMTransactionIDDetailsOperationCompleted == null)) {
                this.SADAREMTransactionIDDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSADAREMTransactionIDDetailsOperationCompleted);
            }
            this.InvokeAsync("SADAREMTransactionIDDetails", new object[] {
                        ApplicationNo,
                        userid,
                        password}, this.SADAREMTransactionIDDetailsOperationCompleted, userState);
        }
        
        private void OnSADAREMTransactionIDDetailsOperationCompleted(object arg) {
            if ((this.SADAREMTransactionIDDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SADAREMTransactionIDDetailsCompleted(this, new SADAREMTransactionIDDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/VSWS_GETTOKEN", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VSWS_GETTOKEN(string USERID, string PASSWORD) {
            object[] results = this.Invoke("VSWS_GETTOKEN", new object[] {
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VSWS_GETTOKENAsync(string USERID, string PASSWORD) {
            this.VSWS_GETTOKENAsync(USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void VSWS_GETTOKENAsync(string USERID, string PASSWORD, object userState) {
            if ((this.VSWS_GETTOKENOperationCompleted == null)) {
                this.VSWS_GETTOKENOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVSWS_GETTOKENOperationCompleted);
            }
            this.InvokeAsync("VSWS_GETTOKEN", new object[] {
                        USERID,
                        PASSWORD}, this.VSWS_GETTOKENOperationCompleted, userState);
        }
        
        private void OnVSWS_GETTOKENOperationCompleted(object arg) {
            if ((this.VSWS_GETTOKENCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VSWS_GETTOKENCompleted(this, new VSWS_GETTOKENCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/VSWS_GETAPPDETAILS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VSWS_GETAPPDETAILS(string USERID, string PASSWORD, string TOKENID, string APPNO) {
            object[] results = this.Invoke("VSWS_GETAPPDETAILS", new object[] {
                        USERID,
                        PASSWORD,
                        TOKENID,
                        APPNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VSWS_GETAPPDETAILSAsync(string USERID, string PASSWORD, string TOKENID, string APPNO) {
            this.VSWS_GETAPPDETAILSAsync(USERID, PASSWORD, TOKENID, APPNO, null);
        }
        
        /// <remarks/>
        public void VSWS_GETAPPDETAILSAsync(string USERID, string PASSWORD, string TOKENID, string APPNO, object userState) {
            if ((this.VSWS_GETAPPDETAILSOperationCompleted == null)) {
                this.VSWS_GETAPPDETAILSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVSWS_GETAPPDETAILSOperationCompleted);
            }
            this.InvokeAsync("VSWS_GETAPPDETAILS", new object[] {
                        USERID,
                        PASSWORD,
                        TOKENID,
                        APPNO}, this.VSWS_GETAPPDETAILSOperationCompleted, userState);
        }
        
        private void OnVSWS_GETAPPDETAILSOperationCompleted(object arg) {
            if ((this.VSWS_GETAPPDETAILSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VSWS_GETAPPDETAILSCompleted(this, new VSWS_GETAPPDETAILSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetTDPDetailsByAadhar", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTDPDetailsByAadhar(string UserId, string Password, string AadharNo) {
            object[] results = this.Invoke("GetTDPDetailsByAadhar", new object[] {
                        UserId,
                        Password,
                        AadharNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTDPDetailsByAadharAsync(string UserId, string Password, string AadharNo) {
            this.GetTDPDetailsByAadharAsync(UserId, Password, AadharNo, null);
        }
        
        /// <remarks/>
        public void GetTDPDetailsByAadharAsync(string UserId, string Password, string AadharNo, object userState) {
            if ((this.GetTDPDetailsByAadharOperationCompleted == null)) {
                this.GetTDPDetailsByAadharOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTDPDetailsByAadharOperationCompleted);
            }
            this.InvokeAsync("GetTDPDetailsByAadhar", new object[] {
                        UserId,
                        Password,
                        AadharNo}, this.GetTDPDetailsByAadharOperationCompleted, userState);
        }
        
        private void OnGetTDPDetailsByAadharOperationCompleted(object arg) {
            if ((this.GetTDPDetailsByAadharCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTDPDetailsByAadharCompleted(this, new GetTDPDetailsByAadharCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateApplicationDetails_Prajavani", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateApplicationDetails_Prajavani(string appno, string status, string remarks, string updatedby, string userid, string password) {
            object[] results = this.Invoke("UpdateApplicationDetails_Prajavani", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_PrajavaniAsync(string appno, string status, string remarks, string updatedby, string userid, string password) {
            this.UpdateApplicationDetails_PrajavaniAsync(appno, status, remarks, updatedby, userid, password, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_PrajavaniAsync(string appno, string status, string remarks, string updatedby, string userid, string password, object userState) {
            if ((this.UpdateApplicationDetails_PrajavaniOperationCompleted == null)) {
                this.UpdateApplicationDetails_PrajavaniOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationDetails_PrajavaniOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationDetails_Prajavani", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password}, this.UpdateApplicationDetails_PrajavaniOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationDetails_PrajavaniOperationCompleted(object arg) {
            if ((this.UpdateApplicationDetails_PrajavaniCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationDetails_PrajavaniCompleted(this, new UpdateApplicationDetails_PrajavaniCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateApplicationDetails_UnifiedBirthDeath", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateApplicationDetails_UnifiedBirthDeath(string appno, string status, string remarks, string updatedby, string userid, string password) {
            object[] results = this.Invoke("UpdateApplicationDetails_UnifiedBirthDeath", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_UnifiedBirthDeathAsync(string appno, string status, string remarks, string updatedby, string userid, string password) {
            this.UpdateApplicationDetails_UnifiedBirthDeathAsync(appno, status, remarks, updatedby, userid, password, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_UnifiedBirthDeathAsync(string appno, string status, string remarks, string updatedby, string userid, string password, object userState) {
            if ((this.UpdateApplicationDetails_UnifiedBirthDeathOperationCompleted == null)) {
                this.UpdateApplicationDetails_UnifiedBirthDeathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationDetails_UnifiedBirthDeathOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationDetails_UnifiedBirthDeath", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password}, this.UpdateApplicationDetails_UnifiedBirthDeathOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationDetails_UnifiedBirthDeathOperationCompleted(object arg) {
            if ((this.UpdateApplicationDetails_UnifiedBirthDeathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationDetails_UnifiedBirthDeathCompleted(this, new UpdateApplicationDetails_UnifiedBirthDeathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateApplicationDetails_PattadarPassbook", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateApplicationDetails_PattadarPassbook(string appno, string SerialNo, string KhathaNo, string PPBSerialNo, string status, string MroAddress, string remarks, string updatedby, string userid, string password, string UpdatedDate, string UID) {
            object[] results = this.Invoke("UpdateApplicationDetails_PattadarPassbook", new object[] {
                        appno,
                        SerialNo,
                        KhathaNo,
                        PPBSerialNo,
                        status,
                        MroAddress,
                        remarks,
                        updatedby,
                        userid,
                        password,
                        UpdatedDate,
                        UID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_PattadarPassbookAsync(string appno, string SerialNo, string KhathaNo, string PPBSerialNo, string status, string MroAddress, string remarks, string updatedby, string userid, string password, string UpdatedDate, string UID) {
            this.UpdateApplicationDetails_PattadarPassbookAsync(appno, SerialNo, KhathaNo, PPBSerialNo, status, MroAddress, remarks, updatedby, userid, password, UpdatedDate, UID, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_PattadarPassbookAsync(string appno, string SerialNo, string KhathaNo, string PPBSerialNo, string status, string MroAddress, string remarks, string updatedby, string userid, string password, string UpdatedDate, string UID, object userState) {
            if ((this.UpdateApplicationDetails_PattadarPassbookOperationCompleted == null)) {
                this.UpdateApplicationDetails_PattadarPassbookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationDetails_PattadarPassbookOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationDetails_PattadarPassbook", new object[] {
                        appno,
                        SerialNo,
                        KhathaNo,
                        PPBSerialNo,
                        status,
                        MroAddress,
                        remarks,
                        updatedby,
                        userid,
                        password,
                        UpdatedDate,
                        UID}, this.UpdateApplicationDetails_PattadarPassbookOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationDetails_PattadarPassbookOperationCompleted(object arg) {
            if ((this.UpdateApplicationDetails_PattadarPassbookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationDetails_PattadarPassbookCompleted(this, new UpdateApplicationDetails_PattadarPassbookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateApplicationDetails_TitleDeed", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateApplicationDetails_TitleDeed(string appno, string SerialNo, string KhathaNo, string TDSerialNo, string status, string MroAddress, string remarks, string updatedby, string userid, string password, string UpdatedDate) {
            object[] results = this.Invoke("UpdateApplicationDetails_TitleDeed", new object[] {
                        appno,
                        SerialNo,
                        KhathaNo,
                        TDSerialNo,
                        status,
                        MroAddress,
                        remarks,
                        updatedby,
                        userid,
                        password,
                        UpdatedDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_TitleDeedAsync(string appno, string SerialNo, string KhathaNo, string TDSerialNo, string status, string MroAddress, string remarks, string updatedby, string userid, string password, string UpdatedDate) {
            this.UpdateApplicationDetails_TitleDeedAsync(appno, SerialNo, KhathaNo, TDSerialNo, status, MroAddress, remarks, updatedby, userid, password, UpdatedDate, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_TitleDeedAsync(string appno, string SerialNo, string KhathaNo, string TDSerialNo, string status, string MroAddress, string remarks, string updatedby, string userid, string password, string UpdatedDate, object userState) {
            if ((this.UpdateApplicationDetails_TitleDeedOperationCompleted == null)) {
                this.UpdateApplicationDetails_TitleDeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationDetails_TitleDeedOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationDetails_TitleDeed", new object[] {
                        appno,
                        SerialNo,
                        KhathaNo,
                        TDSerialNo,
                        status,
                        MroAddress,
                        remarks,
                        updatedby,
                        userid,
                        password,
                        UpdatedDate}, this.UpdateApplicationDetails_TitleDeedOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationDetails_TitleDeedOperationCompleted(object arg) {
            if ((this.UpdateApplicationDetails_TitleDeedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationDetails_TitleDeedCompleted(this, new UpdateApplicationDetails_TitleDeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateApplicationDetails_OldAdangal", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateApplicationDetails_OldAdangal(string appno, string status, string remarks, string updatedby, string userid, string password) {
            object[] results = this.Invoke("UpdateApplicationDetails_OldAdangal", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_OldAdangalAsync(string appno, string status, string remarks, string updatedby, string userid, string password) {
            this.UpdateApplicationDetails_OldAdangalAsync(appno, status, remarks, updatedby, userid, password, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_OldAdangalAsync(string appno, string status, string remarks, string updatedby, string userid, string password, object userState) {
            if ((this.UpdateApplicationDetails_OldAdangalOperationCompleted == null)) {
                this.UpdateApplicationDetails_OldAdangalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationDetails_OldAdangalOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationDetails_OldAdangal", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password}, this.UpdateApplicationDetails_OldAdangalOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationDetails_OldAdangalOperationCompleted(object arg) {
            if ((this.UpdateApplicationDetails_OldAdangalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationDetails_OldAdangalCompleted(this, new UpdateApplicationDetails_OldAdangalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SendRevocationDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendRevocationDetails(string districtId, string mandalId, string villageId, string docYear, string docSurveyNo, string docKathaNo, string Remarks, string MROName, string MROUpdatedDate, string userid, string password) {
            object[] results = this.Invoke("SendRevocationDetails", new object[] {
                        districtId,
                        mandalId,
                        villageId,
                        docYear,
                        docSurveyNo,
                        docKathaNo,
                        Remarks,
                        MROName,
                        MROUpdatedDate,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendRevocationDetailsAsync(string districtId, string mandalId, string villageId, string docYear, string docSurveyNo, string docKathaNo, string Remarks, string MROName, string MROUpdatedDate, string userid, string password) {
            this.SendRevocationDetailsAsync(districtId, mandalId, villageId, docYear, docSurveyNo, docKathaNo, Remarks, MROName, MROUpdatedDate, userid, password, null);
        }
        
        /// <remarks/>
        public void SendRevocationDetailsAsync(string districtId, string mandalId, string villageId, string docYear, string docSurveyNo, string docKathaNo, string Remarks, string MROName, string MROUpdatedDate, string userid, string password, object userState) {
            if ((this.SendRevocationDetailsOperationCompleted == null)) {
                this.SendRevocationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRevocationDetailsOperationCompleted);
            }
            this.InvokeAsync("SendRevocationDetails", new object[] {
                        districtId,
                        mandalId,
                        villageId,
                        docYear,
                        docSurveyNo,
                        docKathaNo,
                        Remarks,
                        MROName,
                        MROUpdatedDate,
                        userid,
                        password}, this.SendRevocationDetailsOperationCompleted, userState);
        }
        
        private void OnSendRevocationDetailsOperationCompleted(object arg) {
            if ((this.SendRevocationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRevocationDetailsCompleted(this, new SendRevocationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateApplicationDetails_TSLR", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateApplicationDetails_TSLR(string appno, string status, string remarks, string updatedby, string userid, string password) {
            object[] results = this.Invoke("UpdateApplicationDetails_TSLR", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_TSLRAsync(string appno, string status, string remarks, string updatedby, string userid, string password) {
            this.UpdateApplicationDetails_TSLRAsync(appno, status, remarks, updatedby, userid, password, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_TSLRAsync(string appno, string status, string remarks, string updatedby, string userid, string password, object userState) {
            if ((this.UpdateApplicationDetails_TSLROperationCompleted == null)) {
                this.UpdateApplicationDetails_TSLROperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationDetails_TSLROperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationDetails_TSLR", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password}, this.UpdateApplicationDetails_TSLROperationCompleted, userState);
        }
        
        private void OnUpdateApplicationDetails_TSLROperationCompleted(object arg) {
            if ((this.UpdateApplicationDetails_TSLRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationDetails_TSLRCompleted(this, new UpdateApplicationDetails_TSLRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetTransactionDetailsByServiceID", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransactionDetailsByServiceID(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            object[] results = this.Invoke("GetTransactionDetailsByServiceID", new object[] {
                        ServiceID,
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionDetailsByServiceIDAsync(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            this.GetTransactionDetailsByServiceIDAsync(ServiceID, FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void GetTransactionDetailsByServiceIDAsync(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password, object userState) {
            if ((this.GetTransactionDetailsByServiceIDOperationCompleted == null)) {
                this.GetTransactionDetailsByServiceIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionDetailsByServiceIDOperationCompleted);
            }
            this.InvokeAsync("GetTransactionDetailsByServiceID", new object[] {
                        ServiceID,
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.GetTransactionDetailsByServiceIDOperationCompleted, userState);
        }
        
        private void OnGetTransactionDetailsByServiceIDOperationCompleted(object arg) {
            if ((this.GetTransactionDetailsByServiceIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionDetailsByServiceIDCompleted(this, new GetTransactionDetailsByServiceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetCDMAParvadaTransactionDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCDMAParvadaTransactionDetails(string FromDate, string ToDate, string userid, string password) {
            object[] results = this.Invoke("GetCDMAParvadaTransactionDetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCDMAParvadaTransactionDetailsAsync(string FromDate, string ToDate, string userid, string password) {
            this.GetCDMAParvadaTransactionDetailsAsync(FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void GetCDMAParvadaTransactionDetailsAsync(string FromDate, string ToDate, string userid, string password, object userState) {
            if ((this.GetCDMAParvadaTransactionDetailsOperationCompleted == null)) {
                this.GetCDMAParvadaTransactionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCDMAParvadaTransactionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCDMAParvadaTransactionDetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.GetCDMAParvadaTransactionDetailsOperationCompleted, userState);
        }
        
        private void OnGetCDMAParvadaTransactionDetailsOperationCompleted(object arg) {
            if ((this.GetCDMAParvadaTransactionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCDMAParvadaTransactionDetailsCompleted(this, new GetCDMAParvadaTransactionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetCCPageCount", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCCPageCount(string appno, string userid, string password) {
            object[] results = this.Invoke("GetCCPageCount", new object[] {
                        appno,
                        userid,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCCPageCountAsync(string appno, string userid, string password) {
            this.GetCCPageCountAsync(appno, userid, password, null);
        }
        
        /// <remarks/>
        public void GetCCPageCountAsync(string appno, string userid, string password, object userState) {
            if ((this.GetCCPageCountOperationCompleted == null)) {
                this.GetCCPageCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCCPageCountOperationCompleted);
            }
            this.InvokeAsync("GetCCPageCount", new object[] {
                        appno,
                        userid,
                        password}, this.GetCCPageCountOperationCompleted, userState);
        }
        
        private void OnGetCCPageCountOperationCompleted(object arg) {
            if ((this.GetCCPageCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCCPageCountCompleted(this, new GetCCPageCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetTransactionDetailsByServiceIDDistWise", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransactionDetailsByServiceIDDistWise(string ServiceID, string DistCode, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            object[] results = this.Invoke("GetTransactionDetailsByServiceIDDistWise", new object[] {
                        ServiceID,
                        DistCode,
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionDetailsByServiceIDDistWiseAsync(string ServiceID, string DistCode, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            this.GetTransactionDetailsByServiceIDDistWiseAsync(ServiceID, DistCode, FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void GetTransactionDetailsByServiceIDDistWiseAsync(string ServiceID, string DistCode, System.DateTime FromDate, System.DateTime ToDate, string userid, string password, object userState) {
            if ((this.GetTransactionDetailsByServiceIDDistWiseOperationCompleted == null)) {
                this.GetTransactionDetailsByServiceIDDistWiseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionDetailsByServiceIDDistWiseOperationCompleted);
            }
            this.InvokeAsync("GetTransactionDetailsByServiceIDDistWise", new object[] {
                        ServiceID,
                        DistCode,
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.GetTransactionDetailsByServiceIDDistWiseOperationCompleted, userState);
        }
        
        private void OnGetTransactionDetailsByServiceIDDistWiseOperationCompleted(object arg) {
            if ((this.GetTransactionDetailsByServiceIDDistWiseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionDetailsByServiceIDDistWiseCompleted(this, new GetTransactionDetailsByServiceIDDistWiseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectAadharApplicationDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectAadharApplicationDetails(string FromDate, string ToDate, string Depatmentcode, string userid, string password) {
            object[] results = this.Invoke("SelectAadharApplicationDetails", new object[] {
                        FromDate,
                        ToDate,
                        Depatmentcode,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAadharApplicationDetailsAsync(string FromDate, string ToDate, string Depatmentcode, string userid, string password) {
            this.SelectAadharApplicationDetailsAsync(FromDate, ToDate, Depatmentcode, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectAadharApplicationDetailsAsync(string FromDate, string ToDate, string Depatmentcode, string userid, string password, object userState) {
            if ((this.SelectAadharApplicationDetailsOperationCompleted == null)) {
                this.SelectAadharApplicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAadharApplicationDetailsOperationCompleted);
            }
            this.InvokeAsync("SelectAadharApplicationDetails", new object[] {
                        FromDate,
                        ToDate,
                        Depatmentcode,
                        userid,
                        password}, this.SelectAadharApplicationDetailsOperationCompleted, userState);
        }
        
        private void OnSelectAadharApplicationDetailsOperationCompleted(object arg) {
            if ((this.SelectAadharApplicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAadharApplicationDetailsCompleted(this, new SelectAadharApplicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateApplicationDetails_VillageMapCopy", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateApplicationDetails_VillageMapCopy(string appno, string status, string remarks, string updatedby, string dispatchno, string dispatchdate, string userid, string password) {
            object[] results = this.Invoke("UpdateApplicationDetails_VillageMapCopy", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        dispatchno,
                        dispatchdate,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_VillageMapCopyAsync(string appno, string status, string remarks, string updatedby, string dispatchno, string dispatchdate, string userid, string password) {
            this.UpdateApplicationDetails_VillageMapCopyAsync(appno, status, remarks, updatedby, dispatchno, dispatchdate, userid, password, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_VillageMapCopyAsync(string appno, string status, string remarks, string updatedby, string dispatchno, string dispatchdate, string userid, string password, object userState) {
            if ((this.UpdateApplicationDetails_VillageMapCopyOperationCompleted == null)) {
                this.UpdateApplicationDetails_VillageMapCopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationDetails_VillageMapCopyOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationDetails_VillageMapCopy", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        dispatchno,
                        dispatchdate,
                        userid,
                        password}, this.UpdateApplicationDetails_VillageMapCopyOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationDetails_VillageMapCopyOperationCompleted(object arg) {
            if ((this.UpdateApplicationDetails_VillageMapCopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationDetails_VillageMapCopyCompleted(this, new UpdateApplicationDetails_VillageMapCopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectApprovedMUTPPBDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectApprovedMUTPPBDetails(string FromDate, string ToDate, string userid, string password) {
            object[] results = this.Invoke("SelectApprovedMUTPPBDetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectApprovedMUTPPBDetailsAsync(string FromDate, string ToDate, string userid, string password) {
            this.SelectApprovedMUTPPBDetailsAsync(FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectApprovedMUTPPBDetailsAsync(string FromDate, string ToDate, string userid, string password, object userState) {
            if ((this.SelectApprovedMUTPPBDetailsOperationCompleted == null)) {
                this.SelectApprovedMUTPPBDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectApprovedMUTPPBDetailsOperationCompleted);
            }
            this.InvokeAsync("SelectApprovedMUTPPBDetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.SelectApprovedMUTPPBDetailsOperationCompleted, userState);
        }
        
        private void OnSelectApprovedMUTPPBDetailsOperationCompleted(object arg) {
            if ((this.SelectApprovedMUTPPBDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectApprovedMUTPPBDetailsCompleted(this, new SelectApprovedMUTPPBDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectMUTPPBDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectMUTPPBDetails(string ApplicationNo, string userid, string password) {
            object[] results = this.Invoke("SelectMUTPPBDetails", new object[] {
                        ApplicationNo,
                        userid,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectMUTPPBDetailsAsync(string ApplicationNo, string userid, string password) {
            this.SelectMUTPPBDetailsAsync(ApplicationNo, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectMUTPPBDetailsAsync(string ApplicationNo, string userid, string password, object userState) {
            if ((this.SelectMUTPPBDetailsOperationCompleted == null)) {
                this.SelectMUTPPBDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMUTPPBDetailsOperationCompleted);
            }
            this.InvokeAsync("SelectMUTPPBDetails", new object[] {
                        ApplicationNo,
                        userid,
                        password}, this.SelectMUTPPBDetailsOperationCompleted, userState);
        }
        
        private void OnSelectMUTPPBDetailsOperationCompleted(object arg) {
            if ((this.SelectMUTPPBDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMUTPPBDetailsCompleted(this, new SelectMUTPPBDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectApplicationNoWise", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectApplicationNoWise(string ApplicationNo, string userid, string password) {
            object[] results = this.Invoke("SelectApplicationNoWise", new object[] {
                        ApplicationNo,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectApplicationNoWiseAsync(string ApplicationNo, string userid, string password) {
            this.SelectApplicationNoWiseAsync(ApplicationNo, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectApplicationNoWiseAsync(string ApplicationNo, string userid, string password, object userState) {
            if ((this.SelectApplicationNoWiseOperationCompleted == null)) {
                this.SelectApplicationNoWiseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectApplicationNoWiseOperationCompleted);
            }
            this.InvokeAsync("SelectApplicationNoWise", new object[] {
                        ApplicationNo,
                        userid,
                        password}, this.SelectApplicationNoWiseOperationCompleted, userState);
        }
        
        private void OnSelectApplicationNoWiseOperationCompleted(object arg) {
            if ((this.SelectApplicationNoWiseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectApplicationNoWiseCompleted(this, new SelectApplicationNoWiseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateCourrierDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCourrierDetails(string ApplicationNo, string CourrierStatus, string CourrierNumber, string CourrierDate, string CourrierName, string CourrierPhonenumber, string userid, string password) {
            object[] results = this.Invoke("UpdateCourrierDetails", new object[] {
                        ApplicationNo,
                        CourrierStatus,
                        CourrierNumber,
                        CourrierDate,
                        CourrierName,
                        CourrierPhonenumber,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCourrierDetailsAsync(string ApplicationNo, string CourrierStatus, string CourrierNumber, string CourrierDate, string CourrierName, string CourrierPhonenumber, string userid, string password) {
            this.UpdateCourrierDetailsAsync(ApplicationNo, CourrierStatus, CourrierNumber, CourrierDate, CourrierName, CourrierPhonenumber, userid, password, null);
        }
        
        /// <remarks/>
        public void UpdateCourrierDetailsAsync(string ApplicationNo, string CourrierStatus, string CourrierNumber, string CourrierDate, string CourrierName, string CourrierPhonenumber, string userid, string password, object userState) {
            if ((this.UpdateCourrierDetailsOperationCompleted == null)) {
                this.UpdateCourrierDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCourrierDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateCourrierDetails", new object[] {
                        ApplicationNo,
                        CourrierStatus,
                        CourrierNumber,
                        CourrierDate,
                        CourrierName,
                        CourrierPhonenumber,
                        userid,
                        password}, this.UpdateCourrierDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateCourrierDetailsOperationCompleted(object arg) {
            if ((this.UpdateCourrierDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCourrierDetailsCompleted(this, new UpdateCourrierDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateEPDCLStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEPDCLStatus(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string ServiceNo, 
                    string MeterNo, 
                    string SLA, 
                    string CatogoryID, 
                    string SanctionedLoad, 
                    string ApplicationFee, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string ReleaseDate, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateEPDCLStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        ServiceNo,
                        MeterNo,
                        SLA,
                        CatogoryID,
                        SanctionedLoad,
                        ApplicationFee,
                        DevCharges,
                        SecurityDeposit,
                        ReleaseDate,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEPDCLStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string ServiceNo, 
                    string MeterNo, 
                    string SLA, 
                    string CatogoryID, 
                    string SanctionedLoad, 
                    string ApplicationFee, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string ReleaseDate, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            this.UpdateEPDCLStatusAsync(ApplicationNo, Status, DoorNo, AreaName, CircleID, DivisionID, SubDivisionID, Pincode, DispatchNo, ServiceNo, MeterNo, SLA, CatogoryID, SanctionedLoad, ApplicationFee, DevCharges, SecurityDeposit, ReleaseDate, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateEPDCLStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string ServiceNo, 
                    string MeterNo, 
                    string SLA, 
                    string CatogoryID, 
                    string SanctionedLoad, 
                    string ApplicationFee, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string ReleaseDate, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateEPDCLStatusOperationCompleted == null)) {
                this.UpdateEPDCLStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEPDCLStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateEPDCLStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        ServiceNo,
                        MeterNo,
                        SLA,
                        CatogoryID,
                        SanctionedLoad,
                        ApplicationFee,
                        DevCharges,
                        SecurityDeposit,
                        ReleaseDate,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateEPDCLStatusOperationCompleted, userState);
        }
        
        private void OnUpdateEPDCLStatusOperationCompleted(object arg) {
            if ((this.UpdateEPDCLStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEPDCLStatusCompleted(this, new UpdateEPDCLStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateEPDCLCategoryStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEPDCLCategoryStatus(string ApplicationNo, string Status, string DoorNo, string AreaName, string CircleID, string DivisionID, string SubDivisionID, string Pincode, string DispatchNo, string Remarks, string UpdatedBy, string UserName, string Password) {
            object[] results = this.Invoke("UpdateEPDCLCategoryStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEPDCLCategoryStatusAsync(string ApplicationNo, string Status, string DoorNo, string AreaName, string CircleID, string DivisionID, string SubDivisionID, string Pincode, string DispatchNo, string Remarks, string UpdatedBy, string UserName, string Password) {
            this.UpdateEPDCLCategoryStatusAsync(ApplicationNo, Status, DoorNo, AreaName, CircleID, DivisionID, SubDivisionID, Pincode, DispatchNo, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateEPDCLCategoryStatusAsync(string ApplicationNo, string Status, string DoorNo, string AreaName, string CircleID, string DivisionID, string SubDivisionID, string Pincode, string DispatchNo, string Remarks, string UpdatedBy, string UserName, string Password, object userState) {
            if ((this.UpdateEPDCLCategoryStatusOperationCompleted == null)) {
                this.UpdateEPDCLCategoryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEPDCLCategoryStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateEPDCLCategoryStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateEPDCLCategoryStatusOperationCompleted, userState);
        }
        
        private void OnUpdateEPDCLCategoryStatusOperationCompleted(object arg) {
            if ((this.UpdateEPDCLCategoryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEPDCLCategoryStatusCompleted(this, new UpdateEPDCLCategoryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateEPDCLLoadStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEPDCLLoadStatus(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string SLA, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateEPDCLLoadStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispacthNo,
                        ChangedLoad,
                        DevCharges,
                        SecurityDeposit,
                        SLA,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEPDCLLoadStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string SLA, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            this.UpdateEPDCLLoadStatusAsync(ApplicationNo, Status, DoorNo, AreaName, CircleID, DivisionID, SubDivisionID, Pincode, DispacthNo, ChangedLoad, DevCharges, SecurityDeposit, SLA, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateEPDCLLoadStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string SLA, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateEPDCLLoadStatusOperationCompleted == null)) {
                this.UpdateEPDCLLoadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEPDCLLoadStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateEPDCLLoadStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispacthNo,
                        ChangedLoad,
                        DevCharges,
                        SecurityDeposit,
                        SLA,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateEPDCLLoadStatusOperationCompleted, userState);
        }
        
        private void OnUpdateEPDCLLoadStatusOperationCompleted(object arg) {
            if ((this.UpdateEPDCLLoadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEPDCLLoadStatusCompleted(this, new UpdateEPDCLLoadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateEPDCLNameStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateEPDCLNameStatus(
                    string ApplicationNo, 
                    string Status, 
                    string ConsumerSurName, 
                    string ConsumerName, 
                    string ConsumerFatherName, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDIvisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateEPDCLNameStatus", new object[] {
                        ApplicationNo,
                        Status,
                        ConsumerSurName,
                        ConsumerName,
                        ConsumerFatherName,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDIvisionID,
                        Pincode,
                        DispatchNo,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEPDCLNameStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string ConsumerSurName, 
                    string ConsumerName, 
                    string ConsumerFatherName, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDIvisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            this.UpdateEPDCLNameStatusAsync(ApplicationNo, Status, ConsumerSurName, ConsumerName, ConsumerFatherName, DoorNo, AreaName, CircleID, DivisionID, SubDIvisionID, Pincode, DispatchNo, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateEPDCLNameStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string ConsumerSurName, 
                    string ConsumerName, 
                    string ConsumerFatherName, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDIvisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateEPDCLNameStatusOperationCompleted == null)) {
                this.UpdateEPDCLNameStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEPDCLNameStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateEPDCLNameStatus", new object[] {
                        ApplicationNo,
                        Status,
                        ConsumerSurName,
                        ConsumerName,
                        ConsumerFatherName,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDIvisionID,
                        Pincode,
                        DispatchNo,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateEPDCLNameStatusOperationCompleted, userState);
        }
        
        private void OnUpdateEPDCLNameStatusOperationCompleted(object arg) {
            if ((this.UpdateEPDCLNameStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEPDCLNameStatusCompleted(this, new UpdateEPDCLNameStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateCPDCLStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCPDCLStatus(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string DistrictID, 
                    string MandalID, 
                    string VillageID, 
                    string Pincode, 
                    string DispatchNo, 
                    string ServiceNo, 
                    string MeterNo, 
                    string SLA, 
                    string CatogoryID, 
                    string SanctionedLoad, 
                    string ApplicationFee, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string DateOfRelease, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateCPDCLStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        DistrictID,
                        MandalID,
                        VillageID,
                        Pincode,
                        DispatchNo,
                        ServiceNo,
                        MeterNo,
                        SLA,
                        CatogoryID,
                        SanctionedLoad,
                        ApplicationFee,
                        DevCharges,
                        SecurityDeposit,
                        DateOfRelease,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCPDCLStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string DistrictID, 
                    string MandalID, 
                    string VillageID, 
                    string Pincode, 
                    string DispatchNo, 
                    string ServiceNo, 
                    string MeterNo, 
                    string SLA, 
                    string CatogoryID, 
                    string SanctionedLoad, 
                    string ApplicationFee, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string DateOfRelease, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            this.UpdateCPDCLStatusAsync(ApplicationNo, Status, DoorNo, AreaName, DistrictID, MandalID, VillageID, Pincode, DispatchNo, ServiceNo, MeterNo, SLA, CatogoryID, SanctionedLoad, ApplicationFee, DevCharges, SecurityDeposit, DateOfRelease, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateCPDCLStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string DistrictID, 
                    string MandalID, 
                    string VillageID, 
                    string Pincode, 
                    string DispatchNo, 
                    string ServiceNo, 
                    string MeterNo, 
                    string SLA, 
                    string CatogoryID, 
                    string SanctionedLoad, 
                    string ApplicationFee, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string DateOfRelease, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateCPDCLStatusOperationCompleted == null)) {
                this.UpdateCPDCLStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCPDCLStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateCPDCLStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        DistrictID,
                        MandalID,
                        VillageID,
                        Pincode,
                        DispatchNo,
                        ServiceNo,
                        MeterNo,
                        SLA,
                        CatogoryID,
                        SanctionedLoad,
                        ApplicationFee,
                        DevCharges,
                        SecurityDeposit,
                        DateOfRelease,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateCPDCLStatusOperationCompleted, userState);
        }
        
        private void OnUpdateCPDCLStatusOperationCompleted(object arg) {
            if ((this.UpdateCPDCLStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCPDCLStatusCompleted(this, new UpdateCPDCLStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateCPDCLCategoryStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCPDCLCategoryStatus(string ApplicationNo, string Status, string DoorNo, string AreaName, string CircleID, string DivisionID, string SubDivisionID, string Pincode, string DispatchNo, string SectionID, string Remarks, string UpdatedBy, string UserName, string Password) {
            object[] results = this.Invoke("UpdateCPDCLCategoryStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        SectionID,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCPDCLCategoryStatusAsync(string ApplicationNo, string Status, string DoorNo, string AreaName, string CircleID, string DivisionID, string SubDivisionID, string Pincode, string DispatchNo, string SectionID, string Remarks, string UpdatedBy, string UserName, string Password) {
            this.UpdateCPDCLCategoryStatusAsync(ApplicationNo, Status, DoorNo, AreaName, CircleID, DivisionID, SubDivisionID, Pincode, DispatchNo, SectionID, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateCPDCLCategoryStatusAsync(string ApplicationNo, string Status, string DoorNo, string AreaName, string CircleID, string DivisionID, string SubDivisionID, string Pincode, string DispatchNo, string SectionID, string Remarks, string UpdatedBy, string UserName, string Password, object userState) {
            if ((this.UpdateCPDCLCategoryStatusOperationCompleted == null)) {
                this.UpdateCPDCLCategoryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCPDCLCategoryStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateCPDCLCategoryStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        SectionID,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateCPDCLCategoryStatusOperationCompleted, userState);
        }
        
        private void OnUpdateCPDCLCategoryStatusOperationCompleted(object arg) {
            if ((this.UpdateCPDCLCategoryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCPDCLCategoryStatusCompleted(this, new UpdateCPDCLCategoryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateCPDCLLoadStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCPDCLLoadStatus(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string SectionID, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateCPDCLLoadStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispacthNo,
                        SectionID,
                        ChangedLoad,
                        DevCharges,
                        SecurityDeposit,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCPDCLLoadStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string SectionID, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            this.UpdateCPDCLLoadStatusAsync(ApplicationNo, Status, DoorNo, AreaName, CircleID, DivisionID, SubDivisionID, Pincode, DispacthNo, SectionID, ChangedLoad, DevCharges, SecurityDeposit, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateCPDCLLoadStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string SectionID, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateCPDCLLoadStatusOperationCompleted == null)) {
                this.UpdateCPDCLLoadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCPDCLLoadStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateCPDCLLoadStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispacthNo,
                        SectionID,
                        ChangedLoad,
                        DevCharges,
                        SecurityDeposit,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateCPDCLLoadStatusOperationCompleted, userState);
        }
        
        private void OnUpdateCPDCLLoadStatusOperationCompleted(object arg) {
            if ((this.UpdateCPDCLLoadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCPDCLLoadStatusCompleted(this, new UpdateCPDCLLoadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateCPDCLNameStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCPDCLNameStatus(
                    string ApplicationNo, 
                    string Status, 
                    string ConsumerSurName, 
                    string ConsumerName, 
                    string ConsumerFatherName, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDIvisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string SectionID, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateCPDCLNameStatus", new object[] {
                        ApplicationNo,
                        Status,
                        ConsumerSurName,
                        ConsumerName,
                        ConsumerFatherName,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDIvisionID,
                        Pincode,
                        DispatchNo,
                        SectionID,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCPDCLNameStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string ConsumerSurName, 
                    string ConsumerName, 
                    string ConsumerFatherName, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDIvisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string SectionID, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            this.UpdateCPDCLNameStatusAsync(ApplicationNo, Status, ConsumerSurName, ConsumerName, ConsumerFatherName, DoorNo, AreaName, CircleID, DivisionID, SubDIvisionID, Pincode, DispatchNo, SectionID, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateCPDCLNameStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string ConsumerSurName, 
                    string ConsumerName, 
                    string ConsumerFatherName, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDIvisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string SectionID, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateCPDCLNameStatusOperationCompleted == null)) {
                this.UpdateCPDCLNameStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCPDCLNameStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateCPDCLNameStatus", new object[] {
                        ApplicationNo,
                        Status,
                        ConsumerSurName,
                        ConsumerName,
                        ConsumerFatherName,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDIvisionID,
                        Pincode,
                        DispatchNo,
                        SectionID,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateCPDCLNameStatusOperationCompleted, userState);
        }
        
        private void OnUpdateCPDCLNameStatusOperationCompleted(object arg) {
            if ((this.UpdateCPDCLNameStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCPDCLNameStatusCompleted(this, new UpdateCPDCLNameStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateNPDCLDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNPDCLDetails(
                    string ApplicationNo, 
                    string ServiceNo, 
                    string MeterNo, 
                    string MeterMakeID, 
                    string MeterCapacity, 
                    string InitialReading, 
                    string MRTSeal, 
                    string TCSeal, 
                    string PPSeal, 
                    string Capacitor, 
                    string CapacitorCapacity, 
                    string CapacitorMake, 
                    string CapacitorSLNo, 
                    string PoleNo, 
                    string DTRNo, 
                    string SubStation, 
                    string Feeder, 
                    string DispatchNo, 
                    string ReleaseDate, 
                    string Status, 
                    string Remarks, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateNPDCLDetails", new object[] {
                        ApplicationNo,
                        ServiceNo,
                        MeterNo,
                        MeterMakeID,
                        MeterCapacity,
                        InitialReading,
                        MRTSeal,
                        TCSeal,
                        PPSeal,
                        Capacitor,
                        CapacitorCapacity,
                        CapacitorMake,
                        CapacitorSLNo,
                        PoleNo,
                        DTRNo,
                        SubStation,
                        Feeder,
                        DispatchNo,
                        ReleaseDate,
                        Status,
                        Remarks,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNPDCLDetailsAsync(
                    string ApplicationNo, 
                    string ServiceNo, 
                    string MeterNo, 
                    string MeterMakeID, 
                    string MeterCapacity, 
                    string InitialReading, 
                    string MRTSeal, 
                    string TCSeal, 
                    string PPSeal, 
                    string Capacitor, 
                    string CapacitorCapacity, 
                    string CapacitorMake, 
                    string CapacitorSLNo, 
                    string PoleNo, 
                    string DTRNo, 
                    string SubStation, 
                    string Feeder, 
                    string DispatchNo, 
                    string ReleaseDate, 
                    string Status, 
                    string Remarks, 
                    string UserName, 
                    string Password) {
            this.UpdateNPDCLDetailsAsync(ApplicationNo, ServiceNo, MeterNo, MeterMakeID, MeterCapacity, InitialReading, MRTSeal, TCSeal, PPSeal, Capacitor, CapacitorCapacity, CapacitorMake, CapacitorSLNo, PoleNo, DTRNo, SubStation, Feeder, DispatchNo, ReleaseDate, Status, Remarks, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateNPDCLDetailsAsync(
                    string ApplicationNo, 
                    string ServiceNo, 
                    string MeterNo, 
                    string MeterMakeID, 
                    string MeterCapacity, 
                    string InitialReading, 
                    string MRTSeal, 
                    string TCSeal, 
                    string PPSeal, 
                    string Capacitor, 
                    string CapacitorCapacity, 
                    string CapacitorMake, 
                    string CapacitorSLNo, 
                    string PoleNo, 
                    string DTRNo, 
                    string SubStation, 
                    string Feeder, 
                    string DispatchNo, 
                    string ReleaseDate, 
                    string Status, 
                    string Remarks, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateNPDCLDetailsOperationCompleted == null)) {
                this.UpdateNPDCLDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNPDCLDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateNPDCLDetails", new object[] {
                        ApplicationNo,
                        ServiceNo,
                        MeterNo,
                        MeterMakeID,
                        MeterCapacity,
                        InitialReading,
                        MRTSeal,
                        TCSeal,
                        PPSeal,
                        Capacitor,
                        CapacitorCapacity,
                        CapacitorMake,
                        CapacitorSLNo,
                        PoleNo,
                        DTRNo,
                        SubStation,
                        Feeder,
                        DispatchNo,
                        ReleaseDate,
                        Status,
                        Remarks,
                        UserName,
                        Password}, this.UpdateNPDCLDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateNPDCLDetailsOperationCompleted(object arg) {
            if ((this.UpdateNPDCLDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNPDCLDetailsCompleted(this, new UpdateNPDCLDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateSPDCLNameStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSPDCLNameStatus(
                    string ApplicationNo, 
                    string Status, 
                    string ConsumerSurName, 
                    string ConsumerName, 
                    string ConsumerFatherName, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateSPDCLNameStatus", new object[] {
                        ApplicationNo,
                        Status,
                        ConsumerSurName,
                        ConsumerName,
                        ConsumerFatherName,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSPDCLNameStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string ConsumerSurName, 
                    string ConsumerName, 
                    string ConsumerFatherName, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            this.UpdateSPDCLNameStatusAsync(ApplicationNo, Status, ConsumerSurName, ConsumerName, ConsumerFatherName, DoorNo, AreaName, CircleID, DivisionID, SubDivisionID, Pincode, DispatchNo, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateSPDCLNameStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string ConsumerSurName, 
                    string ConsumerName, 
                    string ConsumerFatherName, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispatchNo, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateSPDCLNameStatusOperationCompleted == null)) {
                this.UpdateSPDCLNameStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSPDCLNameStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateSPDCLNameStatus", new object[] {
                        ApplicationNo,
                        Status,
                        ConsumerSurName,
                        ConsumerName,
                        ConsumerFatherName,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateSPDCLNameStatusOperationCompleted, userState);
        }
        
        private void OnUpdateSPDCLNameStatusOperationCompleted(object arg) {
            if ((this.UpdateSPDCLNameStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSPDCLNameStatusCompleted(this, new UpdateSPDCLNameStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateSPDCLCategoryStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSPDCLCategoryStatus(string ApplicationNo, string Status, string DoorNo, string AreaName, string CircleID, string DivisionID, string SubDivisionID, string Pincode, string DispatchNo, string Remarks, string UpdatedBy, string UserName, string Password) {
            object[] results = this.Invoke("UpdateSPDCLCategoryStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSPDCLCategoryStatusAsync(string ApplicationNo, string Status, string DoorNo, string AreaName, string CircleID, string DivisionID, string SubDivisionID, string Pincode, string DispatchNo, string Remarks, string UpdatedBy, string UserName, string Password) {
            this.UpdateSPDCLCategoryStatusAsync(ApplicationNo, Status, DoorNo, AreaName, CircleID, DivisionID, SubDivisionID, Pincode, DispatchNo, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateSPDCLCategoryStatusAsync(string ApplicationNo, string Status, string DoorNo, string AreaName, string CircleID, string DivisionID, string SubDivisionID, string Pincode, string DispatchNo, string Remarks, string UpdatedBy, string UserName, string Password, object userState) {
            if ((this.UpdateSPDCLCategoryStatusOperationCompleted == null)) {
                this.UpdateSPDCLCategoryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSPDCLCategoryStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateSPDCLCategoryStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispatchNo,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateSPDCLCategoryStatusOperationCompleted, userState);
        }
        
        private void OnUpdateSPDCLCategoryStatusOperationCompleted(object arg) {
            if ((this.UpdateSPDCLCategoryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSPDCLCategoryStatusCompleted(this, new UpdateSPDCLCategoryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateSPDCLLoadStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSPDCLLoadStatus(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string SLA, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateSPDCLLoadStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispacthNo,
                        ChangedLoad,
                        DevCharges,
                        SecurityDeposit,
                        SLA,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSPDCLLoadStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string SLA, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            this.UpdateSPDCLLoadStatusAsync(ApplicationNo, Status, DoorNo, AreaName, CircleID, DivisionID, SubDivisionID, Pincode, DispacthNo, ChangedLoad, DevCharges, SecurityDeposit, SLA, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateSPDCLLoadStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string SLA, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateSPDCLLoadStatusOperationCompleted == null)) {
                this.UpdateSPDCLLoadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSPDCLLoadStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateSPDCLLoadStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispacthNo,
                        ChangedLoad,
                        DevCharges,
                        SecurityDeposit,
                        SLA,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateSPDCLLoadStatusOperationCompleted, userState);
        }
        
        private void OnUpdateSPDCLLoadStatusOperationCompleted(object arg) {
            if ((this.UpdateSPDCLLoadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSPDCLLoadStatusCompleted(this, new UpdateSPDCLLoadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateSPDCLCategoryLoadStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSPDCLCategoryLoadStatus(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string SLA, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UpdateSPDCLCategoryLoadStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispacthNo,
                        ChangedLoad,
                        DevCharges,
                        SecurityDeposit,
                        SLA,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSPDCLCategoryLoadStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string SLA, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password) {
            this.UpdateSPDCLCategoryLoadStatusAsync(ApplicationNo, Status, DoorNo, AreaName, CircleID, DivisionID, SubDivisionID, Pincode, DispacthNo, ChangedLoad, DevCharges, SecurityDeposit, SLA, Remarks, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateSPDCLCategoryLoadStatusAsync(
                    string ApplicationNo, 
                    string Status, 
                    string DoorNo, 
                    string AreaName, 
                    string CircleID, 
                    string DivisionID, 
                    string SubDivisionID, 
                    string Pincode, 
                    string DispacthNo, 
                    string ChangedLoad, 
                    string DevCharges, 
                    string SecurityDeposit, 
                    string SLA, 
                    string Remarks, 
                    string UpdatedBy, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UpdateSPDCLCategoryLoadStatusOperationCompleted == null)) {
                this.UpdateSPDCLCategoryLoadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSPDCLCategoryLoadStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateSPDCLCategoryLoadStatus", new object[] {
                        ApplicationNo,
                        Status,
                        DoorNo,
                        AreaName,
                        CircleID,
                        DivisionID,
                        SubDivisionID,
                        Pincode,
                        DispacthNo,
                        ChangedLoad,
                        DevCharges,
                        SecurityDeposit,
                        SLA,
                        Remarks,
                        UpdatedBy,
                        UserName,
                        Password}, this.UpdateSPDCLCategoryLoadStatusOperationCompleted, userState);
        }
        
        private void OnUpdateSPDCLCategoryLoadStatusOperationCompleted(object arg) {
            if ((this.UpdateSPDCLCategoryLoadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSPDCLCategoryLoadStatusCompleted(this, new UpdateSPDCLCategoryLoadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UserCreationInsert", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserCreationInsert(
                    string SCAID, 
                    string UCID, 
                    string UCNAME, 
                    string UCADDRESS, 
                    string UCDISTRICT, 
                    string UCMANDAL, 
                    string UCCITY, 
                    string UCPINCODE, 
                    string UCONAME, 
                    string UCPhone, 
                    string UCEmail, 
                    string UCUPDBY, 
                    string UCCRTBY, 
                    string UserID, 
                    string PreceedingNo, 
                    string Document, 
                    string HashMessage, 
                    string UserName, 
                    string Password) {
            object[] results = this.Invoke("UserCreationInsert", new object[] {
                        SCAID,
                        UCID,
                        UCNAME,
                        UCADDRESS,
                        UCDISTRICT,
                        UCMANDAL,
                        UCCITY,
                        UCPINCODE,
                        UCONAME,
                        UCPhone,
                        UCEmail,
                        UCUPDBY,
                        UCCRTBY,
                        UserID,
                        PreceedingNo,
                        Document,
                        HashMessage,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserCreationInsertAsync(
                    string SCAID, 
                    string UCID, 
                    string UCNAME, 
                    string UCADDRESS, 
                    string UCDISTRICT, 
                    string UCMANDAL, 
                    string UCCITY, 
                    string UCPINCODE, 
                    string UCONAME, 
                    string UCPhone, 
                    string UCEmail, 
                    string UCUPDBY, 
                    string UCCRTBY, 
                    string UserID, 
                    string PreceedingNo, 
                    string Document, 
                    string HashMessage, 
                    string UserName, 
                    string Password) {
            this.UserCreationInsertAsync(SCAID, UCID, UCNAME, UCADDRESS, UCDISTRICT, UCMANDAL, UCCITY, UCPINCODE, UCONAME, UCPhone, UCEmail, UCUPDBY, UCCRTBY, UserID, PreceedingNo, Document, HashMessage, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UserCreationInsertAsync(
                    string SCAID, 
                    string UCID, 
                    string UCNAME, 
                    string UCADDRESS, 
                    string UCDISTRICT, 
                    string UCMANDAL, 
                    string UCCITY, 
                    string UCPINCODE, 
                    string UCONAME, 
                    string UCPhone, 
                    string UCEmail, 
                    string UCUPDBY, 
                    string UCCRTBY, 
                    string UserID, 
                    string PreceedingNo, 
                    string Document, 
                    string HashMessage, 
                    string UserName, 
                    string Password, 
                    object userState) {
            if ((this.UserCreationInsertOperationCompleted == null)) {
                this.UserCreationInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserCreationInsertOperationCompleted);
            }
            this.InvokeAsync("UserCreationInsert", new object[] {
                        SCAID,
                        UCID,
                        UCNAME,
                        UCADDRESS,
                        UCDISTRICT,
                        UCMANDAL,
                        UCCITY,
                        UCPINCODE,
                        UCONAME,
                        UCPhone,
                        UCEmail,
                        UCUPDBY,
                        UCCRTBY,
                        UserID,
                        PreceedingNo,
                        Document,
                        HashMessage,
                        UserName,
                        Password}, this.UserCreationInsertOperationCompleted, userState);
        }
        
        private void OnUserCreationInsertOperationCompleted(object arg) {
            if ((this.UserCreationInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserCreationInsertCompleted(this, new UserCreationInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UserCreationInsertFinal", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UserCreationInsertFinal(string ChannelID, string UserID, string SCID, string UserName, string Password) {
            object[] results = this.Invoke("UserCreationInsertFinal", new object[] {
                        ChannelID,
                        UserID,
                        SCID,
                        UserName,
                        Password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UserCreationInsertFinalAsync(string ChannelID, string UserID, string SCID, string UserName, string Password) {
            this.UserCreationInsertFinalAsync(ChannelID, UserID, SCID, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UserCreationInsertFinalAsync(string ChannelID, string UserID, string SCID, string UserName, string Password, object userState) {
            if ((this.UserCreationInsertFinalOperationCompleted == null)) {
                this.UserCreationInsertFinalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserCreationInsertFinalOperationCompleted);
            }
            this.InvokeAsync("UserCreationInsertFinal", new object[] {
                        ChannelID,
                        UserID,
                        SCID,
                        UserName,
                        Password}, this.UserCreationInsertFinalOperationCompleted, userState);
        }
        
        private void OnUserCreationInsertFinalOperationCompleted(object arg) {
            if ((this.UserCreationInsertFinalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserCreationInsertFinalCompleted(this, new UserCreationInsertFinalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/AcivateCenter", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AcivateCenter(string ChannelID, string UserID, string SCID, string HashMessage, string UpdatedBy, string UserName, string Password) {
            object[] results = this.Invoke("AcivateCenter", new object[] {
                        ChannelID,
                        UserID,
                        SCID,
                        HashMessage,
                        UpdatedBy,
                        UserName,
                        Password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AcivateCenterAsync(string ChannelID, string UserID, string SCID, string HashMessage, string UpdatedBy, string UserName, string Password) {
            this.AcivateCenterAsync(ChannelID, UserID, SCID, HashMessage, UpdatedBy, UserName, Password, null);
        }
        
        /// <remarks/>
        public void AcivateCenterAsync(string ChannelID, string UserID, string SCID, string HashMessage, string UpdatedBy, string UserName, string Password, object userState) {
            if ((this.AcivateCenterOperationCompleted == null)) {
                this.AcivateCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcivateCenterOperationCompleted);
            }
            this.InvokeAsync("AcivateCenter", new object[] {
                        ChannelID,
                        UserID,
                        SCID,
                        HashMessage,
                        UpdatedBy,
                        UserName,
                        Password}, this.AcivateCenterOperationCompleted, userState);
        }
        
        private void OnAcivateCenterOperationCompleted(object arg) {
            if ((this.AcivateCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcivateCenterCompleted(this, new AcivateCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateChannelActiveInactiveDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateChannelActiveInactiveDetails(string PScaId, string ScaId, string channelid, string ChannelName, string OwnerName, string Status, string Remarks, string SystemIP, string CreatedBy, string Hash, string UserName, string Password) {
            object[] results = this.Invoke("UpdateChannelActiveInactiveDetails", new object[] {
                        PScaId,
                        ScaId,
                        channelid,
                        ChannelName,
                        OwnerName,
                        Status,
                        Remarks,
                        SystemIP,
                        CreatedBy,
                        Hash,
                        UserName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateChannelActiveInactiveDetailsAsync(string PScaId, string ScaId, string channelid, string ChannelName, string OwnerName, string Status, string Remarks, string SystemIP, string CreatedBy, string Hash, string UserName, string Password) {
            this.UpdateChannelActiveInactiveDetailsAsync(PScaId, ScaId, channelid, ChannelName, OwnerName, Status, Remarks, SystemIP, CreatedBy, Hash, UserName, Password, null);
        }
        
        /// <remarks/>
        public void UpdateChannelActiveInactiveDetailsAsync(string PScaId, string ScaId, string channelid, string ChannelName, string OwnerName, string Status, string Remarks, string SystemIP, string CreatedBy, string Hash, string UserName, string Password, object userState) {
            if ((this.UpdateChannelActiveInactiveDetailsOperationCompleted == null)) {
                this.UpdateChannelActiveInactiveDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChannelActiveInactiveDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateChannelActiveInactiveDetails", new object[] {
                        PScaId,
                        ScaId,
                        channelid,
                        ChannelName,
                        OwnerName,
                        Status,
                        Remarks,
                        SystemIP,
                        CreatedBy,
                        Hash,
                        UserName,
                        Password}, this.UpdateChannelActiveInactiveDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateChannelActiveInactiveDetailsOperationCompleted(object arg) {
            if ((this.UpdateChannelActiveInactiveDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChannelActiveInactiveDetailsCompleted(this, new UpdateChannelActiveInactiveDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ePDSAP_CheckTransactionExists", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ePDSAP_CheckTransactionExists(string ApplicationNo, string userid, string password) {
            object[] results = this.Invoke("ePDSAP_CheckTransactionExists", new object[] {
                        ApplicationNo,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ePDSAP_CheckTransactionExistsAsync(string ApplicationNo, string userid, string password) {
            this.ePDSAP_CheckTransactionExistsAsync(ApplicationNo, userid, password, null);
        }
        
        /// <remarks/>
        public void ePDSAP_CheckTransactionExistsAsync(string ApplicationNo, string userid, string password, object userState) {
            if ((this.ePDSAP_CheckTransactionExistsOperationCompleted == null)) {
                this.ePDSAP_CheckTransactionExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnePDSAP_CheckTransactionExistsOperationCompleted);
            }
            this.InvokeAsync("ePDSAP_CheckTransactionExists", new object[] {
                        ApplicationNo,
                        userid,
                        password}, this.ePDSAP_CheckTransactionExistsOperationCompleted, userState);
        }
        
        private void OnePDSAP_CheckTransactionExistsOperationCompleted(object arg) {
            if ((this.ePDSAP_CheckTransactionExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ePDSAP_CheckTransactionExistsCompleted(this, new ePDSAP_CheckTransactionExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ePDSAP_UpdateRationCardApplicationStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ePDSAP_UpdateRationCardApplicationStatus(string appno, string rationcardno, string status, string remarks, string updatedby, string userid, string password) {
            object[] results = this.Invoke("ePDSAP_UpdateRationCardApplicationStatus", new object[] {
                        appno,
                        rationcardno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ePDSAP_UpdateRationCardApplicationStatusAsync(string appno, string rationcardno, string status, string remarks, string updatedby, string userid, string password) {
            this.ePDSAP_UpdateRationCardApplicationStatusAsync(appno, rationcardno, status, remarks, updatedby, userid, password, null);
        }
        
        /// <remarks/>
        public void ePDSAP_UpdateRationCardApplicationStatusAsync(string appno, string rationcardno, string status, string remarks, string updatedby, string userid, string password, object userState) {
            if ((this.ePDSAP_UpdateRationCardApplicationStatusOperationCompleted == null)) {
                this.ePDSAP_UpdateRationCardApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnePDSAP_UpdateRationCardApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("ePDSAP_UpdateRationCardApplicationStatus", new object[] {
                        appno,
                        rationcardno,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password}, this.ePDSAP_UpdateRationCardApplicationStatusOperationCompleted, userState);
        }
        
        private void OnePDSAP_UpdateRationCardApplicationStatusOperationCompleted(object arg) {
            if ((this.ePDSAP_UpdateRationCardApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ePDSAP_UpdateRationCardApplicationStatusCompleted(this, new ePDSAP_UpdateRationCardApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ISES_GetTransactionDetailsByServiceID", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ISES_GetTransactionDetailsByServiceID(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            object[] results = this.Invoke("ISES_GetTransactionDetailsByServiceID", new object[] {
                        ServiceID,
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ISES_GetTransactionDetailsByServiceIDAsync(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            this.ISES_GetTransactionDetailsByServiceIDAsync(ServiceID, FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void ISES_GetTransactionDetailsByServiceIDAsync(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password, object userState) {
            if ((this.ISES_GetTransactionDetailsByServiceIDOperationCompleted == null)) {
                this.ISES_GetTransactionDetailsByServiceIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISES_GetTransactionDetailsByServiceIDOperationCompleted);
            }
            this.InvokeAsync("ISES_GetTransactionDetailsByServiceID", new object[] {
                        ServiceID,
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.ISES_GetTransactionDetailsByServiceIDOperationCompleted, userState);
        }
        
        private void OnISES_GetTransactionDetailsByServiceIDOperationCompleted(object arg) {
            if ((this.ISES_GetTransactionDetailsByServiceIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISES_GetTransactionDetailsByServiceIDCompleted(this, new ISES_GetTransactionDetailsByServiceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ISES_UpdateApplicationDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ISES_UpdateApplicationDetails(string appno, long StudentId, int CertType, string status, string remarks, string updatedby, string userid, string password) {
            object[] results = this.Invoke("ISES_UpdateApplicationDetails", new object[] {
                        appno,
                        StudentId,
                        CertType,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ISES_UpdateApplicationDetailsAsync(string appno, long StudentId, int CertType, string status, string remarks, string updatedby, string userid, string password) {
            this.ISES_UpdateApplicationDetailsAsync(appno, StudentId, CertType, status, remarks, updatedby, userid, password, null);
        }
        
        /// <remarks/>
        public void ISES_UpdateApplicationDetailsAsync(string appno, long StudentId, int CertType, string status, string remarks, string updatedby, string userid, string password, object userState) {
            if ((this.ISES_UpdateApplicationDetailsOperationCompleted == null)) {
                this.ISES_UpdateApplicationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISES_UpdateApplicationDetailsOperationCompleted);
            }
            this.InvokeAsync("ISES_UpdateApplicationDetails", new object[] {
                        appno,
                        StudentId,
                        CertType,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password}, this.ISES_UpdateApplicationDetailsOperationCompleted, userState);
        }
        
        private void OnISES_UpdateApplicationDetailsOperationCompleted(object arg) {
            if ((this.ISES_UpdateApplicationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISES_UpdateApplicationDetailsCompleted(this, new ISES_UpdateApplicationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ISES_UpdateTransferDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ISES_UpdateTransferDetails(string appno, long StudentId, string residencedistrict, char residencemandalormunicipalitystatus, string residencemandalormunicipality, string residencevillage, string status, string remarks, string updatedby, string userid, string password) {
            object[] results = this.Invoke("ISES_UpdateTransferDetails", new object[] {
                        appno,
                        StudentId,
                        residencedistrict,
                        residencemandalormunicipalitystatus,
                        residencemandalormunicipality,
                        residencevillage,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ISES_UpdateTransferDetailsAsync(string appno, long StudentId, string residencedistrict, char residencemandalormunicipalitystatus, string residencemandalormunicipality, string residencevillage, string status, string remarks, string updatedby, string userid, string password) {
            this.ISES_UpdateTransferDetailsAsync(appno, StudentId, residencedistrict, residencemandalormunicipalitystatus, residencemandalormunicipality, residencevillage, status, remarks, updatedby, userid, password, null);
        }
        
        /// <remarks/>
        public void ISES_UpdateTransferDetailsAsync(string appno, long StudentId, string residencedistrict, char residencemandalormunicipalitystatus, string residencemandalormunicipality, string residencevillage, string status, string remarks, string updatedby, string userid, string password, object userState) {
            if ((this.ISES_UpdateTransferDetailsOperationCompleted == null)) {
                this.ISES_UpdateTransferDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISES_UpdateTransferDetailsOperationCompleted);
            }
            this.InvokeAsync("ISES_UpdateTransferDetails", new object[] {
                        appno,
                        StudentId,
                        residencedistrict,
                        residencemandalormunicipalitystatus,
                        residencemandalormunicipality,
                        residencevillage,
                        status,
                        remarks,
                        updatedby,
                        userid,
                        password}, this.ISES_UpdateTransferDetailsOperationCompleted, userState);
        }
        
        private void OnISES_UpdateTransferDetailsOperationCompleted(object arg) {
            if ((this.ISES_UpdateTransferDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISES_UpdateTransferDetailsCompleted(this, new ISES_UpdateTransferDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ISES_RevokeApplications", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ISES_RevokeApplications(string studentid, int servicetype, string status, string Remarks, string updatedby, string roleid, string districtId, string mandalId, string divisionid, System.DateTime updateddate, string userid, string password) {
            object[] results = this.Invoke("ISES_RevokeApplications", new object[] {
                        studentid,
                        servicetype,
                        status,
                        Remarks,
                        updatedby,
                        roleid,
                        districtId,
                        mandalId,
                        divisionid,
                        updateddate,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ISES_RevokeApplicationsAsync(string studentid, int servicetype, string status, string Remarks, string updatedby, string roleid, string districtId, string mandalId, string divisionid, System.DateTime updateddate, string userid, string password) {
            this.ISES_RevokeApplicationsAsync(studentid, servicetype, status, Remarks, updatedby, roleid, districtId, mandalId, divisionid, updateddate, userid, password, null);
        }
        
        /// <remarks/>
        public void ISES_RevokeApplicationsAsync(string studentid, int servicetype, string status, string Remarks, string updatedby, string roleid, string districtId, string mandalId, string divisionid, System.DateTime updateddate, string userid, string password, object userState) {
            if ((this.ISES_RevokeApplicationsOperationCompleted == null)) {
                this.ISES_RevokeApplicationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISES_RevokeApplicationsOperationCompleted);
            }
            this.InvokeAsync("ISES_RevokeApplications", new object[] {
                        studentid,
                        servicetype,
                        status,
                        Remarks,
                        updatedby,
                        roleid,
                        districtId,
                        mandalId,
                        divisionid,
                        updateddate,
                        userid,
                        password}, this.ISES_RevokeApplicationsOperationCompleted, userState);
        }
        
        private void OnISES_RevokeApplicationsOperationCompleted(object arg) {
            if ((this.ISES_RevokeApplicationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISES_RevokeApplicationsCompleted(this, new ISES_RevokeApplicationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ISES_GetTransactionDetailsByServiceID_DataTableTesting", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ISES_GetTransactionDetailsByServiceID_DataTableTesting(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            object[] results = this.Invoke("ISES_GetTransactionDetailsByServiceID_DataTableTesting", new object[] {
                        ServiceID,
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ISES_GetTransactionDetailsByServiceID_DataTableTestingAsync(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password) {
            this.ISES_GetTransactionDetailsByServiceID_DataTableTestingAsync(ServiceID, FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void ISES_GetTransactionDetailsByServiceID_DataTableTestingAsync(string ServiceID, System.DateTime FromDate, System.DateTime ToDate, string userid, string password, object userState) {
            if ((this.ISES_GetTransactionDetailsByServiceID_DataTableTestingOperationCompleted == null)) {
                this.ISES_GetTransactionDetailsByServiceID_DataTableTestingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISES_GetTransactionDetailsByServiceID_DataTableTestingOperationCompleted);
            }
            this.InvokeAsync("ISES_GetTransactionDetailsByServiceID_DataTableTesting", new object[] {
                        ServiceID,
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.ISES_GetTransactionDetailsByServiceID_DataTableTestingOperationCompleted, userState);
        }
        
        private void OnISES_GetTransactionDetailsByServiceID_DataTableTestingOperationCompleted(object arg) {
            if ((this.ISES_GetTransactionDetailsByServiceID_DataTableTestingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISES_GetTransactionDetailsByServiceID_DataTableTestingCompleted(this, new ISES_GetTransactionDetailsByServiceID_DataTableTestingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/Mutation_StatusUpdateDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Mutation_StatusUpdateDetails(string ApplicationNo, string surveyno, string Status, string Remarks, string userid, string password, string SrNo) {
            object[] results = this.Invoke("Mutation_StatusUpdateDetails", new object[] {
                        ApplicationNo,
                        surveyno,
                        Status,
                        Remarks,
                        userid,
                        password,
                        SrNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Mutation_StatusUpdateDetailsAsync(string ApplicationNo, string surveyno, string Status, string Remarks, string userid, string password, string SrNo) {
            this.Mutation_StatusUpdateDetailsAsync(ApplicationNo, surveyno, Status, Remarks, userid, password, SrNo, null);
        }
        
        /// <remarks/>
        public void Mutation_StatusUpdateDetailsAsync(string ApplicationNo, string surveyno, string Status, string Remarks, string userid, string password, string SrNo, object userState) {
            if ((this.Mutation_StatusUpdateDetailsOperationCompleted == null)) {
                this.Mutation_StatusUpdateDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMutation_StatusUpdateDetailsOperationCompleted);
            }
            this.InvokeAsync("Mutation_StatusUpdateDetails", new object[] {
                        ApplicationNo,
                        surveyno,
                        Status,
                        Remarks,
                        userid,
                        password,
                        SrNo}, this.Mutation_StatusUpdateDetailsOperationCompleted, userState);
        }
        
        private void OnMutation_StatusUpdateDetailsOperationCompleted(object arg) {
            if ((this.Mutation_StatusUpdateDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Mutation_StatusUpdateDetailsCompleted(this, new Mutation_StatusUpdateDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetRC_Details", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRC_Details(string cardno, string userId, string password) {
            object[] results = this.Invoke("GetRC_Details", new object[] {
                        cardno,
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRC_DetailsAsync(string cardno, string userId, string password) {
            this.GetRC_DetailsAsync(cardno, userId, password, null);
        }
        
        /// <remarks/>
        public void GetRC_DetailsAsync(string cardno, string userId, string password, object userState) {
            if ((this.GetRC_DetailsOperationCompleted == null)) {
                this.GetRC_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRC_DetailsOperationCompleted);
            }
            this.InvokeAsync("GetRC_Details", new object[] {
                        cardno,
                        userId,
                        password}, this.GetRC_DetailsOperationCompleted, userState);
        }
        
        private void OnGetRC_DetailsOperationCompleted(object arg) {
            if ((this.GetRC_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRC_DetailsCompleted(this, new GetRC_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/Get_CheckRationCardExistsornot", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_CheckRationCardExistsornot(string cardno, string userId, string password) {
            object[] results = this.Invoke("Get_CheckRationCardExistsornot", new object[] {
                        cardno,
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CheckRationCardExistsornotAsync(string cardno, string userId, string password) {
            this.Get_CheckRationCardExistsornotAsync(cardno, userId, password, null);
        }
        
        /// <remarks/>
        public void Get_CheckRationCardExistsornotAsync(string cardno, string userId, string password, object userState) {
            if ((this.Get_CheckRationCardExistsornotOperationCompleted == null)) {
                this.Get_CheckRationCardExistsornotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CheckRationCardExistsornotOperationCompleted);
            }
            this.InvokeAsync("Get_CheckRationCardExistsornot", new object[] {
                        cardno,
                        userId,
                        password}, this.Get_CheckRationCardExistsornotOperationCompleted, userState);
        }
        
        private void OnGet_CheckRationCardExistsornotOperationCompleted(object arg) {
            if ((this.Get_CheckRationCardExistsornotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CheckRationCardExistsornotCompleted(this, new Get_CheckRationCardExistsornotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/PushUnableToPrint", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PushUnableToPrint(string ApplicationNo, string Remarks, string userid, string password) {
            object[] results = this.Invoke("PushUnableToPrint", new object[] {
                        ApplicationNo,
                        Remarks,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PushUnableToPrintAsync(string ApplicationNo, string Remarks, string userid, string password) {
            this.PushUnableToPrintAsync(ApplicationNo, Remarks, userid, password, null);
        }
        
        /// <remarks/>
        public void PushUnableToPrintAsync(string ApplicationNo, string Remarks, string userid, string password, object userState) {
            if ((this.PushUnableToPrintOperationCompleted == null)) {
                this.PushUnableToPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushUnableToPrintOperationCompleted);
            }
            this.InvokeAsync("PushUnableToPrint", new object[] {
                        ApplicationNo,
                        Remarks,
                        userid,
                        password}, this.PushUnableToPrintOperationCompleted, userState);
        }
        
        private void OnPushUnableToPrintOperationCompleted(object arg) {
            if ((this.PushUnableToPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushUnableToPrintCompleted(this, new PushUnableToPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/RemarksUnableToPrintPPB", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable RemarksUnableToPrintPPB(string FromDate, string ToDate, string userid, string password) {
            object[] results = this.Invoke("RemarksUnableToPrintPPB", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void RemarksUnableToPrintPPBAsync(string FromDate, string ToDate, string userid, string password) {
            this.RemarksUnableToPrintPPBAsync(FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void RemarksUnableToPrintPPBAsync(string FromDate, string ToDate, string userid, string password, object userState) {
            if ((this.RemarksUnableToPrintPPBOperationCompleted == null)) {
                this.RemarksUnableToPrintPPBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemarksUnableToPrintPPBOperationCompleted);
            }
            this.InvokeAsync("RemarksUnableToPrintPPB", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.RemarksUnableToPrintPPBOperationCompleted, userState);
        }
        
        private void OnRemarksUnableToPrintPPBOperationCompleted(object arg) {
            if ((this.RemarksUnableToPrintPPBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemarksUnableToPrintPPBCompleted(this, new RemarksUnableToPrintPPBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/RePushProblemsData", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RePushProblemsData(string ApplicationNo, string Photo, string Signature, string userid, string password) {
            object[] results = this.Invoke("RePushProblemsData", new object[] {
                        ApplicationNo,
                        Photo,
                        Signature,
                        userid,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RePushProblemsDataAsync(string ApplicationNo, string Photo, string Signature, string userid, string password) {
            this.RePushProblemsDataAsync(ApplicationNo, Photo, Signature, userid, password, null);
        }
        
        /// <remarks/>
        public void RePushProblemsDataAsync(string ApplicationNo, string Photo, string Signature, string userid, string password, object userState) {
            if ((this.RePushProblemsDataOperationCompleted == null)) {
                this.RePushProblemsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRePushProblemsDataOperationCompleted);
            }
            this.InvokeAsync("RePushProblemsData", new object[] {
                        ApplicationNo,
                        Photo,
                        Signature,
                        userid,
                        password}, this.RePushProblemsDataOperationCompleted, userState);
        }
        
        private void OnRePushProblemsDataOperationCompleted(object arg) {
            if ((this.RePushProblemsDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RePushProblemsDataCompleted(this, new RePushProblemsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectMUTPPBapprovedRejectedDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectMUTPPBapprovedRejectedDetails(string FromDate, string ToDate, string userid, string password) {
            object[] results = this.Invoke("SelectMUTPPBapprovedRejectedDetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectMUTPPBapprovedRejectedDetailsAsync(string FromDate, string ToDate, string userid, string password) {
            this.SelectMUTPPBapprovedRejectedDetailsAsync(FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectMUTPPBapprovedRejectedDetailsAsync(string FromDate, string ToDate, string userid, string password, object userState) {
            if ((this.SelectMUTPPBapprovedRejectedDetailsOperationCompleted == null)) {
                this.SelectMUTPPBapprovedRejectedDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMUTPPBapprovedRejectedDetailsOperationCompleted);
            }
            this.InvokeAsync("SelectMUTPPBapprovedRejectedDetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.SelectMUTPPBapprovedRejectedDetailsOperationCompleted, userState);
        }
        
        private void OnSelectMUTPPBapprovedRejectedDetailsOperationCompleted(object arg) {
            if ((this.SelectMUTPPBapprovedRejectedDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMUTPPBapprovedRejectedDetailsCompleted(this, new SelectMUTPPBapprovedRejectedDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectStatusforPPB", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectStatusforPPB(string ApplicationNo, string userid, string password) {
            object[] results = this.Invoke("SelectStatusforPPB", new object[] {
                        ApplicationNo,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectStatusforPPBAsync(string ApplicationNo, string userid, string password) {
            this.SelectStatusforPPBAsync(ApplicationNo, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectStatusforPPBAsync(string ApplicationNo, string userid, string password, object userState) {
            if ((this.SelectStatusforPPBOperationCompleted == null)) {
                this.SelectStatusforPPBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectStatusforPPBOperationCompleted);
            }
            this.InvokeAsync("SelectStatusforPPB", new object[] {
                        ApplicationNo,
                        userid,
                        password}, this.SelectStatusforPPBOperationCompleted, userState);
        }
        
        private void OnSelectStatusforPPBOperationCompleted(object arg) {
            if ((this.SelectStatusforPPBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectStatusforPPBCompleted(this, new SelectStatusforPPBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ePDSAP_ApplicationStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ePDSAP_ApplicationStatus(string ApplicationNo, string RCNo, string status, string updatedby, string userid, string password) {
            object[] results = this.Invoke("ePDSAP_ApplicationStatus", new object[] {
                        ApplicationNo,
                        RCNo,
                        status,
                        updatedby,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ePDSAP_ApplicationStatusAsync(string ApplicationNo, string RCNo, string status, string updatedby, string userid, string password) {
            this.ePDSAP_ApplicationStatusAsync(ApplicationNo, RCNo, status, updatedby, userid, password, null);
        }
        
        /// <remarks/>
        public void ePDSAP_ApplicationStatusAsync(string ApplicationNo, string RCNo, string status, string updatedby, string userid, string password, object userState) {
            if ((this.ePDSAP_ApplicationStatusOperationCompleted == null)) {
                this.ePDSAP_ApplicationStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnePDSAP_ApplicationStatusOperationCompleted);
            }
            this.InvokeAsync("ePDSAP_ApplicationStatus", new object[] {
                        ApplicationNo,
                        RCNo,
                        status,
                        updatedby,
                        userid,
                        password}, this.ePDSAP_ApplicationStatusOperationCompleted, userState);
        }
        
        private void OnePDSAP_ApplicationStatusOperationCompleted(object arg) {
            if ((this.ePDSAP_ApplicationStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ePDSAP_ApplicationStatusCompleted(this, new ePDSAP_ApplicationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/CMDASHBOARD_CDMAReport", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CMDASHBOARD_CDMAReport(string userid, string password) {
            object[] results = this.Invoke("CMDASHBOARD_CDMAReport", new object[] {
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CMDASHBOARD_CDMAReportAsync(string userid, string password) {
            this.CMDASHBOARD_CDMAReportAsync(userid, password, null);
        }
        
        /// <remarks/>
        public void CMDASHBOARD_CDMAReportAsync(string userid, string password, object userState) {
            if ((this.CMDASHBOARD_CDMAReportOperationCompleted == null)) {
                this.CMDASHBOARD_CDMAReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCMDASHBOARD_CDMAReportOperationCompleted);
            }
            this.InvokeAsync("CMDASHBOARD_CDMAReport", new object[] {
                        userid,
                        password}, this.CMDASHBOARD_CDMAReportOperationCompleted, userState);
        }
        
        private void OnCMDASHBOARD_CDMAReportOperationCompleted(object arg) {
            if ((this.CMDASHBOARD_CDMAReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CMDASHBOARD_CDMAReportCompleted(this, new CMDASHBOARD_CDMAReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/ePDSAP_UpdRCardAppStatus", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ePDSAP_UpdRCardAppStatus(string appno, string rationcardno, string status, string remarks, string updatedby, string updateddate, string userid, string password) {
            object[] results = this.Invoke("ePDSAP_UpdRCardAppStatus", new object[] {
                        appno,
                        rationcardno,
                        status,
                        remarks,
                        updatedby,
                        updateddate,
                        userid,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ePDSAP_UpdRCardAppStatusAsync(string appno, string rationcardno, string status, string remarks, string updatedby, string updateddate, string userid, string password) {
            this.ePDSAP_UpdRCardAppStatusAsync(appno, rationcardno, status, remarks, updatedby, updateddate, userid, password, null);
        }
        
        /// <remarks/>
        public void ePDSAP_UpdRCardAppStatusAsync(string appno, string rationcardno, string status, string remarks, string updatedby, string updateddate, string userid, string password, object userState) {
            if ((this.ePDSAP_UpdRCardAppStatusOperationCompleted == null)) {
                this.ePDSAP_UpdRCardAppStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnePDSAP_UpdRCardAppStatusOperationCompleted);
            }
            this.InvokeAsync("ePDSAP_UpdRCardAppStatus", new object[] {
                        appno,
                        rationcardno,
                        status,
                        remarks,
                        updatedby,
                        updateddate,
                        userid,
                        password}, this.ePDSAP_UpdRCardAppStatusOperationCompleted, userState);
        }
        
        private void OnePDSAP_UpdRCardAppStatusOperationCompleted(object arg) {
            if ((this.ePDSAP_UpdRCardAppStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ePDSAP_UpdRCardAppStatusCompleted(this, new ePDSAP_UpdRCardAppStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateChannelDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateChannelDetails(string PScaId, string ScaId, string FilePath, string fileName, string channelid, string ChannelName, string OwnerName, string Status, string Remarks, string SystemIP, string CreatedBy, string Hash) {
            object[] results = this.Invoke("UpdateChannelDetails", new object[] {
                        PScaId,
                        ScaId,
                        FilePath,
                        fileName,
                        channelid,
                        ChannelName,
                        OwnerName,
                        Status,
                        Remarks,
                        SystemIP,
                        CreatedBy,
                        Hash});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateChannelDetailsAsync(string PScaId, string ScaId, string FilePath, string fileName, string channelid, string ChannelName, string OwnerName, string Status, string Remarks, string SystemIP, string CreatedBy, string Hash) {
            this.UpdateChannelDetailsAsync(PScaId, ScaId, FilePath, fileName, channelid, ChannelName, OwnerName, Status, Remarks, SystemIP, CreatedBy, Hash, null);
        }
        
        /// <remarks/>
        public void UpdateChannelDetailsAsync(string PScaId, string ScaId, string FilePath, string fileName, string channelid, string ChannelName, string OwnerName, string Status, string Remarks, string SystemIP, string CreatedBy, string Hash, object userState) {
            if ((this.UpdateChannelDetailsOperationCompleted == null)) {
                this.UpdateChannelDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateChannelDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateChannelDetails", new object[] {
                        PScaId,
                        ScaId,
                        FilePath,
                        fileName,
                        channelid,
                        ChannelName,
                        OwnerName,
                        Status,
                        Remarks,
                        SystemIP,
                        CreatedBy,
                        Hash}, this.UpdateChannelDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateChannelDetailsOperationCompleted(object arg) {
            if ((this.UpdateChannelDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateChannelDetailsCompleted(this, new UpdateChannelDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetCaste_SubCaste", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCaste_SubCaste(string DistId, string Userid, string Password) {
            object[] results = this.Invoke("GetCaste_SubCaste", new object[] {
                        DistId,
                        Userid,
                        Password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCaste_SubCasteAsync(string DistId, string Userid, string Password) {
            this.GetCaste_SubCasteAsync(DistId, Userid, Password, null);
        }
        
        /// <remarks/>
        public void GetCaste_SubCasteAsync(string DistId, string Userid, string Password, object userState) {
            if ((this.GetCaste_SubCasteOperationCompleted == null)) {
                this.GetCaste_SubCasteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCaste_SubCasteOperationCompleted);
            }
            this.InvokeAsync("GetCaste_SubCaste", new object[] {
                        DistId,
                        Userid,
                        Password}, this.GetCaste_SubCasteOperationCompleted, userState);
        }
        
        private void OnGetCaste_SubCasteOperationCompleted(object arg) {
            if ((this.GetCaste_SubCasteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCaste_SubCasteCompleted(this, new GetCaste_SubCasteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectRectifiedPPBsbyMRODetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectRectifiedPPBsbyMRODetails(string FromDate, string ToDate, string userid, string password) {
            object[] results = this.Invoke("SelectRectifiedPPBsbyMRODetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectRectifiedPPBsbyMRODetailsAsync(string FromDate, string ToDate, string userid, string password) {
            this.SelectRectifiedPPBsbyMRODetailsAsync(FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectRectifiedPPBsbyMRODetailsAsync(string FromDate, string ToDate, string userid, string password, object userState) {
            if ((this.SelectRectifiedPPBsbyMRODetailsOperationCompleted == null)) {
                this.SelectRectifiedPPBsbyMRODetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectRectifiedPPBsbyMRODetailsOperationCompleted);
            }
            this.InvokeAsync("SelectRectifiedPPBsbyMRODetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.SelectRectifiedPPBsbyMRODetailsOperationCompleted, userState);
        }
        
        private void OnSelectRectifiedPPBsbyMRODetailsOperationCompleted(object arg) {
            if ((this.SelectRectifiedPPBsbyMRODetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectRectifiedPPBsbyMRODetailsCompleted(this, new SelectRectifiedPPBsbyMRODetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectDepartmentDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectDepartmentDetails(string Role, string userid, string password) {
            object[] results = this.Invoke("SelectDepartmentDetails", new object[] {
                        Role,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectDepartmentDetailsAsync(string Role, string userid, string password) {
            this.SelectDepartmentDetailsAsync(Role, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectDepartmentDetailsAsync(string Role, string userid, string password, object userState) {
            if ((this.SelectDepartmentDetailsOperationCompleted == null)) {
                this.SelectDepartmentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectDepartmentDetailsOperationCompleted);
            }
            this.InvokeAsync("SelectDepartmentDetails", new object[] {
                        Role,
                        userid,
                        password}, this.SelectDepartmentDetailsOperationCompleted, userState);
        }
        
        private void OnSelectDepartmentDetailsOperationCompleted(object arg) {
            if ((this.SelectDepartmentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectDepartmentDetailsCompleted(this, new SelectDepartmentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/EPICAadhaarSeedingDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EPICAadhaarSeedingDetails(string strFromDate, string strToDate, string DistrictID, string userid, string password) {
            object[] results = this.Invoke("EPICAadhaarSeedingDetails", new object[] {
                        strFromDate,
                        strToDate,
                        DistrictID,
                        userid,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EPICAadhaarSeedingDetailsAsync(string strFromDate, string strToDate, string DistrictID, string userid, string password) {
            this.EPICAadhaarSeedingDetailsAsync(strFromDate, strToDate, DistrictID, userid, password, null);
        }
        
        /// <remarks/>
        public void EPICAadhaarSeedingDetailsAsync(string strFromDate, string strToDate, string DistrictID, string userid, string password, object userState) {
            if ((this.EPICAadhaarSeedingDetailsOperationCompleted == null)) {
                this.EPICAadhaarSeedingDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEPICAadhaarSeedingDetailsOperationCompleted);
            }
            this.InvokeAsync("EPICAadhaarSeedingDetails", new object[] {
                        strFromDate,
                        strToDate,
                        DistrictID,
                        userid,
                        password}, this.EPICAadhaarSeedingDetailsOperationCompleted, userState);
        }
        
        private void OnEPICAadhaarSeedingDetailsOperationCompleted(object arg) {
            if ((this.EPICAadhaarSeedingDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EPICAadhaarSeedingDetailsCompleted(this, new EPICAadhaarSeedingDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetTransaportDriversCount", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTransaportDriversCount(string UserId, string Password) {
            object[] results = this.Invoke("GetTransaportDriversCount", new object[] {
                        UserId,
                        Password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransaportDriversCountAsync(string UserId, string Password) {
            this.GetTransaportDriversCountAsync(UserId, Password, null);
        }
        
        /// <remarks/>
        public void GetTransaportDriversCountAsync(string UserId, string Password, object userState) {
            if ((this.GetTransaportDriversCountOperationCompleted == null)) {
                this.GetTransaportDriversCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransaportDriversCountOperationCompleted);
            }
            this.InvokeAsync("GetTransaportDriversCount", new object[] {
                        UserId,
                        Password}, this.GetTransaportDriversCountOperationCompleted, userState);
        }
        
        private void OnGetTransaportDriversCountOperationCompleted(object arg) {
            if ((this.GetTransaportDriversCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransaportDriversCountCompleted(this, new GetTransaportDriversCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectApprovedApplicantPPBDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectApprovedApplicantPPBDetails(string FromDate, string ToDate, string userid, string password) {
            object[] results = this.Invoke("SelectApprovedApplicantPPBDetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectApprovedApplicantPPBDetailsAsync(string FromDate, string ToDate, string userid, string password) {
            this.SelectApprovedApplicantPPBDetailsAsync(FromDate, ToDate, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectApprovedApplicantPPBDetailsAsync(string FromDate, string ToDate, string userid, string password, object userState) {
            if ((this.SelectApprovedApplicantPPBDetailsOperationCompleted == null)) {
                this.SelectApprovedApplicantPPBDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectApprovedApplicantPPBDetailsOperationCompleted);
            }
            this.InvokeAsync("SelectApprovedApplicantPPBDetails", new object[] {
                        FromDate,
                        ToDate,
                        userid,
                        password}, this.SelectApprovedApplicantPPBDetailsOperationCompleted, userState);
        }
        
        private void OnSelectApprovedApplicantPPBDetailsOperationCompleted(object arg) {
            if ((this.SelectApprovedApplicantPPBDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectApprovedApplicantPPBDetailsCompleted(this, new SelectApprovedApplicantPPBDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetDistrictWiseDriversCount", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDistrictWiseDriversCount(string UserId, string Password, string DistrictID) {
            object[] results = this.Invoke("GetDistrictWiseDriversCount", new object[] {
                        UserId,
                        Password,
                        DistrictID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistrictWiseDriversCountAsync(string UserId, string Password, string DistrictID) {
            this.GetDistrictWiseDriversCountAsync(UserId, Password, DistrictID, null);
        }
        
        /// <remarks/>
        public void GetDistrictWiseDriversCountAsync(string UserId, string Password, string DistrictID, object userState) {
            if ((this.GetDistrictWiseDriversCountOperationCompleted == null)) {
                this.GetDistrictWiseDriversCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistrictWiseDriversCountOperationCompleted);
            }
            this.InvokeAsync("GetDistrictWiseDriversCount", new object[] {
                        UserId,
                        Password,
                        DistrictID}, this.GetDistrictWiseDriversCountOperationCompleted, userState);
        }
        
        private void OnGetDistrictWiseDriversCountOperationCompleted(object arg) {
            if ((this.GetDistrictWiseDriversCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistrictWiseDriversCountCompleted(this, new GetDistrictWiseDriversCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetCircleWiseDriversCount", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCircleWiseDriversCount(string UserId, string Password, string DistrictID) {
            object[] results = this.Invoke("GetCircleWiseDriversCount", new object[] {
                        UserId,
                        Password,
                        DistrictID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCircleWiseDriversCountAsync(string UserId, string Password, string DistrictID) {
            this.GetCircleWiseDriversCountAsync(UserId, Password, DistrictID, null);
        }
        
        /// <remarks/>
        public void GetCircleWiseDriversCountAsync(string UserId, string Password, string DistrictID, object userState) {
            if ((this.GetCircleWiseDriversCountOperationCompleted == null)) {
                this.GetCircleWiseDriversCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCircleWiseDriversCountOperationCompleted);
            }
            this.InvokeAsync("GetCircleWiseDriversCount", new object[] {
                        UserId,
                        Password,
                        DistrictID}, this.GetCircleWiseDriversCountOperationCompleted, userState);
        }
        
        private void OnGetCircleWiseDriversCountOperationCompleted(object arg) {
            if ((this.GetCircleWiseDriversCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCircleWiseDriversCountCompleted(this, new GetCircleWiseDriversCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetMandalWiseDriversCount", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMandalWiseDriversCount(string UserId, string Password, string DistrictID, string CircleID) {
            object[] results = this.Invoke("GetMandalWiseDriversCount", new object[] {
                        UserId,
                        Password,
                        DistrictID,
                        CircleID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMandalWiseDriversCountAsync(string UserId, string Password, string DistrictID, string CircleID) {
            this.GetMandalWiseDriversCountAsync(UserId, Password, DistrictID, CircleID, null);
        }
        
        /// <remarks/>
        public void GetMandalWiseDriversCountAsync(string UserId, string Password, string DistrictID, string CircleID, object userState) {
            if ((this.GetMandalWiseDriversCountOperationCompleted == null)) {
                this.GetMandalWiseDriversCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMandalWiseDriversCountOperationCompleted);
            }
            this.InvokeAsync("GetMandalWiseDriversCount", new object[] {
                        UserId,
                        Password,
                        DistrictID,
                        CircleID}, this.GetMandalWiseDriversCountOperationCompleted, userState);
        }
        
        private void OnGetMandalWiseDriversCountOperationCompleted(object arg) {
            if ((this.GetMandalWiseDriversCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMandalWiseDriversCountCompleted(this, new GetMandalWiseDriversCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateMutationDetails_TEST", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMutationDetails_TEST(string appno) {
            object[] results = this.Invoke("UpdateMutationDetails_TEST", new object[] {
                        appno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMutationDetails_TESTAsync(string appno) {
            this.UpdateMutationDetails_TESTAsync(appno, null);
        }
        
        /// <remarks/>
        public void UpdateMutationDetails_TESTAsync(string appno, object userState) {
            if ((this.UpdateMutationDetails_TESTOperationCompleted == null)) {
                this.UpdateMutationDetails_TESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMutationDetails_TESTOperationCompleted);
            }
            this.InvokeAsync("UpdateMutationDetails_TEST", new object[] {
                        appno}, this.UpdateMutationDetails_TESTOperationCompleted, userState);
        }
        
        private void OnUpdateMutationDetails_TESTOperationCompleted(object arg) {
            if ((this.UpdateMutationDetails_TESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMutationDetails_TESTCompleted(this, new UpdateMutationDetails_TESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateApplicationDetails_AdditionofSurvey", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateApplicationDetails_AdditionofSurvey(string appno, string status, string remarks, string updatedby, string surveyno, string userid, string password) {
            object[] results = this.Invoke("UpdateApplicationDetails_AdditionofSurvey", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        surveyno,
                        userid,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_AdditionofSurveyAsync(string appno, string status, string remarks, string updatedby, string surveyno, string userid, string password) {
            this.UpdateApplicationDetails_AdditionofSurveyAsync(appno, status, remarks, updatedby, surveyno, userid, password, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_AdditionofSurveyAsync(string appno, string status, string remarks, string updatedby, string surveyno, string userid, string password, object userState) {
            if ((this.UpdateApplicationDetails_AdditionofSurveyOperationCompleted == null)) {
                this.UpdateApplicationDetails_AdditionofSurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationDetails_AdditionofSurveyOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationDetails_AdditionofSurvey", new object[] {
                        appno,
                        status,
                        remarks,
                        updatedby,
                        surveyno,
                        userid,
                        password}, this.UpdateApplicationDetails_AdditionofSurveyOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationDetails_AdditionofSurveyOperationCompleted(object arg) {
            if ((this.UpdateApplicationDetails_AdditionofSurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationDetails_AdditionofSurveyCompleted(this, new UpdateApplicationDetails_AdditionofSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SendEmailNew", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendEmailNew(string emailid, string userid, string CustomerFirstname, string CustomerLatsname) {
            object[] results = this.Invoke("SendEmailNew", new object[] {
                        emailid,
                        userid,
                        CustomerFirstname,
                        CustomerLatsname});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailNewAsync(string emailid, string userid, string CustomerFirstname, string CustomerLatsname) {
            this.SendEmailNewAsync(emailid, userid, CustomerFirstname, CustomerLatsname, null);
        }
        
        /// <remarks/>
        public void SendEmailNewAsync(string emailid, string userid, string CustomerFirstname, string CustomerLatsname, object userState) {
            if ((this.SendEmailNewOperationCompleted == null)) {
                this.SendEmailNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailNewOperationCompleted);
            }
            this.InvokeAsync("SendEmailNew", new object[] {
                        emailid,
                        userid,
                        CustomerFirstname,
                        CustomerLatsname}, this.SendEmailNewOperationCompleted, userState);
        }
        
        private void OnSendEmailNewOperationCompleted(object arg) {
            if ((this.SendEmailNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailNewCompleted(this, new SendEmailNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/RECONCILATION_APONLINETRANSACTIONS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RECONCILATION_APONLINETRANSACTIONS(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD) {
            object[] results = this.Invoke("RECONCILATION_APONLINETRANSACTIONS", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RECONCILATION_APONLINETRANSACTIONSAsync(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD) {
            this.RECONCILATION_APONLINETRANSACTIONSAsync(FROMDATE, TODATE, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void RECONCILATION_APONLINETRANSACTIONSAsync(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD, object userState) {
            if ((this.RECONCILATION_APONLINETRANSACTIONSOperationCompleted == null)) {
                this.RECONCILATION_APONLINETRANSACTIONSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRECONCILATION_APONLINETRANSACTIONSOperationCompleted);
            }
            this.InvokeAsync("RECONCILATION_APONLINETRANSACTIONS", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD}, this.RECONCILATION_APONLINETRANSACTIONSOperationCompleted, userState);
        }
        
        private void OnRECONCILATION_APONLINETRANSACTIONSOperationCompleted(object arg) {
            if ((this.RECONCILATION_APONLINETRANSACTIONSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RECONCILATION_APONLINETRANSACTIONSCompleted(this, new RECONCILATION_APONLINETRANSACTIONSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/RECONCILATION_APONLINEDETAILS_SSDG", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RECONCILATION_APONLINEDETAILS_SSDG(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD) {
            object[] results = this.Invoke("RECONCILATION_APONLINEDETAILS_SSDG", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RECONCILATION_APONLINEDETAILS_SSDGAsync(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD) {
            this.RECONCILATION_APONLINEDETAILS_SSDGAsync(FROMDATE, TODATE, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void RECONCILATION_APONLINEDETAILS_SSDGAsync(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD, object userState) {
            if ((this.RECONCILATION_APONLINEDETAILS_SSDGOperationCompleted == null)) {
                this.RECONCILATION_APONLINEDETAILS_SSDGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRECONCILATION_APONLINEDETAILS_SSDGOperationCompleted);
            }
            this.InvokeAsync("RECONCILATION_APONLINEDETAILS_SSDG", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD}, this.RECONCILATION_APONLINEDETAILS_SSDGOperationCompleted, userState);
        }
        
        private void OnRECONCILATION_APONLINEDETAILS_SSDGOperationCompleted(object arg) {
            if ((this.RECONCILATION_APONLINEDETAILS_SSDGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RECONCILATION_APONLINEDETAILS_SSDGCompleted(this, new RECONCILATION_APONLINEDETAILS_SSDGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/RECONCILATION_EFMS_MIS_MEESEVA", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RECONCILATION_EFMS_MIS_MEESEVA(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD) {
            object[] results = this.Invoke("RECONCILATION_EFMS_MIS_MEESEVA", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RECONCILATION_EFMS_MIS_MEESEVAAsync(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD) {
            this.RECONCILATION_EFMS_MIS_MEESEVAAsync(FROMDATE, TODATE, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void RECONCILATION_EFMS_MIS_MEESEVAAsync(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD, object userState) {
            if ((this.RECONCILATION_EFMS_MIS_MEESEVAOperationCompleted == null)) {
                this.RECONCILATION_EFMS_MIS_MEESEVAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRECONCILATION_EFMS_MIS_MEESEVAOperationCompleted);
            }
            this.InvokeAsync("RECONCILATION_EFMS_MIS_MEESEVA", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD}, this.RECONCILATION_EFMS_MIS_MEESEVAOperationCompleted, userState);
        }
        
        private void OnRECONCILATION_EFMS_MIS_MEESEVAOperationCompleted(object arg) {
            if ((this.RECONCILATION_EFMS_MIS_MEESEVACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RECONCILATION_EFMS_MIS_MEESEVACompleted(this, new RECONCILATION_EFMS_MIS_MEESEVACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/RECONCILATION_EFMS_MIS_SSDG", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RECONCILATION_EFMS_MIS_SSDG(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD) {
            object[] results = this.Invoke("RECONCILATION_EFMS_MIS_SSDG", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RECONCILATION_EFMS_MIS_SSDGAsync(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD) {
            this.RECONCILATION_EFMS_MIS_SSDGAsync(FROMDATE, TODATE, USERID, PASSWORD, null);
        }
        
        /// <remarks/>
        public void RECONCILATION_EFMS_MIS_SSDGAsync(System.DateTime FROMDATE, System.DateTime TODATE, string USERID, string PASSWORD, object userState) {
            if ((this.RECONCILATION_EFMS_MIS_SSDGOperationCompleted == null)) {
                this.RECONCILATION_EFMS_MIS_SSDGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRECONCILATION_EFMS_MIS_SSDGOperationCompleted);
            }
            this.InvokeAsync("RECONCILATION_EFMS_MIS_SSDG", new object[] {
                        FROMDATE,
                        TODATE,
                        USERID,
                        PASSWORD}, this.RECONCILATION_EFMS_MIS_SSDGOperationCompleted, userState);
        }
        
        private void OnRECONCILATION_EFMS_MIS_SSDGOperationCompleted(object arg) {
            if ((this.RECONCILATION_EFMS_MIS_SSDGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RECONCILATION_EFMS_MIS_SSDGCompleted(this, new RECONCILATION_EFMS_MIS_SSDGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/UpdateApplicationDetails_PattadarPassbook_New", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateApplicationDetails_PattadarPassbook_New(
                    string appno, 
                    string SerialNo, 
                    string KhathaNo, 
                    string PPBSerialNo, 
                    string status, 
                    string MroAddress, 
                    string remarks, 
                    string updatedby, 
                    string userid, 
                    string password, 
                    string UpdatedDate, 
                    PPB objP, 
                    string appnos, 
                    string UID, 
                    string Aadhaarno, 
                    string Gender, 
                    string MobileNumber) {
            object[] results = this.Invoke("UpdateApplicationDetails_PattadarPassbook_New", new object[] {
                        appno,
                        SerialNo,
                        KhathaNo,
                        PPBSerialNo,
                        status,
                        MroAddress,
                        remarks,
                        updatedby,
                        userid,
                        password,
                        UpdatedDate,
                        objP,
                        appnos,
                        UID,
                        Aadhaarno,
                        Gender,
                        MobileNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_PattadarPassbook_NewAsync(
                    string appno, 
                    string SerialNo, 
                    string KhathaNo, 
                    string PPBSerialNo, 
                    string status, 
                    string MroAddress, 
                    string remarks, 
                    string updatedby, 
                    string userid, 
                    string password, 
                    string UpdatedDate, 
                    PPB objP, 
                    string appnos, 
                    string UID, 
                    string Aadhaarno, 
                    string Gender, 
                    string MobileNumber) {
            this.UpdateApplicationDetails_PattadarPassbook_NewAsync(appno, SerialNo, KhathaNo, PPBSerialNo, status, MroAddress, remarks, updatedby, userid, password, UpdatedDate, objP, appnos, UID, Aadhaarno, Gender, MobileNumber, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationDetails_PattadarPassbook_NewAsync(
                    string appno, 
                    string SerialNo, 
                    string KhathaNo, 
                    string PPBSerialNo, 
                    string status, 
                    string MroAddress, 
                    string remarks, 
                    string updatedby, 
                    string userid, 
                    string password, 
                    string UpdatedDate, 
                    PPB objP, 
                    string appnos, 
                    string UID, 
                    string Aadhaarno, 
                    string Gender, 
                    string MobileNumber, 
                    object userState) {
            if ((this.UpdateApplicationDetails_PattadarPassbook_NewOperationCompleted == null)) {
                this.UpdateApplicationDetails_PattadarPassbook_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationDetails_PattadarPassbook_NewOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationDetails_PattadarPassbook_New", new object[] {
                        appno,
                        SerialNo,
                        KhathaNo,
                        PPBSerialNo,
                        status,
                        MroAddress,
                        remarks,
                        updatedby,
                        userid,
                        password,
                        UpdatedDate,
                        objP,
                        appnos,
                        UID,
                        Aadhaarno,
                        Gender,
                        MobileNumber}, this.UpdateApplicationDetails_PattadarPassbook_NewOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationDetails_PattadarPassbook_NewOperationCompleted(object arg) {
            if ((this.UpdateApplicationDetails_PattadarPassbook_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationDetails_PattadarPassbook_NewCompleted(this, new UpdateApplicationDetails_PattadarPassbook_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/APOnlineReconcilationTransCount", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string APOnlineReconcilationTransCount(string userid, string password, string fromDate, string toDate) {
            object[] results = this.Invoke("APOnlineReconcilationTransCount", new object[] {
                        userid,
                        password,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void APOnlineReconcilationTransCountAsync(string userid, string password, string fromDate, string toDate) {
            this.APOnlineReconcilationTransCountAsync(userid, password, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void APOnlineReconcilationTransCountAsync(string userid, string password, string fromDate, string toDate, object userState) {
            if ((this.APOnlineReconcilationTransCountOperationCompleted == null)) {
                this.APOnlineReconcilationTransCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPOnlineReconcilationTransCountOperationCompleted);
            }
            this.InvokeAsync("APOnlineReconcilationTransCount", new object[] {
                        userid,
                        password,
                        fromDate,
                        toDate}, this.APOnlineReconcilationTransCountOperationCompleted, userState);
        }
        
        private void OnAPOnlineReconcilationTransCountOperationCompleted(object arg) {
            if ((this.APOnlineReconcilationTransCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.APOnlineReconcilationTransCountCompleted(this, new APOnlineReconcilationTransCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/APOnlineReconcilationTransCount_SSDG", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string APOnlineReconcilationTransCount_SSDG(string userid, string password, string fromDate, string toDate) {
            object[] results = this.Invoke("APOnlineReconcilationTransCount_SSDG", new object[] {
                        userid,
                        password,
                        fromDate,
                        toDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void APOnlineReconcilationTransCount_SSDGAsync(string userid, string password, string fromDate, string toDate) {
            this.APOnlineReconcilationTransCount_SSDGAsync(userid, password, fromDate, toDate, null);
        }
        
        /// <remarks/>
        public void APOnlineReconcilationTransCount_SSDGAsync(string userid, string password, string fromDate, string toDate, object userState) {
            if ((this.APOnlineReconcilationTransCount_SSDGOperationCompleted == null)) {
                this.APOnlineReconcilationTransCount_SSDGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAPOnlineReconcilationTransCount_SSDGOperationCompleted);
            }
            this.InvokeAsync("APOnlineReconcilationTransCount_SSDG", new object[] {
                        userid,
                        password,
                        fromDate,
                        toDate}, this.APOnlineReconcilationTransCount_SSDGOperationCompleted, userState);
        }
        
        private void OnAPOnlineReconcilationTransCount_SSDGOperationCompleted(object arg) {
            if ((this.APOnlineReconcilationTransCount_SSDGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.APOnlineReconcilationTransCount_SSDGCompleted(this, new APOnlineReconcilationTransCount_SSDGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/SelectMUTPPBApproveRejDistDetails", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SelectMUTPPBApproveRejDistDetails(string FromDate, string ToDate, string Distcode, string Mandalcode, string userid, string password) {
            object[] results = this.Invoke("SelectMUTPPBApproveRejDistDetails", new object[] {
                        FromDate,
                        ToDate,
                        Distcode,
                        Mandalcode,
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SelectMUTPPBApproveRejDistDetailsAsync(string FromDate, string ToDate, string Distcode, string Mandalcode, string userid, string password) {
            this.SelectMUTPPBApproveRejDistDetailsAsync(FromDate, ToDate, Distcode, Mandalcode, userid, password, null);
        }
        
        /// <remarks/>
        public void SelectMUTPPBApproveRejDistDetailsAsync(string FromDate, string ToDate, string Distcode, string Mandalcode, string userid, string password, object userState) {
            if ((this.SelectMUTPPBApproveRejDistDetailsOperationCompleted == null)) {
                this.SelectMUTPPBApproveRejDistDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectMUTPPBApproveRejDistDetailsOperationCompleted);
            }
            this.InvokeAsync("SelectMUTPPBApproveRejDistDetails", new object[] {
                        FromDate,
                        ToDate,
                        Distcode,
                        Mandalcode,
                        userid,
                        password}, this.SelectMUTPPBApproveRejDistDetailsOperationCompleted, userState);
        }
        
        private void OnSelectMUTPPBApproveRejDistDetailsOperationCompleted(object arg) {
            if ((this.SelectMUTPPBApproveRejDistDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectMUTPPBApproveRejDistDetailsCompleted(this, new SelectMUTPPBApproveRejDistDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetPrintingOfTittleDeedApprovedRequests", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPrintingOfTittleDeedApprovedRequests(string userid, string password) {
            object[] results = this.Invoke("GetPrintingOfTittleDeedApprovedRequests", new object[] {
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintingOfTittleDeedApprovedRequestsAsync(string userid, string password) {
            this.GetPrintingOfTittleDeedApprovedRequestsAsync(userid, password, null);
        }
        
        /// <remarks/>
        public void GetPrintingOfTittleDeedApprovedRequestsAsync(string userid, string password, object userState) {
            if ((this.GetPrintingOfTittleDeedApprovedRequestsOperationCompleted == null)) {
                this.GetPrintingOfTittleDeedApprovedRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintingOfTittleDeedApprovedRequestsOperationCompleted);
            }
            this.InvokeAsync("GetPrintingOfTittleDeedApprovedRequests", new object[] {
                        userid,
                        password}, this.GetPrintingOfTittleDeedApprovedRequestsOperationCompleted, userState);
        }
        
        private void OnGetPrintingOfTittleDeedApprovedRequestsOperationCompleted(object arg) {
            if ((this.GetPrintingOfTittleDeedApprovedRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintingOfTittleDeedApprovedRequestsCompleted(this, new GetPrintingOfTittleDeedApprovedRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetApproved_PPBS", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetApproved_PPBS(string userid, string password) {
            object[] results = this.Invoke("GetApproved_PPBS", new object[] {
                        userid,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetApproved_PPBSAsync(string userid, string password) {
            this.GetApproved_PPBSAsync(userid, password, null);
        }
        
        /// <remarks/>
        public void GetApproved_PPBSAsync(string userid, string password, object userState) {
            if ((this.GetApproved_PPBSOperationCompleted == null)) {
                this.GetApproved_PPBSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApproved_PPBSOperationCompleted);
            }
            this.InvokeAsync("GetApproved_PPBS", new object[] {
                        userid,
                        password}, this.GetApproved_PPBSOperationCompleted, userState);
        }
        
        private void OnGetApproved_PPBSOperationCompleted(object arg) {
            if ((this.GetApproved_PPBSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApproved_PPBSCompleted(this, new GetApproved_PPBSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetFM201617DetailsByDMV", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFM201617DetailsByDMV(string UserId, string Password, string District, string Mandal, string Village) {
            object[] results = this.Invoke("GetFM201617DetailsByDMV", new object[] {
                        UserId,
                        Password,
                        District,
                        Mandal,
                        Village});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFM201617DetailsByDMVAsync(string UserId, string Password, string District, string Mandal, string Village) {
            this.GetFM201617DetailsByDMVAsync(UserId, Password, District, Mandal, Village, null);
        }
        
        /// <remarks/>
        public void GetFM201617DetailsByDMVAsync(string UserId, string Password, string District, string Mandal, string Village, object userState) {
            if ((this.GetFM201617DetailsByDMVOperationCompleted == null)) {
                this.GetFM201617DetailsByDMVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFM201617DetailsByDMVOperationCompleted);
            }
            this.InvokeAsync("GetFM201617DetailsByDMV", new object[] {
                        UserId,
                        Password,
                        District,
                        Mandal,
                        Village}, this.GetFM201617DetailsByDMVOperationCompleted, userState);
        }
        
        private void OnGetFM201617DetailsByDMVOperationCompleted(object arg) {
            if ((this.GetFM201617DetailsByDMVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFM201617DetailsByDMVCompleted(this, new GetFM201617DetailsByDMVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AP.org/GetFM201617DetailsByAadhar", RequestNamespace="http://AP.org/", ResponseNamespace="http://AP.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFM201617DetailsByAadhar(string UserId, string Password, string AadharNo) {
            object[] results = this.Invoke("GetFM201617DetailsByAadhar", new object[] {
                        UserId,
                        Password,
                        AadharNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFM201617DetailsByAadharAsync(string UserId, string Password, string AadharNo) {
            this.GetFM201617DetailsByAadharAsync(UserId, Password, AadharNo, null);
        }
        
        /// <remarks/>
        public void GetFM201617DetailsByAadharAsync(string UserId, string Password, string AadharNo, object userState) {
            if ((this.GetFM201617DetailsByAadharOperationCompleted == null)) {
                this.GetFM201617DetailsByAadharOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFM201617DetailsByAadharOperationCompleted);
            }
            this.InvokeAsync("GetFM201617DetailsByAadhar", new object[] {
                        UserId,
                        Password,
                        AadharNo}, this.GetFM201617DetailsByAadharOperationCompleted, userState);
        }
        
        private void OnGetFM201617DetailsByAadharOperationCompleted(object arg) {
            if ((this.GetFM201617DetailsByAadharCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFM201617DetailsByAadharCompleted(this, new GetFM201617DetailsByAadharCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/ActiveSite/")]
    public partial class PPB {
        
        private string photoField;
        
        private string addressField;
        
        private string casteCategoryField;
        
        private string mandalNameField;
        
        private string divisionNameField;
        
        private string dnameField;
        
        private string ppbSerialNoField;
        
        private ROR_Str[] rORsField;
        
        private string procdg_noField;
        
        private string procdg_dateField;
        
        private string reg_noField;
        
        private string reg_dateField;
        
        /// <remarks/>
        public string Photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string CasteCategory {
            get {
                return this.casteCategoryField;
            }
            set {
                this.casteCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string MandalName {
            get {
                return this.mandalNameField;
            }
            set {
                this.mandalNameField = value;
            }
        }
        
        /// <remarks/>
        public string DivisionName {
            get {
                return this.divisionNameField;
            }
            set {
                this.divisionNameField = value;
            }
        }
        
        /// <remarks/>
        public string dname {
            get {
                return this.dnameField;
            }
            set {
                this.dnameField = value;
            }
        }
        
        /// <remarks/>
        public string ppbSerialNo {
            get {
                return this.ppbSerialNoField;
            }
            set {
                this.ppbSerialNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ROR_Str[] RORs {
            get {
                return this.rORsField;
            }
            set {
                this.rORsField = value;
            }
        }
        
        /// <remarks/>
        public string procdg_no {
            get {
                return this.procdg_noField;
            }
            set {
                this.procdg_noField = value;
            }
        }
        
        /// <remarks/>
        public string procdg_date {
            get {
                return this.procdg_dateField;
            }
            set {
                this.procdg_dateField = value;
            }
        }
        
        /// <remarks/>
        public string reg_no {
            get {
                return this.reg_noField;
            }
            set {
                this.reg_noField = value;
            }
        }
        
        /// <remarks/>
        public string reg_date {
            get {
                return this.reg_dateField;
            }
            set {
                this.reg_dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/ActiveSite/")]
    public partial class ROR_Str {
        
        private int pSerialNoField;
        
        private string pSurvey_noField;
        
        private decimal pTotal_ExtentField;
        
        private decimal pUncultivated_LandField;
        
        private decimal pCultivatable_LandField;
        
        private string pLand_NatureField;
        
        private decimal pTaxField;
        
        private string pLand_ClassificationField;
        
        private string pWater_ResourceField;
        
        private string pAyakat_ExtentField;
        
        private long pKhata_NumberField;
        
        private string pPattadar_NameField;
        
        private string pOccupant_NameField;
        
        private string pOccupant_ExtentField;
        
        private string pEnjoyment_NatureField;
        
        private string pOccupant_Father_NameField;
        
        private string pPattadar_Father_NameField;
        
        private string pVillage_NameField;
        
        private decimal pVillage_CodeField;
        
        private string pDelete_FlagField;
        
        private string pMutated_DateField;
        
        private string pBase_Survey_NoField;
        
        private string pSignatureField;
        
        private bool pSignatureCheckedField;
        
        private string pAcquiredReasonField;
        
        private string pLand_Extent_UnitsField;
        
        private long pPassbook_NumberField;
        
        private string mro_proceeding_noField;
        
        private string date_of_proceedingsField;
        
        private string col9Field;
        
        private string col10Field;
        
        private string col11Field;
        
        private string col12Field;
        
        private string col13Field;
        
        private string col14Field;
        
        /// <remarks/>
        public int pSerialNo {
            get {
                return this.pSerialNoField;
            }
            set {
                this.pSerialNoField = value;
            }
        }
        
        /// <remarks/>
        public string pSurvey_no {
            get {
                return this.pSurvey_noField;
            }
            set {
                this.pSurvey_noField = value;
            }
        }
        
        /// <remarks/>
        public decimal pTotal_Extent {
            get {
                return this.pTotal_ExtentField;
            }
            set {
                this.pTotal_ExtentField = value;
            }
        }
        
        /// <remarks/>
        public decimal pUncultivated_Land {
            get {
                return this.pUncultivated_LandField;
            }
            set {
                this.pUncultivated_LandField = value;
            }
        }
        
        /// <remarks/>
        public decimal pCultivatable_Land {
            get {
                return this.pCultivatable_LandField;
            }
            set {
                this.pCultivatable_LandField = value;
            }
        }
        
        /// <remarks/>
        public string pLand_Nature {
            get {
                return this.pLand_NatureField;
            }
            set {
                this.pLand_NatureField = value;
            }
        }
        
        /// <remarks/>
        public decimal pTax {
            get {
                return this.pTaxField;
            }
            set {
                this.pTaxField = value;
            }
        }
        
        /// <remarks/>
        public string pLand_Classification {
            get {
                return this.pLand_ClassificationField;
            }
            set {
                this.pLand_ClassificationField = value;
            }
        }
        
        /// <remarks/>
        public string pWater_Resource {
            get {
                return this.pWater_ResourceField;
            }
            set {
                this.pWater_ResourceField = value;
            }
        }
        
        /// <remarks/>
        public string pAyakat_Extent {
            get {
                return this.pAyakat_ExtentField;
            }
            set {
                this.pAyakat_ExtentField = value;
            }
        }
        
        /// <remarks/>
        public long pKhata_Number {
            get {
                return this.pKhata_NumberField;
            }
            set {
                this.pKhata_NumberField = value;
            }
        }
        
        /// <remarks/>
        public string pPattadar_Name {
            get {
                return this.pPattadar_NameField;
            }
            set {
                this.pPattadar_NameField = value;
            }
        }
        
        /// <remarks/>
        public string pOccupant_Name {
            get {
                return this.pOccupant_NameField;
            }
            set {
                this.pOccupant_NameField = value;
            }
        }
        
        /// <remarks/>
        public string pOccupant_Extent {
            get {
                return this.pOccupant_ExtentField;
            }
            set {
                this.pOccupant_ExtentField = value;
            }
        }
        
        /// <remarks/>
        public string pEnjoyment_Nature {
            get {
                return this.pEnjoyment_NatureField;
            }
            set {
                this.pEnjoyment_NatureField = value;
            }
        }
        
        /// <remarks/>
        public string pOccupant_Father_Name {
            get {
                return this.pOccupant_Father_NameField;
            }
            set {
                this.pOccupant_Father_NameField = value;
            }
        }
        
        /// <remarks/>
        public string pPattadar_Father_Name {
            get {
                return this.pPattadar_Father_NameField;
            }
            set {
                this.pPattadar_Father_NameField = value;
            }
        }
        
        /// <remarks/>
        public string pVillage_Name {
            get {
                return this.pVillage_NameField;
            }
            set {
                this.pVillage_NameField = value;
            }
        }
        
        /// <remarks/>
        public decimal pVillage_Code {
            get {
                return this.pVillage_CodeField;
            }
            set {
                this.pVillage_CodeField = value;
            }
        }
        
        /// <remarks/>
        public string pDelete_Flag {
            get {
                return this.pDelete_FlagField;
            }
            set {
                this.pDelete_FlagField = value;
            }
        }
        
        /// <remarks/>
        public string pMutated_Date {
            get {
                return this.pMutated_DateField;
            }
            set {
                this.pMutated_DateField = value;
            }
        }
        
        /// <remarks/>
        public string pBase_Survey_No {
            get {
                return this.pBase_Survey_NoField;
            }
            set {
                this.pBase_Survey_NoField = value;
            }
        }
        
        /// <remarks/>
        public string pSignature {
            get {
                return this.pSignatureField;
            }
            set {
                this.pSignatureField = value;
            }
        }
        
        /// <remarks/>
        public bool pSignatureChecked {
            get {
                return this.pSignatureCheckedField;
            }
            set {
                this.pSignatureCheckedField = value;
            }
        }
        
        /// <remarks/>
        public string pAcquiredReason {
            get {
                return this.pAcquiredReasonField;
            }
            set {
                this.pAcquiredReasonField = value;
            }
        }
        
        /// <remarks/>
        public string pLand_Extent_Units {
            get {
                return this.pLand_Extent_UnitsField;
            }
            set {
                this.pLand_Extent_UnitsField = value;
            }
        }
        
        /// <remarks/>
        public long pPassbook_Number {
            get {
                return this.pPassbook_NumberField;
            }
            set {
                this.pPassbook_NumberField = value;
            }
        }
        
        /// <remarks/>
        public string mro_proceeding_no {
            get {
                return this.mro_proceeding_noField;
            }
            set {
                this.mro_proceeding_noField = value;
            }
        }
        
        /// <remarks/>
        public string date_of_proceedings {
            get {
                return this.date_of_proceedingsField;
            }
            set {
                this.date_of_proceedingsField = value;
            }
        }
        
        /// <remarks/>
        public string Col9 {
            get {
                return this.col9Field;
            }
            set {
                this.col9Field = value;
            }
        }
        
        /// <remarks/>
        public string Col10 {
            get {
                return this.col10Field;
            }
            set {
                this.col10Field = value;
            }
        }
        
        /// <remarks/>
        public string Col11 {
            get {
                return this.col11Field;
            }
            set {
                this.col11Field = value;
            }
        }
        
        /// <remarks/>
        public string Col12 {
            get {
                return this.col12Field;
            }
            set {
                this.col12Field = value;
            }
        }
        
        /// <remarks/>
        public string Col13 {
            get {
                return this.col13Field;
            }
            set {
                this.col13Field = value;
            }
        }
        
        /// <remarks/>
        public string Col14 {
            get {
                return this.col14Field;
            }
            set {
                this.col14Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void insertbarcodeCompletedEventHandler(object sender, insertbarcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class insertbarcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal insertbarcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GETAPPROVEDAPPLICATIONSCompletedEventHandler(object sender, GETAPPROVEDAPPLICATIONSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETAPPROVEDAPPLICATIONSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETAPPROVEDAPPLICATIONSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetApplicationDetails_1100CompletedEventHandler(object sender, GetApplicationDetails_1100CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationDetails_1100CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationDetails_1100CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetApplicationDetails_1100_hugeCompletedEventHandler(object sender, GetApplicationDetails_1100_hugeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationDetails_1100_hugeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationDetails_1100_hugeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMeesevaUsers_1100CompletedEventHandler(object sender, GetMeesevaUsers_1100CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeesevaUsers_1100CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeesevaUsers_1100CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFacsimileSignatureCompletedEventHandler(object sender, GetFacsimileSignatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacsimileSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacsimileSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateEPICApplicationStatusCompletedEventHandler(object sender, UpdateEPICApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEPICApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEPICApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFM201718DetailsByDMVCompletedEventHandler(object sender, GetFM201718DetailsByDMVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFM201718DetailsByDMVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFM201718DetailsByDMVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void TRANSACTIONDETAILSCompletedEventHandler(object sender, TRANSACTIONDETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TRANSACTIONDETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TRANSACTIONDETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SERVICETWISETRANSACTIONSCompletedEventHandler(object sender, SERVICETWISETRANSACTIONSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SERVICETWISETRANSACTIONSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SERVICETWISETRANSACTIONSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SPDCL_UPDATECONSUMERCOMPLAINTSTATUSCompletedEventHandler(object sender, SPDCL_UPDATECONSUMERCOMPLAINTSTATUSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SPDCL_UPDATECONSUMERCOMPLAINTSTATUSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SPDCL_UPDATECONSUMERCOMPLAINTSTATUSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MEESEVAABSTRACT_CATACompletedEventHandler(object sender, MEESEVAABSTRACT_CATACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MEESEVAABSTRACT_CATACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MEESEVAABSTRACT_CATACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MEESEVAABSTRACT_CATBCompletedEventHandler(object sender, MEESEVAABSTRACT_CATBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MEESEVAABSTRACT_CATBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MEESEVAABSTRACT_CATBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DEPARTMENTWISEDETAILS_CATACompletedEventHandler(object sender, DEPARTMENTWISEDETAILS_CATACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DEPARTMENTWISEDETAILS_CATACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DEPARTMENTWISEDETAILS_CATACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DEPARTMENTWISEDETAILS_CATBCompletedEventHandler(object sender, DEPARTMENTWISEDETAILS_CATBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DEPARTMENTWISEDETAILS_CATBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DEPARTMENTWISEDETAILS_CATBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SERVICEWISEDETAILSCompletedEventHandler(object sender, SERVICEWISEDETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SERVICEWISEDETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SERVICEWISEDETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DISTRICTWISEDETAILSCompletedEventHandler(object sender, DISTRICTWISEDETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DISTRICTWISEDETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DISTRICTWISEDETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GETMEESEVACENTERDETAILSCompletedEventHandler(object sender, GETMEESEVACENTERDETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETMEESEVACENTERDETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETMEESEVACENTERDETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GETMEESEVACENTERPHOTOSCompletedEventHandler(object sender, GETMEESEVACENTERPHOTOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETMEESEVACENTERPHOTOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETMEESEVACENTERPHOTOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ONLINE_DEPARTMENTWISEABSTRACTCompletedEventHandler(object sender, ONLINE_DEPARTMENTWISEABSTRACTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ONLINE_DEPARTMENTWISEABSTRACTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ONLINE_DEPARTMENTWISEABSTRACTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ONLINE_DEPARTMENTWISEDETAILSCompletedEventHandler(object sender, ONLINE_DEPARTMENTWISEDETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ONLINE_DEPARTMENTWISEDETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ONLINE_DEPARTMENTWISEDETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ONLINE_NEWDEPARTMENTWISEABSTRACTCompletedEventHandler(object sender, ONLINE_NEWDEPARTMENTWISEABSTRACTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ONLINE_NEWDEPARTMENTWISEABSTRACTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ONLINE_NEWDEPARTMENTWISEABSTRACTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ONLINE_NEWDEPARTMENTWISEDETAILSCompletedEventHandler(object sender, ONLINE_NEWDEPARTMENTWISEDETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ONLINE_NEWDEPARTMENTWISEDETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ONLINE_NEWDEPARTMENTWISEDETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DEPARTMENTWISEDETAILS_LEVEL2CompletedEventHandler(object sender, DEPARTMENTWISEDETAILS_LEVEL2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DEPARTMENTWISEDETAILS_LEVEL2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DEPARTMENTWISEDETAILS_LEVEL2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DEPARTMENTWISEDETAILS_LEVEL3CompletedEventHandler(object sender, DEPARTMENTWISEDETAILS_LEVEL3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DEPARTMENTWISEDETAILS_LEVEL3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DEPARTMENTWISEDETAILS_LEVEL3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SERVICEWISEDETAILS_LEVEL2CompletedEventHandler(object sender, SERVICEWISEDETAILS_LEVEL2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SERVICEWISEDETAILS_LEVEL2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SERVICEWISEDETAILS_LEVEL2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DISTRICTWISEDETAILS_LEVEL2CompletedEventHandler(object sender, DISTRICTWISEDETAILS_LEVEL2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DISTRICTWISEDETAILS_LEVEL2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DISTRICTWISEDETAILS_LEVEL2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DISTRICTWISEDETAILS_LEVEL3CompletedEventHandler(object sender, DISTRICTWISEDETAILS_LEVEL3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DISTRICTWISEDETAILS_LEVEL3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DISTRICTWISEDETAILS_LEVEL3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void OFFICERWISEDETAILSCompletedEventHandler(object sender, OFFICERWISEDETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OFFICERWISEDETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OFFICERWISEDETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCatAandCatBdataCompletedEventHandler(object sender, GetCatAandCatBdataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatAandCatBdataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCatAandCatBdataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GETMINERALCONCESSIONAPPLICATIONSCompletedEventHandler(object sender, GETMINERALCONCESSIONAPPLICATIONSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETMINERALCONCESSIONAPPLICATIONSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETMINERALCONCESSIONAPPLICATIONSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRejectionStatusCompletedEventHandler(object sender, GetRejectionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRejectionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRejectionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Get_CasteCodeByApplicationNumberCompletedEventHandler(object sender, Get_CasteCodeByApplicationNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CasteCodeByApplicationNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CasteCodeByApplicationNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CORE_DETAILSCompletedEventHandler(object sender, CORE_DETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CORE_DETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CORE_DETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GET_FMTRACTORS_DISTRICTWISECOUNTCompletedEventHandler(object sender, GET_FMTRACTORS_DISTRICTWISECOUNTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_FMTRACTORS_DISTRICTWISECOUNTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_FMTRACTORS_DISTRICTWISECOUNTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GET_FMTRACTORS_MANDALWISECOUNTCompletedEventHandler(object sender, GET_FMTRACTORS_MANDALWISECOUNTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_FMTRACTORS_MANDALWISECOUNTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_FMTRACTORS_MANDALWISECOUNTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GET_FMTRACTORS_VILLAGEWISECOUNTCompletedEventHandler(object sender, GET_FMTRACTORS_VILLAGEWISECOUNTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GET_FMTRACTORS_VILLAGEWISECOUNTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GET_FMTRACTORS_VILLAGEWISECOUNTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GETMEESEVACOUNTCompletedEventHandler(object sender, GETMEESEVACOUNTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETMEESEVACOUNTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETMEESEVACOUNTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetServiceWise_ApplicationDetailsCompletedEventHandler(object sender, GetServiceWise_ApplicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceWise_ApplicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceWise_ApplicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CPK_UPDATEAPPNOCompletedEventHandler(object sender, CPK_UPDATEAPPNOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CPK_UPDATEAPPNOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CPK_UPDATEAPPNOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GETAPPROVEDAPPLICATIONPDFCompletedEventHandler(object sender, GETAPPROVEDAPPLICATIONPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETAPPROVEDAPPLICATIONPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETAPPROVEDAPPLICATIONPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SadaBainama_StatusUpdateDetailsCompletedEventHandler(object sender, SadaBainama_StatusUpdateDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SadaBainama_StatusUpdateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SadaBainama_StatusUpdateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SadaBainama_Get_SLAMonitoringDetailsCompletedEventHandler(object sender, SadaBainama_Get_SLAMonitoringDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SadaBainama_Get_SLAMonitoringDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SadaBainama_Get_SLAMonitoringDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VCDetails_ServiceList22ACompletedEventHandler(object sender, VCDetails_ServiceList22ACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VCDetails_ServiceList22ACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VCDetails_ServiceList22ACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VCDetails_DottedLandsCompletedEventHandler(object sender, VCDetails_DottedLandsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VCDetails_DottedLandsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VCDetails_DottedLandsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ServiceList22A_ApprovedListDetailsCompletedEventHandler(object sender, ServiceList22A_ApprovedListDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceList22A_ApprovedListDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceList22A_ApprovedListDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void PattaSubDivision_Get_SLAMonitoringDetailsCompletedEventHandler(object sender, PattaSubDivision_Get_SLAMonitoringDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PattaSubDivision_Get_SLAMonitoringDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PattaSubDivision_Get_SLAMonitoringDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FlineserviceNewDetailsCompletedEventHandler(object sender, FlineserviceNewDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlineserviceNewDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FlineserviceNewDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GETAPPROVEDAPPLICATIONPDF_TESTCompletedEventHandler(object sender, GETAPPROVEDAPPLICATIONPDF_TESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GETAPPROVEDAPPLICATIONPDF_TESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GETAPPROVEDAPPLICATIONPDF_TESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDDRApplicationDetailsCompletedEventHandler(object sender, GetDDRApplicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDDRApplicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDDRApplicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDDRApplicationDetailsJSONCompletedEventHandler(object sender, GetDDRApplicationDetailsJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDDRApplicationDetailsJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDDRApplicationDetailsJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GVS_CITIZENSERVICESCOUNTCompletedEventHandler(object sender, GVS_CITIZENSERVICESCOUNTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GVS_CITIZENSERVICESCOUNTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GVS_CITIZENSERVICESCOUNTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SADAREMTransactionIDDetailsCompletedEventHandler(object sender, SADAREMTransactionIDDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SADAREMTransactionIDDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SADAREMTransactionIDDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VSWS_GETTOKENCompletedEventHandler(object sender, VSWS_GETTOKENCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VSWS_GETTOKENCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VSWS_GETTOKENCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VSWS_GETAPPDETAILSCompletedEventHandler(object sender, VSWS_GETAPPDETAILSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VSWS_GETAPPDETAILSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VSWS_GETAPPDETAILSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTDPDetailsByAadharCompletedEventHandler(object sender, GetTDPDetailsByAadharCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTDPDetailsByAadharCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTDPDetailsByAadharCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateApplicationDetails_PrajavaniCompletedEventHandler(object sender, UpdateApplicationDetails_PrajavaniCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationDetails_PrajavaniCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationDetails_PrajavaniCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateApplicationDetails_UnifiedBirthDeathCompletedEventHandler(object sender, UpdateApplicationDetails_UnifiedBirthDeathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationDetails_UnifiedBirthDeathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationDetails_UnifiedBirthDeathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateApplicationDetails_PattadarPassbookCompletedEventHandler(object sender, UpdateApplicationDetails_PattadarPassbookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationDetails_PattadarPassbookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationDetails_PattadarPassbookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateApplicationDetails_TitleDeedCompletedEventHandler(object sender, UpdateApplicationDetails_TitleDeedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationDetails_TitleDeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationDetails_TitleDeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateApplicationDetails_OldAdangalCompletedEventHandler(object sender, UpdateApplicationDetails_OldAdangalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationDetails_OldAdangalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationDetails_OldAdangalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendRevocationDetailsCompletedEventHandler(object sender, SendRevocationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRevocationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRevocationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateApplicationDetails_TSLRCompletedEventHandler(object sender, UpdateApplicationDetails_TSLRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationDetails_TSLRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationDetails_TSLRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTransactionDetailsByServiceIDCompletedEventHandler(object sender, GetTransactionDetailsByServiceIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionDetailsByServiceIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionDetailsByServiceIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCDMAParvadaTransactionDetailsCompletedEventHandler(object sender, GetCDMAParvadaTransactionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCDMAParvadaTransactionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCDMAParvadaTransactionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCCPageCountCompletedEventHandler(object sender, GetCCPageCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCCPageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCCPageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTransactionDetailsByServiceIDDistWiseCompletedEventHandler(object sender, GetTransactionDetailsByServiceIDDistWiseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionDetailsByServiceIDDistWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionDetailsByServiceIDDistWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectAadharApplicationDetailsCompletedEventHandler(object sender, SelectAadharApplicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAadharApplicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAadharApplicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateApplicationDetails_VillageMapCopyCompletedEventHandler(object sender, UpdateApplicationDetails_VillageMapCopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationDetails_VillageMapCopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationDetails_VillageMapCopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectApprovedMUTPPBDetailsCompletedEventHandler(object sender, SelectApprovedMUTPPBDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectApprovedMUTPPBDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectApprovedMUTPPBDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectMUTPPBDetailsCompletedEventHandler(object sender, SelectMUTPPBDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectMUTPPBDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectMUTPPBDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectApplicationNoWiseCompletedEventHandler(object sender, SelectApplicationNoWiseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectApplicationNoWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectApplicationNoWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCourrierDetailsCompletedEventHandler(object sender, UpdateCourrierDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCourrierDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCourrierDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateEPDCLStatusCompletedEventHandler(object sender, UpdateEPDCLStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEPDCLStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEPDCLStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateEPDCLCategoryStatusCompletedEventHandler(object sender, UpdateEPDCLCategoryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEPDCLCategoryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEPDCLCategoryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateEPDCLLoadStatusCompletedEventHandler(object sender, UpdateEPDCLLoadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEPDCLLoadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEPDCLLoadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateEPDCLNameStatusCompletedEventHandler(object sender, UpdateEPDCLNameStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEPDCLNameStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEPDCLNameStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCPDCLStatusCompletedEventHandler(object sender, UpdateCPDCLStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCPDCLStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCPDCLStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCPDCLCategoryStatusCompletedEventHandler(object sender, UpdateCPDCLCategoryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCPDCLCategoryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCPDCLCategoryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCPDCLLoadStatusCompletedEventHandler(object sender, UpdateCPDCLLoadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCPDCLLoadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCPDCLLoadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCPDCLNameStatusCompletedEventHandler(object sender, UpdateCPDCLNameStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCPDCLNameStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCPDCLNameStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateNPDCLDetailsCompletedEventHandler(object sender, UpdateNPDCLDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNPDCLDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNPDCLDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSPDCLNameStatusCompletedEventHandler(object sender, UpdateSPDCLNameStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSPDCLNameStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSPDCLNameStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSPDCLCategoryStatusCompletedEventHandler(object sender, UpdateSPDCLCategoryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSPDCLCategoryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSPDCLCategoryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSPDCLLoadStatusCompletedEventHandler(object sender, UpdateSPDCLLoadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSPDCLLoadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSPDCLLoadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateSPDCLCategoryLoadStatusCompletedEventHandler(object sender, UpdateSPDCLCategoryLoadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSPDCLCategoryLoadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSPDCLCategoryLoadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UserCreationInsertCompletedEventHandler(object sender, UserCreationInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserCreationInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserCreationInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UserCreationInsertFinalCompletedEventHandler(object sender, UserCreationInsertFinalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserCreationInsertFinalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserCreationInsertFinalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AcivateCenterCompletedEventHandler(object sender, AcivateCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcivateCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcivateCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateChannelActiveInactiveDetailsCompletedEventHandler(object sender, UpdateChannelActiveInactiveDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateChannelActiveInactiveDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateChannelActiveInactiveDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ePDSAP_CheckTransactionExistsCompletedEventHandler(object sender, ePDSAP_CheckTransactionExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ePDSAP_CheckTransactionExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ePDSAP_CheckTransactionExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ePDSAP_UpdateRationCardApplicationStatusCompletedEventHandler(object sender, ePDSAP_UpdateRationCardApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ePDSAP_UpdateRationCardApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ePDSAP_UpdateRationCardApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ISES_GetTransactionDetailsByServiceIDCompletedEventHandler(object sender, ISES_GetTransactionDetailsByServiceIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISES_GetTransactionDetailsByServiceIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ISES_GetTransactionDetailsByServiceIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ISES_UpdateApplicationDetailsCompletedEventHandler(object sender, ISES_UpdateApplicationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISES_UpdateApplicationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ISES_UpdateApplicationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ISES_UpdateTransferDetailsCompletedEventHandler(object sender, ISES_UpdateTransferDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISES_UpdateTransferDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ISES_UpdateTransferDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ISES_RevokeApplicationsCompletedEventHandler(object sender, ISES_RevokeApplicationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISES_RevokeApplicationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ISES_RevokeApplicationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ISES_GetTransactionDetailsByServiceID_DataTableTestingCompletedEventHandler(object sender, ISES_GetTransactionDetailsByServiceID_DataTableTestingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISES_GetTransactionDetailsByServiceID_DataTableTestingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ISES_GetTransactionDetailsByServiceID_DataTableTestingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Mutation_StatusUpdateDetailsCompletedEventHandler(object sender, Mutation_StatusUpdateDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Mutation_StatusUpdateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Mutation_StatusUpdateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRC_DetailsCompletedEventHandler(object sender, GetRC_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRC_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRC_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Get_CheckRationCardExistsornotCompletedEventHandler(object sender, Get_CheckRationCardExistsornotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CheckRationCardExistsornotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CheckRationCardExistsornotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void PushUnableToPrintCompletedEventHandler(object sender, PushUnableToPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushUnableToPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushUnableToPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RemarksUnableToPrintPPBCompletedEventHandler(object sender, RemarksUnableToPrintPPBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemarksUnableToPrintPPBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemarksUnableToPrintPPBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RePushProblemsDataCompletedEventHandler(object sender, RePushProblemsDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RePushProblemsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RePushProblemsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectMUTPPBapprovedRejectedDetailsCompletedEventHandler(object sender, SelectMUTPPBapprovedRejectedDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectMUTPPBapprovedRejectedDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectMUTPPBapprovedRejectedDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectStatusforPPBCompletedEventHandler(object sender, SelectStatusforPPBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectStatusforPPBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectStatusforPPBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ePDSAP_ApplicationStatusCompletedEventHandler(object sender, ePDSAP_ApplicationStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ePDSAP_ApplicationStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ePDSAP_ApplicationStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CMDASHBOARD_CDMAReportCompletedEventHandler(object sender, CMDASHBOARD_CDMAReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CMDASHBOARD_CDMAReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CMDASHBOARD_CDMAReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ePDSAP_UpdRCardAppStatusCompletedEventHandler(object sender, ePDSAP_UpdRCardAppStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ePDSAP_UpdRCardAppStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ePDSAP_UpdRCardAppStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateChannelDetailsCompletedEventHandler(object sender, UpdateChannelDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateChannelDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateChannelDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCaste_SubCasteCompletedEventHandler(object sender, GetCaste_SubCasteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCaste_SubCasteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCaste_SubCasteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectRectifiedPPBsbyMRODetailsCompletedEventHandler(object sender, SelectRectifiedPPBsbyMRODetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectRectifiedPPBsbyMRODetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectRectifiedPPBsbyMRODetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectDepartmentDetailsCompletedEventHandler(object sender, SelectDepartmentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectDepartmentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectDepartmentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EPICAadhaarSeedingDetailsCompletedEventHandler(object sender, EPICAadhaarSeedingDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EPICAadhaarSeedingDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EPICAadhaarSeedingDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetTransaportDriversCountCompletedEventHandler(object sender, GetTransaportDriversCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransaportDriversCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransaportDriversCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectApprovedApplicantPPBDetailsCompletedEventHandler(object sender, SelectApprovedApplicantPPBDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectApprovedApplicantPPBDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectApprovedApplicantPPBDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDistrictWiseDriversCountCompletedEventHandler(object sender, GetDistrictWiseDriversCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistrictWiseDriversCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistrictWiseDriversCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCircleWiseDriversCountCompletedEventHandler(object sender, GetCircleWiseDriversCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCircleWiseDriversCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCircleWiseDriversCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMandalWiseDriversCountCompletedEventHandler(object sender, GetMandalWiseDriversCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMandalWiseDriversCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMandalWiseDriversCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateMutationDetails_TESTCompletedEventHandler(object sender, UpdateMutationDetails_TESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMutationDetails_TESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMutationDetails_TESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateApplicationDetails_AdditionofSurveyCompletedEventHandler(object sender, UpdateApplicationDetails_AdditionofSurveyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationDetails_AdditionofSurveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationDetails_AdditionofSurveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendEmailNewCompletedEventHandler(object sender, SendEmailNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RECONCILATION_APONLINETRANSACTIONSCompletedEventHandler(object sender, RECONCILATION_APONLINETRANSACTIONSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RECONCILATION_APONLINETRANSACTIONSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RECONCILATION_APONLINETRANSACTIONSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RECONCILATION_APONLINEDETAILS_SSDGCompletedEventHandler(object sender, RECONCILATION_APONLINEDETAILS_SSDGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RECONCILATION_APONLINEDETAILS_SSDGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RECONCILATION_APONLINEDETAILS_SSDGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RECONCILATION_EFMS_MIS_MEESEVACompletedEventHandler(object sender, RECONCILATION_EFMS_MIS_MEESEVACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RECONCILATION_EFMS_MIS_MEESEVACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RECONCILATION_EFMS_MIS_MEESEVACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RECONCILATION_EFMS_MIS_SSDGCompletedEventHandler(object sender, RECONCILATION_EFMS_MIS_SSDGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RECONCILATION_EFMS_MIS_SSDGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RECONCILATION_EFMS_MIS_SSDGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateApplicationDetails_PattadarPassbook_NewCompletedEventHandler(object sender, UpdateApplicationDetails_PattadarPassbook_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationDetails_PattadarPassbook_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationDetails_PattadarPassbook_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void APOnlineReconcilationTransCountCompletedEventHandler(object sender, APOnlineReconcilationTransCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class APOnlineReconcilationTransCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal APOnlineReconcilationTransCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void APOnlineReconcilationTransCount_SSDGCompletedEventHandler(object sender, APOnlineReconcilationTransCount_SSDGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class APOnlineReconcilationTransCount_SSDGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal APOnlineReconcilationTransCount_SSDGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SelectMUTPPBApproveRejDistDetailsCompletedEventHandler(object sender, SelectMUTPPBApproveRejDistDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectMUTPPBApproveRejDistDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectMUTPPBApproveRejDistDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetPrintingOfTittleDeedApprovedRequestsCompletedEventHandler(object sender, GetPrintingOfTittleDeedApprovedRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintingOfTittleDeedApprovedRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintingOfTittleDeedApprovedRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetApproved_PPBSCompletedEventHandler(object sender, GetApproved_PPBSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApproved_PPBSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApproved_PPBSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFM201617DetailsByDMVCompletedEventHandler(object sender, GetFM201617DetailsByDMVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFM201617DetailsByDMVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFM201617DetailsByDMVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFM201617DetailsByAadharCompletedEventHandler(object sender, GetFM201617DetailsByAadharCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFM201617DetailsByAadharCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFM201617DetailsByAadharCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591